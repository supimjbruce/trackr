{"ast":null,"code":"'use client';import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function _callSuper(t,o,e){return o=_getPrototypeOf(o),_possibleConstructorReturn(t,_isNativeReflectConstruct()?Reflect.construct(o,e||[],_getPrototypeOf(t).constructor):o.apply(t,e));}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}import _objectSpread from\"@babel/runtime/helpers/objectSpread2\";import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";var _excluded=[\"contentContainerStyle\",\"horizontal\",\"onContentSizeChange\",\"refreshControl\",\"stickyHeaderIndices\",\"pagingEnabled\",\"forwardedRef\",\"keyboardDismissMode\",\"onScroll\",\"centerContent\"];import Dimensions from'../Dimensions';import dismissKeyboard from'../../modules/dismissKeyboard';import invariant from'fbjs/lib/invariant';import mergeRefs from'../../modules/mergeRefs';import Platform from'../Platform';import ScrollViewBase from'./ScrollViewBase';import StyleSheet from'../StyleSheet';import TextInputState from'../../modules/TextInputState';import UIManager from'../UIManager';import View from'../View';import React from'react';import warning from'fbjs/lib/warning';var emptyObject={};var IS_ANIMATING_TOUCH_START_THRESHOLD_MS=16;var ScrollView=function(_React$Component){function ScrollView(){var _this;_classCallCheck(this,ScrollView);_this=_callSuper(this,ScrollView,arguments);_this._scrollNodeRef=null;_this._innerViewRef=null;_this.isTouching=false;_this.lastMomentumScrollBeginTime=0;_this.lastMomentumScrollEndTime=0;_this.observedScrollSinceBecomingResponder=false;_this.becameResponderWhileAnimating=false;_this.scrollResponderHandleScrollShouldSetResponder=function(){return _this.isTouching;};_this.scrollResponderHandleStartShouldSetResponderCapture=function(e){return _this.scrollResponderIsAnimating();};_this.scrollResponderHandleTerminationRequest=function(){return!_this.observedScrollSinceBecomingResponder;};_this.scrollResponderHandleTouchEnd=function(e){var nativeEvent=e.nativeEvent;_this.isTouching=nativeEvent.touches.length!==0;_this.props.onTouchEnd&&_this.props.onTouchEnd(e);};_this.scrollResponderHandleResponderRelease=function(e){_this.props.onResponderRelease&&_this.props.onResponderRelease(e);var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();if(!_this.props.keyboardShouldPersistTaps&&currentlyFocusedTextInput!=null&&e.target!==currentlyFocusedTextInput&&!_this.observedScrollSinceBecomingResponder&&!_this.becameResponderWhileAnimating){_this.props.onScrollResponderKeyboardDismissed&&_this.props.onScrollResponderKeyboardDismissed(e);TextInputState.blurTextInput(currentlyFocusedTextInput);}};_this.scrollResponderHandleScroll=function(e){_this.observedScrollSinceBecomingResponder=true;_this.props.onScroll&&_this.props.onScroll(e);};_this.scrollResponderHandleResponderGrant=function(e){_this.observedScrollSinceBecomingResponder=false;_this.props.onResponderGrant&&_this.props.onResponderGrant(e);_this.becameResponderWhileAnimating=_this.scrollResponderIsAnimating();};_this.scrollResponderHandleScrollBeginDrag=function(e){_this.props.onScrollBeginDrag&&_this.props.onScrollBeginDrag(e);};_this.scrollResponderHandleScrollEndDrag=function(e){_this.props.onScrollEndDrag&&_this.props.onScrollEndDrag(e);};_this.scrollResponderHandleMomentumScrollBegin=function(e){_this.lastMomentumScrollBeginTime=Date.now();_this.props.onMomentumScrollBegin&&_this.props.onMomentumScrollBegin(e);};_this.scrollResponderHandleMomentumScrollEnd=function(e){_this.lastMomentumScrollEndTime=Date.now();_this.props.onMomentumScrollEnd&&_this.props.onMomentumScrollEnd(e);};_this.scrollResponderHandleTouchStart=function(e){_this.isTouching=true;_this.props.onTouchStart&&_this.props.onTouchStart(e);};_this.scrollResponderHandleTouchMove=function(e){_this.props.onTouchMove&&_this.props.onTouchMove(e);};_this.scrollResponderIsAnimating=function(){var now=Date.now();var timeSinceLastMomentumScrollEnd=now-_this.lastMomentumScrollEndTime;var isAnimating=timeSinceLastMomentumScrollEnd<IS_ANIMATING_TOUCH_START_THRESHOLD_MS||_this.lastMomentumScrollEndTime<_this.lastMomentumScrollBeginTime;return isAnimating;};_this.scrollResponderScrollTo=function(x,y,animated){if(typeof x==='number'){console.warn('`scrollResponderScrollTo(x, y, animated)` is deprecated. Use `scrollResponderScrollTo({x: 5, y: 5, animated: true})` instead.');}else{var _ref=x||emptyObject;x=_ref.x;y=_ref.y;animated=_ref.animated;}var node=_this.getScrollableNode();var left=x||0;var top=y||0;if(node!=null){if(typeof node.scroll==='function'){node.scroll({top:top,left:left,behavior:!animated?'auto':'smooth'});}else{node.scrollLeft=left;node.scrollTop=top;}}};_this.scrollResponderZoomTo=function(rect,animated){if(\"web\"!=='ios'){invariant('zoomToRect is not implemented');}};_this.scrollResponderScrollNativeHandleToKeyboard=function(nodeHandle,additionalOffset,preventNegativeScrollOffset){_this.additionalScrollOffset=additionalOffset||0;_this.preventNegativeScrollOffset=!!preventNegativeScrollOffset;UIManager.measureLayout(nodeHandle,_this.getInnerViewNode(),_this.scrollResponderTextInputFocusError,_this.scrollResponderInputMeasureAndScrollToKeyboard);};_this.scrollResponderInputMeasureAndScrollToKeyboard=function(left,top,width,height){var keyboardScreenY=Dimensions.get('window').height;if(_this.keyboardWillOpenTo){keyboardScreenY=_this.keyboardWillOpenTo.endCoordinates.screenY;}var scrollOffsetY=top-keyboardScreenY+height+_this.additionalScrollOffset;if(_this.preventNegativeScrollOffset){scrollOffsetY=Math.max(0,scrollOffsetY);}_this.scrollResponderScrollTo({x:0,y:scrollOffsetY,animated:true});_this.additionalOffset=0;_this.preventNegativeScrollOffset=false;};_this.scrollResponderKeyboardWillShow=function(e){_this.keyboardWillOpenTo=e;_this.props.onKeyboardWillShow&&_this.props.onKeyboardWillShow(e);};_this.scrollResponderKeyboardWillHide=function(e){_this.keyboardWillOpenTo=null;_this.props.onKeyboardWillHide&&_this.props.onKeyboardWillHide(e);};_this.scrollResponderKeyboardDidShow=function(e){if(e){_this.keyboardWillOpenTo=e;}_this.props.onKeyboardDidShow&&_this.props.onKeyboardDidShow(e);};_this.scrollResponderKeyboardDidHide=function(e){_this.keyboardWillOpenTo=null;_this.props.onKeyboardDidHide&&_this.props.onKeyboardDidHide(e);};_this.flashScrollIndicators=function(){_this.scrollResponderFlashScrollIndicators();};_this.getScrollResponder=function(){return _this;};_this.getScrollableNode=function(){return _this._scrollNodeRef;};_this.getInnerViewRef=function(){return _this._innerViewRef;};_this.getInnerViewNode=function(){return _this._innerViewRef;};_this.getNativeScrollRef=function(){return _this._scrollNodeRef;};_this.scrollTo=function(y,x,animated){if(typeof y==='number'){console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead.');}else{var _ref2=y||emptyObject;x=_ref2.x;y=_ref2.y;animated=_ref2.animated;}_this.scrollResponderScrollTo({x:x||0,y:y||0,animated:animated!==false});};_this.scrollToEnd=function(options){var animated=(options&&options.animated)!==false;var horizontal=_this.props.horizontal;var scrollResponderNode=_this.getScrollableNode();var x=horizontal?scrollResponderNode.scrollWidth:0;var y=horizontal?0:scrollResponderNode.scrollHeight;_this.scrollResponderScrollTo({x:x,y:y,animated:animated});};_this._handleContentOnLayout=function(e){var _e$nativeEvent$layout=e.nativeEvent.layout,width=_e$nativeEvent$layout.width,height=_e$nativeEvent$layout.height;_this.props.onContentSizeChange(width,height);};_this._handleScroll=function(e){if(\"production\"!=='production'){if(_this.props.onScroll&&_this.props.scrollEventThrottle==null){console.log('You specified `onScroll` on a <ScrollView> but not '+'`scrollEventThrottle`. You will only receive one event. '+'Using `16` you get all the events but be aware that it may '+\"cause frame drops, use a bigger number if you don't need as \"+'much precision.');}}if(_this.props.keyboardDismissMode==='on-drag'){dismissKeyboard();}_this.scrollResponderHandleScroll(e);};_this._setInnerViewRef=function(node){_this._innerViewRef=node;};_this._setScrollNodeRef=function(node){_this._scrollNodeRef=node;if(node!=null){node.getScrollResponder=_this.getScrollResponder;node.getInnerViewNode=_this.getInnerViewNode;node.getInnerViewRef=_this.getInnerViewRef;node.getNativeScrollRef=_this.getNativeScrollRef;node.getScrollableNode=_this.getScrollableNode;node.scrollTo=_this.scrollTo;node.scrollToEnd=_this.scrollToEnd;node.flashScrollIndicators=_this.flashScrollIndicators;node.scrollResponderZoomTo=_this.scrollResponderZoomTo;node.scrollResponderScrollNativeHandleToKeyboard=_this.scrollResponderScrollNativeHandleToKeyboard;}var ref=mergeRefs(_this.props.forwardedRef);ref(node);};return _this;}_inherits(ScrollView,_React$Component);return _createClass(ScrollView,[{key:\"scrollResponderHandleStartShouldSetResponder\",value:function scrollResponderHandleStartShouldSetResponder(){return false;}},{key:\"scrollResponderHandleResponderReject\",value:function scrollResponderHandleResponderReject(){warning(false,\"ScrollView doesn't take rejection well - scrolls anyway\");}},{key:\"scrollResponderFlashScrollIndicators\",value:function scrollResponderFlashScrollIndicators(){}},{key:\"scrollResponderTextInputFocusError\",value:function scrollResponderTextInputFocusError(e){console.error('Error measuring text field: ',e);}},{key:\"render\",value:function render(){var _this$props=this.props,contentContainerStyle=_this$props.contentContainerStyle,horizontal=_this$props.horizontal,onContentSizeChange=_this$props.onContentSizeChange,refreshControl=_this$props.refreshControl,stickyHeaderIndices=_this$props.stickyHeaderIndices,pagingEnabled=_this$props.pagingEnabled,forwardedRef=_this$props.forwardedRef,keyboardDismissMode=_this$props.keyboardDismissMode,onScroll=_this$props.onScroll,centerContent=_this$props.centerContent,other=_objectWithoutPropertiesLoose(_this$props,_excluded);if(\"production\"!=='production'&&this.props.style){var style=StyleSheet.flatten(this.props.style);var childLayoutProps=['alignItems','justifyContent'].filter(function(prop){return style&&style[prop]!==undefined;});invariant(childLayoutProps.length===0,\"ScrollView child layout (\"+JSON.stringify(childLayoutProps)+\") \"+'must be applied through the contentContainerStyle prop.');}var contentSizeChangeProps={};if(onContentSizeChange){contentSizeChangeProps={onLayout:this._handleContentOnLayout};}var hasStickyHeaderIndices=!horizontal&&Array.isArray(stickyHeaderIndices);var children=hasStickyHeaderIndices||pagingEnabled?React.Children.map(this.props.children,function(child,i){var isSticky=hasStickyHeaderIndices&&stickyHeaderIndices.indexOf(i)>-1;if(child!=null&&(isSticky||pagingEnabled)){return React.createElement(View,{style:[isSticky&&styles.stickyHeader,pagingEnabled&&styles.pagingEnabledChild]},child);}else{return child;}}):this.props.children;var contentContainer=React.createElement(View,_extends({},contentSizeChangeProps,{children:children,collapsable:false,ref:this._setInnerViewRef,style:[horizontal&&styles.contentContainerHorizontal,centerContent&&styles.contentContainerCenterContent,contentContainerStyle]}));var baseStyle=horizontal?styles.baseHorizontal:styles.baseVertical;var pagingEnabledStyle=horizontal?styles.pagingEnabledHorizontal:styles.pagingEnabledVertical;var props=_objectSpread(_objectSpread({},other),{},{style:[baseStyle,pagingEnabled&&pagingEnabledStyle,this.props.style],onTouchStart:this.scrollResponderHandleTouchStart,onTouchMove:this.scrollResponderHandleTouchMove,onTouchEnd:this.scrollResponderHandleTouchEnd,onScrollBeginDrag:this.scrollResponderHandleScrollBeginDrag,onScrollEndDrag:this.scrollResponderHandleScrollEndDrag,onMomentumScrollBegin:this.scrollResponderHandleMomentumScrollBegin,onMomentumScrollEnd:this.scrollResponderHandleMomentumScrollEnd,onStartShouldSetResponder:this.scrollResponderHandleStartShouldSetResponder,onStartShouldSetResponderCapture:this.scrollResponderHandleStartShouldSetResponderCapture,onScrollShouldSetResponder:this.scrollResponderHandleScrollShouldSetResponder,onScroll:this._handleScroll,onResponderGrant:this.scrollResponderHandleResponderGrant,onResponderTerminationRequest:this.scrollResponderHandleTerminationRequest,onResponderTerminate:this.scrollResponderHandleTerminate,onResponderRelease:this.scrollResponderHandleResponderRelease,onResponderReject:this.scrollResponderHandleResponderReject});var ScrollViewClass=ScrollViewBase;invariant(ScrollViewClass!==undefined,'ScrollViewClass must not be undefined');var scrollView=React.createElement(ScrollViewClass,_extends({},props,{ref:this._setScrollNodeRef}),contentContainer);if(refreshControl){return React.cloneElement(refreshControl,{style:props.style},scrollView);}return scrollView;}}]);}(React.Component);var commonStyle={flexGrow:1,flexShrink:1,transform:'translateZ(0)',WebkitOverflowScrolling:'touch'};var styles=StyleSheet.create({baseVertical:_objectSpread(_objectSpread({},commonStyle),{},{flexDirection:'column',overflowX:'hidden',overflowY:'auto'}),baseHorizontal:_objectSpread(_objectSpread({},commonStyle),{},{flexDirection:'row',overflowX:'auto',overflowY:'hidden'}),contentContainerHorizontal:{flexDirection:'row'},contentContainerCenterContent:{justifyContent:'center',flexGrow:1},stickyHeader:{position:'sticky',top:0,zIndex:10},pagingEnabledHorizontal:{scrollSnapType:'x mandatory'},pagingEnabledVertical:{scrollSnapType:'y mandatory'},pagingEnabledChild:{scrollSnapAlign:'start'}});var ForwardedScrollView=React.forwardRef(function(props,forwardedRef){return React.createElement(ScrollView,_extends({},props,{forwardedRef:forwardedRef}));});ForwardedScrollView.displayName='ScrollView';export default ForwardedScrollView;","map":{"version":3,"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","_callSuper","t","o","e","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","_objectSpread","_extends","_objectWithoutPropertiesLoose","_excluded","Dimensions","dismissKeyboard","invariant","mergeRefs","Platform","ScrollViewBase","StyleSheet","TextInputState","UIManager","View","React","warning","emptyObject","IS_ANIMATING_TOUCH_START_THRESHOLD_MS","ScrollView","_React$Component","_this","arguments","_scrollNodeRef","_innerViewRef","isTouching","lastMomentumScrollBeginTime","lastMomentumScrollEndTime","observedScrollSinceBecomingResponder","becameResponderWhileAnimating","scrollResponderHandleScrollShouldSetResponder","scrollResponderHandleStartShouldSetResponderCapture","scrollResponderIsAnimating","scrollResponderHandleTerminationRequest","scrollResponderHandleTouchEnd","nativeEvent","touches","length","props","onTouchEnd","scrollResponderHandleResponderRelease","onResponderRelease","currentlyFocusedTextInput","currentlyFocusedField","keyboardShouldPersistTaps","target","onScrollResponderKeyboardDismissed","blurTextInput","scrollResponderHandleScroll","onScroll","scrollResponderHandleResponderGrant","onResponderGrant","scrollResponderHandleScrollBeginDrag","onScrollBeginDrag","scrollResponderHandleScrollEndDrag","onScrollEndDrag","scrollResponderHandleMomentumScrollBegin","Date","now","onMomentumScrollBegin","scrollResponderHandleMomentumScrollEnd","onMomentumScrollEnd","scrollResponderHandleTouchStart","onTouchStart","scrollResponderHandleTouchMove","onTouchMove","timeSinceLastMomentumScrollEnd","isAnimating","scrollResponderScrollTo","x","y","animated","console","warn","_ref","node","getScrollableNode","left","top","scroll","behavior","scrollLeft","scrollTop","scrollResponderZoomTo","rect","scrollResponderScrollNativeHandleToKeyboard","nodeHandle","additionalOffset","preventNegativeScrollOffset","additionalScrollOffset","measureLayout","getInnerViewNode","scrollResponderTextInputFocusError","scrollResponderInputMeasureAndScrollToKeyboard","width","height","keyboardScreenY","get","keyboardWillOpenTo","endCoordinates","screenY","scrollOffsetY","Math","max","scrollResponderKeyboardWillShow","onKeyboardWillShow","scrollResponderKeyboardWillHide","onKeyboardWillHide","scrollResponderKeyboardDidShow","onKeyboardDidShow","scrollResponderKeyboardDidHide","onKeyboardDidHide","flashScrollIndicators","scrollResponderFlashScrollIndicators","getScrollResponder","getInnerViewRef","getNativeScrollRef","scrollTo","_ref2","scrollToEnd","options","horizontal","scrollResponderNode","scrollWidth","scrollHeight","_handleContentOnLayout","_e$nativeEvent$layout","layout","onContentSizeChange","_handleScroll","scrollEventThrottle","log","keyboardDismissMode","_setInnerViewRef","_setScrollNodeRef","ref","forwardedRef","key","value","scrollResponderHandleStartShouldSetResponder","scrollResponderHandleResponderReject","error","render","_this$props","contentContainerStyle","refreshControl","stickyHeaderIndices","pagingEnabled","centerContent","other","style","flatten","childLayoutProps","filter","prop","undefined","JSON","stringify","contentSizeChangeProps","onLayout","hasStickyHeaderIndices","Array","isArray","children","Children","map","child","i","isSticky","indexOf","createElement","styles","stickyHeader","pagingEnabledChild","contentContainer","collapsable","contentContainerHorizontal","contentContainerCenterContent","baseStyle","baseHorizontal","baseVertical","pagingEnabledStyle","pagingEnabledHorizontal","pagingEnabledVertical","onStartShouldSetResponder","onStartShouldSetResponderCapture","onScrollShouldSetResponder","onResponderTerminationRequest","onResponderTerminate","scrollResponderHandleTerminate","onResponderReject","ScrollViewClass","scrollView","cloneElement","Component","commonStyle","flexGrow","flexShrink","transform","WebkitOverflowScrolling","create","flexDirection","overflowX","overflowY","justifyContent","position","zIndex","scrollSnapType","scrollSnapAlign","ForwardedScrollView","forwardRef","displayName"],"sources":["/Users/jonathanbruce/Coding/trackr/node_modules/react-native-web/dist/exports/ScrollView/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use client';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"contentContainerStyle\", \"horizontal\", \"onContentSizeChange\", \"refreshControl\", \"stickyHeaderIndices\", \"pagingEnabled\", \"forwardedRef\", \"keyboardDismissMode\", \"onScroll\", \"centerContent\"];\nimport Dimensions from '../Dimensions';\nimport dismissKeyboard from '../../modules/dismissKeyboard';\nimport invariant from 'fbjs/lib/invariant';\nimport mergeRefs from '../../modules/mergeRefs';\nimport Platform from '../Platform';\nimport ScrollViewBase from './ScrollViewBase';\nimport StyleSheet from '../StyleSheet';\nimport TextInputState from '../../modules/TextInputState';\nimport UIManager from '../UIManager';\nimport View from '../View';\nimport React from 'react';\nimport warning from 'fbjs/lib/warning';\nvar emptyObject = {};\nvar IS_ANIMATING_TOUCH_START_THRESHOLD_MS = 16;\nclass ScrollView extends React.Component {\n  constructor() {\n    super(...arguments);\n    this._scrollNodeRef = null;\n    this._innerViewRef = null;\n    this.isTouching = false;\n    this.lastMomentumScrollBeginTime = 0;\n    this.lastMomentumScrollEndTime = 0;\n    this.observedScrollSinceBecomingResponder = false;\n    this.becameResponderWhileAnimating = false;\n    this.scrollResponderHandleScrollShouldSetResponder = () => {\n      return this.isTouching;\n    };\n    this.scrollResponderHandleStartShouldSetResponderCapture = e => {\n      // First see if we want to eat taps while the keyboard is up\n      // var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();\n      // if (!this.props.keyboardShouldPersistTaps &&\n      //   currentlyFocusedTextInput != null &&\n      //   e.target !== currentlyFocusedTextInput) {\n      //   return true;\n      // }\n      return this.scrollResponderIsAnimating();\n    };\n    this.scrollResponderHandleTerminationRequest = () => {\n      return !this.observedScrollSinceBecomingResponder;\n    };\n    this.scrollResponderHandleTouchEnd = e => {\n      var nativeEvent = e.nativeEvent;\n      this.isTouching = nativeEvent.touches.length !== 0;\n      this.props.onTouchEnd && this.props.onTouchEnd(e);\n    };\n    this.scrollResponderHandleResponderRelease = e => {\n      this.props.onResponderRelease && this.props.onResponderRelease(e);\n\n      // By default scroll views will unfocus a textField\n      // if another touch occurs outside of it\n      var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();\n      if (!this.props.keyboardShouldPersistTaps && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput && !this.observedScrollSinceBecomingResponder && !this.becameResponderWhileAnimating) {\n        this.props.onScrollResponderKeyboardDismissed && this.props.onScrollResponderKeyboardDismissed(e);\n        TextInputState.blurTextInput(currentlyFocusedTextInput);\n      }\n    };\n    this.scrollResponderHandleScroll = e => {\n      this.observedScrollSinceBecomingResponder = true;\n      this.props.onScroll && this.props.onScroll(e);\n    };\n    this.scrollResponderHandleResponderGrant = e => {\n      this.observedScrollSinceBecomingResponder = false;\n      this.props.onResponderGrant && this.props.onResponderGrant(e);\n      this.becameResponderWhileAnimating = this.scrollResponderIsAnimating();\n    };\n    this.scrollResponderHandleScrollBeginDrag = e => {\n      this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n    };\n    this.scrollResponderHandleScrollEndDrag = e => {\n      this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n    };\n    this.scrollResponderHandleMomentumScrollBegin = e => {\n      this.lastMomentumScrollBeginTime = Date.now();\n      this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n    };\n    this.scrollResponderHandleMomentumScrollEnd = e => {\n      this.lastMomentumScrollEndTime = Date.now();\n      this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n    };\n    this.scrollResponderHandleTouchStart = e => {\n      this.isTouching = true;\n      this.props.onTouchStart && this.props.onTouchStart(e);\n    };\n    this.scrollResponderHandleTouchMove = e => {\n      this.props.onTouchMove && this.props.onTouchMove(e);\n    };\n    this.scrollResponderIsAnimating = () => {\n      var now = Date.now();\n      var timeSinceLastMomentumScrollEnd = now - this.lastMomentumScrollEndTime;\n      var isAnimating = timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || this.lastMomentumScrollEndTime < this.lastMomentumScrollBeginTime;\n      return isAnimating;\n    };\n    this.scrollResponderScrollTo = (x, y, animated) => {\n      if (typeof x === 'number') {\n        console.warn('`scrollResponderScrollTo(x, y, animated)` is deprecated. Use `scrollResponderScrollTo({x: 5, y: 5, animated: true})` instead.');\n      } else {\n        var _ref = x || emptyObject;\n        x = _ref.x;\n        y = _ref.y;\n        animated = _ref.animated;\n      }\n      var node = this.getScrollableNode();\n      var left = x || 0;\n      var top = y || 0;\n      if (node != null) {\n        if (typeof node.scroll === 'function') {\n          node.scroll({\n            top,\n            left,\n            behavior: !animated ? 'auto' : 'smooth'\n          });\n        } else {\n          node.scrollLeft = left;\n          node.scrollTop = top;\n        }\n      }\n    };\n    this.scrollResponderZoomTo = (rect, animated) => {\n      if (Platform.OS !== 'ios') {\n        invariant('zoomToRect is not implemented');\n      }\n    };\n    this.scrollResponderScrollNativeHandleToKeyboard = (nodeHandle, additionalOffset, preventNegativeScrollOffset) => {\n      this.additionalScrollOffset = additionalOffset || 0;\n      this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;\n      UIManager.measureLayout(nodeHandle, this.getInnerViewNode(), this.scrollResponderTextInputFocusError, this.scrollResponderInputMeasureAndScrollToKeyboard);\n    };\n    this.scrollResponderInputMeasureAndScrollToKeyboard = (left, top, width, height) => {\n      var keyboardScreenY = Dimensions.get('window').height;\n      if (this.keyboardWillOpenTo) {\n        keyboardScreenY = this.keyboardWillOpenTo.endCoordinates.screenY;\n      }\n      var scrollOffsetY = top - keyboardScreenY + height + this.additionalScrollOffset;\n\n      // By default, this can scroll with negative offset, pulling the content\n      // down so that the target component's bottom meets the keyboard's top.\n      // If requested otherwise, cap the offset at 0 minimum to avoid content\n      // shifting down.\n      if (this.preventNegativeScrollOffset) {\n        scrollOffsetY = Math.max(0, scrollOffsetY);\n      }\n      this.scrollResponderScrollTo({\n        x: 0,\n        y: scrollOffsetY,\n        animated: true\n      });\n      this.additionalOffset = 0;\n      this.preventNegativeScrollOffset = false;\n    };\n    this.scrollResponderKeyboardWillShow = e => {\n      this.keyboardWillOpenTo = e;\n      this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);\n    };\n    this.scrollResponderKeyboardWillHide = e => {\n      this.keyboardWillOpenTo = null;\n      this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);\n    };\n    this.scrollResponderKeyboardDidShow = e => {\n      // TODO(7693961): The event for DidShow is not available on iOS yet.\n      // Use the one from WillShow and do not assign.\n      if (e) {\n        this.keyboardWillOpenTo = e;\n      }\n      this.props.onKeyboardDidShow && this.props.onKeyboardDidShow(e);\n    };\n    this.scrollResponderKeyboardDidHide = e => {\n      this.keyboardWillOpenTo = null;\n      this.props.onKeyboardDidHide && this.props.onKeyboardDidHide(e);\n    };\n    this.flashScrollIndicators = () => {\n      this.scrollResponderFlashScrollIndicators();\n    };\n    this.getScrollResponder = () => {\n      return this;\n    };\n    this.getScrollableNode = () => {\n      return this._scrollNodeRef;\n    };\n    this.getInnerViewRef = () => {\n      return this._innerViewRef;\n    };\n    this.getInnerViewNode = () => {\n      return this._innerViewRef;\n    };\n    this.getNativeScrollRef = () => {\n      return this._scrollNodeRef;\n    };\n    this.scrollTo = (y, x, animated) => {\n      if (typeof y === 'number') {\n        console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead.');\n      } else {\n        var _ref2 = y || emptyObject;\n        x = _ref2.x;\n        y = _ref2.y;\n        animated = _ref2.animated;\n      }\n      this.scrollResponderScrollTo({\n        x: x || 0,\n        y: y || 0,\n        animated: animated !== false\n      });\n    };\n    this.scrollToEnd = options => {\n      // Default to true\n      var animated = (options && options.animated) !== false;\n      var horizontal = this.props.horizontal;\n      var scrollResponderNode = this.getScrollableNode();\n      var x = horizontal ? scrollResponderNode.scrollWidth : 0;\n      var y = horizontal ? 0 : scrollResponderNode.scrollHeight;\n      this.scrollResponderScrollTo({\n        x,\n        y,\n        animated\n      });\n    };\n    this._handleContentOnLayout = e => {\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n        width = _e$nativeEvent$layout.width,\n        height = _e$nativeEvent$layout.height;\n      this.props.onContentSizeChange(width, height);\n    };\n    this._handleScroll = e => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.props.onScroll && this.props.scrollEventThrottle == null) {\n          console.log('You specified `onScroll` on a <ScrollView> but not ' + '`scrollEventThrottle`. You will only receive one event. ' + 'Using `16` you get all the events but be aware that it may ' + \"cause frame drops, use a bigger number if you don't need as \" + 'much precision.');\n        }\n      }\n      if (this.props.keyboardDismissMode === 'on-drag') {\n        dismissKeyboard();\n      }\n      this.scrollResponderHandleScroll(e);\n    };\n    this._setInnerViewRef = node => {\n      this._innerViewRef = node;\n    };\n    this._setScrollNodeRef = node => {\n      this._scrollNodeRef = node;\n      // ScrollView needs to add more methods to the hostNode in addition to those\n      // added by `usePlatformMethods`. This is temporarily until an API like\n      // `ScrollView.scrollTo(hostNode, { x, y })` is added to React Native.\n      if (node != null) {\n        node.getScrollResponder = this.getScrollResponder;\n        node.getInnerViewNode = this.getInnerViewNode;\n        node.getInnerViewRef = this.getInnerViewRef;\n        node.getNativeScrollRef = this.getNativeScrollRef;\n        node.getScrollableNode = this.getScrollableNode;\n        node.scrollTo = this.scrollTo;\n        node.scrollToEnd = this.scrollToEnd;\n        node.flashScrollIndicators = this.flashScrollIndicators;\n        node.scrollResponderZoomTo = this.scrollResponderZoomTo;\n        node.scrollResponderScrollNativeHandleToKeyboard = this.scrollResponderScrollNativeHandleToKeyboard;\n      }\n      var ref = mergeRefs(this.props.forwardedRef);\n      ref(node);\n    };\n  }\n  /**\n   * ------------------------------------------------------\n   * START SCROLLRESPONDER\n   * ------------------------------------------------------\n   */\n  // Reset to false every time becomes responder. This is used to:\n  // - Determine if the scroll view has been scrolled and therefore should\n  // refuse to give up its responder lock.\n  // - Determine if releasing should dismiss the keyboard when we are in\n  // tap-to-dismiss mode (!this.props.keyboardShouldPersistTaps).\n  /**\n   * Invoke this from an `onScroll` event.\n   */\n  /**\n   * Merely touch starting is not sufficient for a scroll view to become the\n   * responder. Being the \"responder\" means that the very next touch move/end\n   * event will result in an action/movement.\n   *\n   * Invoke this from an `onStartShouldSetResponder` event.\n   *\n   * `onStartShouldSetResponder` is used when the next move/end will trigger\n   * some UI movement/action, but when you want to yield priority to views\n   * nested inside of the view.\n   *\n   * There may be some cases where scroll views actually should return `true`\n   * from `onStartShouldSetResponder`: Any time we are detecting a standard tap\n   * that gives priority to nested views.\n   *\n   * - If a single tap on the scroll view triggers an action such as\n   *   recentering a map style view yet wants to give priority to interaction\n   *   views inside (such as dropped pins or labels), then we would return true\n   *   from this method when there is a single touch.\n   *\n   * - Similar to the previous case, if a two finger \"tap\" should trigger a\n   *   zoom, we would check the `touches` count, and if `>= 2`, we would return\n   *   true.\n   *\n   */\n  scrollResponderHandleStartShouldSetResponder() {\n    return false;\n  }\n\n  /**\n   * There are times when the scroll view wants to become the responder\n   * (meaning respond to the next immediate `touchStart/touchEnd`), in a way\n   * that *doesn't* give priority to nested views (hence the capture phase):\n   *\n   * - Currently animating.\n   * - Tapping anywhere that is not the focused input, while the keyboard is\n   *   up (which should dismiss the keyboard).\n   *\n   * Invoke this from an `onStartShouldSetResponderCapture` event.\n   */\n\n  /**\n   * Invoke this from an `onResponderReject` event.\n   *\n   * Some other element is not yielding its role as responder. Normally, we'd\n   * just disable the `UIScrollView`, but a touch has already began on it, the\n   * `UIScrollView` will not accept being disabled after that. The easiest\n   * solution for now is to accept the limitation of disallowing this\n   * altogether. To improve this, find a way to disable the `UIScrollView` after\n   * a touch has already started.\n   */\n  scrollResponderHandleResponderReject() {\n    warning(false, \"ScrollView doesn't take rejection well - scrolls anyway\");\n  }\n\n  /**\n   * We will allow the scroll view to give up its lock iff it acquired the lock\n   * during an animation. This is a very useful default that happens to satisfy\n   * many common user experiences.\n   *\n   * - Stop a scroll on the left edge, then turn that into an outer view's\n   *   backswipe.\n   * - Stop a scroll mid-bounce at the top, continue pulling to have the outer\n   *   view dismiss.\n   * - However, without catching the scroll view mid-bounce (while it is\n   *   motionless), if you drag far enough for the scroll view to become\n   *   responder (and therefore drag the scroll view a bit), any backswipe\n   *   navigation of a swipe gesture higher in the view hierarchy, should be\n   *   rejected.\n   */\n\n  /**\n   * Invoke this from an `onTouchEnd` event.\n   *\n   * @param {SyntheticEvent} e Event.\n   */\n\n  /**\n   * Invoke this from an `onResponderRelease` event.\n   */\n\n  /**\n   * Invoke this from an `onResponderGrant` event.\n   */\n\n  /**\n   * Unfortunately, `onScrollBeginDrag` also fires when *stopping* the scroll\n   * animation, and there's not an easy way to distinguish a drag vs. stopping\n   * momentum.\n   *\n   * Invoke this from an `onScrollBeginDrag` event.\n   */\n\n  /**\n   * Invoke this from an `onScrollEndDrag` event.\n   */\n\n  /**\n   * Invoke this from an `onMomentumScrollBegin` event.\n   */\n\n  /**\n   * Invoke this from an `onMomentumScrollEnd` event.\n   */\n\n  /**\n   * Invoke this from an `onTouchStart` event.\n   *\n   * Since we know that the `SimpleEventPlugin` occurs later in the plugin\n   * order, after `ResponderEventPlugin`, we can detect that we were *not*\n   * permitted to be the responder (presumably because a contained view became\n   * responder). The `onResponderReject` won't fire in that case - it only\n   * fires when a *current* responder rejects our request.\n   *\n   * @param {SyntheticEvent} e Touch Start event.\n   */\n\n  /**\n   * Invoke this from an `onTouchMove` event.\n   *\n   * Since we know that the `SimpleEventPlugin` occurs later in the plugin\n   * order, after `ResponderEventPlugin`, we can detect that we were *not*\n   * permitted to be the responder (presumably because a contained view became\n   * responder). The `onResponderReject` won't fire in that case - it only\n   * fires when a *current* responder rejects our request.\n   *\n   * @param {SyntheticEvent} e Touch Start event.\n   */\n\n  /**\n   * A helper function for this class that lets us quickly determine if the\n   * view is currently animating. This is particularly useful to know when\n   * a touch has just started or ended.\n   */\n\n  /**\n   * A helper function to scroll to a specific point in the scrollview.\n   * This is currently used to help focus on child textviews, but can also\n   * be used to quickly scroll to any element we want to focus. Syntax:\n   *\n   * scrollResponderScrollTo(options: {x: number = 0; y: number = 0; animated: boolean = true})\n   *\n   * Note: The weird argument signature is due to the fact that, for historical reasons,\n   * the function also accepts separate arguments as as alternative to the options object.\n   * This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.\n   */\n\n  /**\n   * A helper function to zoom to a specific rect in the scrollview. The argument has the shape\n   * {x: number; y: number; width: number; height: number; animated: boolean = true}\n   *\n   * @platform ios\n   */\n\n  /**\n   * Displays the scroll indicators momentarily.\n   */\n  scrollResponderFlashScrollIndicators() {}\n\n  /**\n   * This method should be used as the callback to onFocus in a TextInputs'\n   * parent view. Note that any module using this mixin needs to return\n   * the parent view's ref in getScrollViewRef() in order to use this method.\n   * @param {any} nodeHandle The TextInput node handle\n   * @param {number} additionalOffset The scroll view's top \"contentInset\".\n   *        Default is 0.\n   * @param {bool} preventNegativeScrolling Whether to allow pulling the content\n   *        down to make it meet the keyboard's top. Default is false.\n   */\n\n  /**\n   * The calculations performed here assume the scroll view takes up the entire\n   * screen - even if has some content inset. We then measure the offsets of the\n   * keyboard, and compensate both for the scroll view's \"contentInset\".\n   *\n   * @param {number} left Position of input w.r.t. table view.\n   * @param {number} top Position of input w.r.t. table view.\n   * @param {number} width Width of the text input.\n   * @param {number} height Height of the text input.\n   */\n\n  scrollResponderTextInputFocusError(e) {\n    console.error('Error measuring text field: ', e);\n  }\n\n  /**\n   * Warning, this may be called several times for a single keyboard opening.\n   * It's best to store the information in this method and then take any action\n   * at a later point (either in `keyboardDidShow` or other).\n   *\n   * Here's the order that events occur in:\n   * - focus\n   * - willShow {startCoordinates, endCoordinates} several times\n   * - didShow several times\n   * - blur\n   * - willHide {startCoordinates, endCoordinates} several times\n   * - didHide several times\n   *\n   * The `ScrollResponder` providesModule callbacks for each of these events.\n   * Even though any user could have easily listened to keyboard events\n   * themselves, using these `props` callbacks ensures that ordering of events\n   * is consistent - and not dependent on the order that the keyboard events are\n   * subscribed to. This matters when telling the scroll view to scroll to where\n   * the keyboard is headed - the scroll responder better have been notified of\n   * the keyboard destination before being instructed to scroll to where the\n   * keyboard will be. Stick to the `ScrollResponder` callbacks, and everything\n   * will work.\n   *\n   * WARNING: These callbacks will fire even if a keyboard is displayed in a\n   * different navigation pane. Filter out the events to determine if they are\n   * relevant to you. (For example, only if you receive these callbacks after\n   * you had explicitly focused a node etc).\n   */\n\n  /**\n   * ------------------------------------------------------\n   * END SCROLLRESPONDER\n   * ------------------------------------------------------\n   */\n\n  /**\n   * Returns a reference to the underlying scroll responder, which supports\n   * operations like `scrollTo`. All ScrollView-like components should\n   * implement this method so that they can be composed while providing access\n   * to the underlying scroll responder's methods.\n   */\n\n  /**\n   * Scrolls to a given x, y offset, either immediately or with a smooth animation.\n   * Syntax:\n   *\n   * scrollTo(options: {x: number = 0; y: number = 0; animated: boolean = true})\n   *\n   * Note: The weird argument signature is due to the fact that, for historical reasons,\n   * the function also accepts separate arguments as as alternative to the options object.\n   * This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.\n   */\n\n  /**\n   * If this is a vertical ScrollView scrolls to the bottom.\n   * If this is a horizontal ScrollView scrolls to the right.\n   *\n   * Use `scrollToEnd({ animated: true })` for smooth animated scrolling,\n   * `scrollToEnd({ animated: false })` for immediate scrolling.\n   * If no options are passed, `animated` defaults to true.\n   */\n\n  render() {\n    var _this$props = this.props,\n      contentContainerStyle = _this$props.contentContainerStyle,\n      horizontal = _this$props.horizontal,\n      onContentSizeChange = _this$props.onContentSizeChange,\n      refreshControl = _this$props.refreshControl,\n      stickyHeaderIndices = _this$props.stickyHeaderIndices,\n      pagingEnabled = _this$props.pagingEnabled,\n      forwardedRef = _this$props.forwardedRef,\n      keyboardDismissMode = _this$props.keyboardDismissMode,\n      onScroll = _this$props.onScroll,\n      centerContent = _this$props.centerContent,\n      other = _objectWithoutPropertiesLoose(_this$props, _excluded);\n    if (process.env.NODE_ENV !== 'production' && this.props.style) {\n      var style = StyleSheet.flatten(this.props.style);\n      var childLayoutProps = ['alignItems', 'justifyContent'].filter(prop => style && style[prop] !== undefined);\n      invariant(childLayoutProps.length === 0, \"ScrollView child layout (\" + JSON.stringify(childLayoutProps) + \") \" + 'must be applied through the contentContainerStyle prop.');\n    }\n    var contentSizeChangeProps = {};\n    if (onContentSizeChange) {\n      contentSizeChangeProps = {\n        onLayout: this._handleContentOnLayout\n      };\n    }\n    var hasStickyHeaderIndices = !horizontal && Array.isArray(stickyHeaderIndices);\n    var children = hasStickyHeaderIndices || pagingEnabled ? React.Children.map(this.props.children, (child, i) => {\n      var isSticky = hasStickyHeaderIndices && stickyHeaderIndices.indexOf(i) > -1;\n      if (child != null && (isSticky || pagingEnabled)) {\n        return /*#__PURE__*/React.createElement(View, {\n          style: [isSticky && styles.stickyHeader, pagingEnabled && styles.pagingEnabledChild]\n        }, child);\n      } else {\n        return child;\n      }\n    }) : this.props.children;\n    var contentContainer = /*#__PURE__*/React.createElement(View, _extends({}, contentSizeChangeProps, {\n      children: children,\n      collapsable: false,\n      ref: this._setInnerViewRef,\n      style: [horizontal && styles.contentContainerHorizontal, centerContent && styles.contentContainerCenterContent, contentContainerStyle]\n    }));\n    var baseStyle = horizontal ? styles.baseHorizontal : styles.baseVertical;\n    var pagingEnabledStyle = horizontal ? styles.pagingEnabledHorizontal : styles.pagingEnabledVertical;\n    var props = _objectSpread(_objectSpread({}, other), {}, {\n      style: [baseStyle, pagingEnabled && pagingEnabledStyle, this.props.style],\n      onTouchStart: this.scrollResponderHandleTouchStart,\n      onTouchMove: this.scrollResponderHandleTouchMove,\n      onTouchEnd: this.scrollResponderHandleTouchEnd,\n      onScrollBeginDrag: this.scrollResponderHandleScrollBeginDrag,\n      onScrollEndDrag: this.scrollResponderHandleScrollEndDrag,\n      onMomentumScrollBegin: this.scrollResponderHandleMomentumScrollBegin,\n      onMomentumScrollEnd: this.scrollResponderHandleMomentumScrollEnd,\n      onStartShouldSetResponder: this.scrollResponderHandleStartShouldSetResponder,\n      onStartShouldSetResponderCapture: this.scrollResponderHandleStartShouldSetResponderCapture,\n      onScrollShouldSetResponder: this.scrollResponderHandleScrollShouldSetResponder,\n      onScroll: this._handleScroll,\n      onResponderGrant: this.scrollResponderHandleResponderGrant,\n      onResponderTerminationRequest: this.scrollResponderHandleTerminationRequest,\n      onResponderTerminate: this.scrollResponderHandleTerminate,\n      onResponderRelease: this.scrollResponderHandleResponderRelease,\n      onResponderReject: this.scrollResponderHandleResponderReject\n    });\n    var ScrollViewClass = ScrollViewBase;\n    invariant(ScrollViewClass !== undefined, 'ScrollViewClass must not be undefined');\n    var scrollView = /*#__PURE__*/React.createElement(ScrollViewClass, _extends({}, props, {\n      ref: this._setScrollNodeRef\n    }), contentContainer);\n    if (refreshControl) {\n      return /*#__PURE__*/React.cloneElement(refreshControl, {\n        style: props.style\n      }, scrollView);\n    }\n    return scrollView;\n  }\n}\nvar commonStyle = {\n  flexGrow: 1,\n  flexShrink: 1,\n  // Enable hardware compositing in modern browsers.\n  // Creates a new layer with its own backing surface that can significantly\n  // improve scroll performance.\n  transform: 'translateZ(0)',\n  // iOS native scrolling\n  WebkitOverflowScrolling: 'touch'\n};\nvar styles = StyleSheet.create({\n  baseVertical: _objectSpread(_objectSpread({}, commonStyle), {}, {\n    flexDirection: 'column',\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  }),\n  baseHorizontal: _objectSpread(_objectSpread({}, commonStyle), {}, {\n    flexDirection: 'row',\n    overflowX: 'auto',\n    overflowY: 'hidden'\n  }),\n  contentContainerHorizontal: {\n    flexDirection: 'row'\n  },\n  contentContainerCenterContent: {\n    justifyContent: 'center',\n    flexGrow: 1\n  },\n  stickyHeader: {\n    position: 'sticky',\n    top: 0,\n    zIndex: 10\n  },\n  pagingEnabledHorizontal: {\n    scrollSnapType: 'x mandatory'\n  },\n  pagingEnabledVertical: {\n    scrollSnapType: 'y mandatory'\n  },\n  pagingEnabledChild: {\n    scrollSnapAlign: 'start'\n  }\n});\nvar ForwardedScrollView = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  return /*#__PURE__*/React.createElement(ScrollView, _extends({}, props, {\n    forwardedRef: forwardedRef\n  }));\n});\nForwardedScrollView.displayName = 'ScrollView';\nexport default ForwardedScrollView;"],"mappings":"AAUA,YAAY,CAAC,OAAAA,eAAA,oDAAAC,YAAA,iDAAAC,0BAAA,+DAAAC,eAAA,oDAAAC,SAAA,gDAAAC,WAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,SAAAD,CAAA,CAAAJ,eAAA,CAAAI,CAAA,EAAAL,0BAAA,CAAAI,CAAA,CAAAG,yBAAA,GAAAC,OAAA,CAAAC,SAAA,CAAAJ,CAAA,CAAAC,CAAA,KAAAL,eAAA,CAAAG,CAAA,EAAAM,WAAA,EAAAL,CAAA,CAAAM,KAAA,CAAAP,CAAA,CAAAE,CAAA,aAAAC,0BAAA,UAAAH,CAAA,EAAAQ,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAP,OAAA,CAAAC,SAAA,CAAAG,OAAA,0BAAAR,CAAA,UAAAG,yBAAA,UAAAA,0BAAA,UAAAH,CAAA,OAEb,MAAO,CAAAY,aAAa,KAAM,sCAAsC,CAChE,MAAO,CAAAC,QAAQ,KAAM,gCAAgC,CACrD,MAAO,CAAAC,6BAA6B,KAAM,qDAAqD,CAC/F,GAAI,CAAAC,SAAS,CAAG,CAAC,uBAAuB,CAAE,YAAY,CAAE,qBAAqB,CAAE,gBAAgB,CAAE,qBAAqB,CAAE,eAAe,CAAE,cAAc,CAAE,qBAAqB,CAAE,UAAU,CAAE,eAAe,CAAC,CAC5M,MAAO,CAAAC,UAAU,KAAM,eAAe,CACtC,MAAO,CAAAC,eAAe,KAAM,+BAA+B,CAC3D,MAAO,CAAAC,SAAS,KAAM,oBAAoB,CAC1C,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,QAAQ,KAAM,aAAa,CAClC,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAC7C,MAAO,CAAAC,UAAU,KAAM,eAAe,CACtC,MAAO,CAAAC,cAAc,KAAM,8BAA8B,CACzD,MAAO,CAAAC,SAAS,KAAM,cAAc,CACpC,MAAO,CAAAC,IAAI,KAAM,SAAS,CAC1B,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,OAAO,KAAM,kBAAkB,CACtC,GAAI,CAAAC,WAAW,CAAG,CAAC,CAAC,CACpB,GAAI,CAAAC,qCAAqC,CAAG,EAAE,CAAC,GACzC,CAAAC,UAAU,UAAAC,gBAAA,EACd,SAAAD,WAAA,CAAc,KAAAE,KAAA,CAAAtC,eAAA,MAAAoC,UAAA,EACZE,KAAA,CAAAjC,UAAA,MAAA+B,UAAA,CAASG,SAAS,EAClBD,KAAA,CAAKE,cAAc,CAAG,IAAI,CAC1BF,KAAA,CAAKG,aAAa,CAAG,IAAI,CACzBH,KAAA,CAAKI,UAAU,CAAG,KAAK,CACvBJ,KAAA,CAAKK,2BAA2B,CAAG,CAAC,CACpCL,KAAA,CAAKM,yBAAyB,CAAG,CAAC,CAClCN,KAAA,CAAKO,oCAAoC,CAAG,KAAK,CACjDP,KAAA,CAAKQ,6BAA6B,CAAG,KAAK,CAC1CR,KAAA,CAAKS,6CAA6C,CAAG,UAAM,CACzD,MAAO,CAAAT,KAAA,CAAKI,UAAU,CACxB,CAAC,CACDJ,KAAA,CAAKU,mDAAmD,CAAG,SAAAxC,CAAC,CAAI,CAQ9D,MAAO,CAAA8B,KAAA,CAAKW,0BAA0B,CAAC,CAAC,CAC1C,CAAC,CACDX,KAAA,CAAKY,uCAAuC,CAAG,UAAM,CACnD,MAAO,CAACZ,KAAA,CAAKO,oCAAoC,CACnD,CAAC,CACDP,KAAA,CAAKa,6BAA6B,CAAG,SAAA3C,CAAC,CAAI,CACxC,GAAI,CAAA4C,WAAW,CAAG5C,CAAC,CAAC4C,WAAW,CAC/Bd,KAAA,CAAKI,UAAU,CAAGU,WAAW,CAACC,OAAO,CAACC,MAAM,GAAK,CAAC,CAClDhB,KAAA,CAAKiB,KAAK,CAACC,UAAU,EAAIlB,KAAA,CAAKiB,KAAK,CAACC,UAAU,CAAChD,CAAC,CAAC,CACnD,CAAC,CACD8B,KAAA,CAAKmB,qCAAqC,CAAG,SAAAjD,CAAC,CAAI,CAChD8B,KAAA,CAAKiB,KAAK,CAACG,kBAAkB,EAAIpB,KAAA,CAAKiB,KAAK,CAACG,kBAAkB,CAAClD,CAAC,CAAC,CAIjE,GAAI,CAAAmD,yBAAyB,CAAG9B,cAAc,CAAC+B,qBAAqB,CAAC,CAAC,CACtE,GAAI,CAACtB,KAAA,CAAKiB,KAAK,CAACM,yBAAyB,EAAIF,yBAAyB,EAAI,IAAI,EAAInD,CAAC,CAACsD,MAAM,GAAKH,yBAAyB,EAAI,CAACrB,KAAA,CAAKO,oCAAoC,EAAI,CAACP,KAAA,CAAKQ,6BAA6B,CAAE,CAC7MR,KAAA,CAAKiB,KAAK,CAACQ,kCAAkC,EAAIzB,KAAA,CAAKiB,KAAK,CAACQ,kCAAkC,CAACvD,CAAC,CAAC,CACjGqB,cAAc,CAACmC,aAAa,CAACL,yBAAyB,CAAC,CACzD,CACF,CAAC,CACDrB,KAAA,CAAK2B,2BAA2B,CAAG,SAAAzD,CAAC,CAAI,CACtC8B,KAAA,CAAKO,oCAAoC,CAAG,IAAI,CAChDP,KAAA,CAAKiB,KAAK,CAACW,QAAQ,EAAI5B,KAAA,CAAKiB,KAAK,CAACW,QAAQ,CAAC1D,CAAC,CAAC,CAC/C,CAAC,CACD8B,KAAA,CAAK6B,mCAAmC,CAAG,SAAA3D,CAAC,CAAI,CAC9C8B,KAAA,CAAKO,oCAAoC,CAAG,KAAK,CACjDP,KAAA,CAAKiB,KAAK,CAACa,gBAAgB,EAAI9B,KAAA,CAAKiB,KAAK,CAACa,gBAAgB,CAAC5D,CAAC,CAAC,CAC7D8B,KAAA,CAAKQ,6BAA6B,CAAGR,KAAA,CAAKW,0BAA0B,CAAC,CAAC,CACxE,CAAC,CACDX,KAAA,CAAK+B,oCAAoC,CAAG,SAAA7D,CAAC,CAAI,CAC/C8B,KAAA,CAAKiB,KAAK,CAACe,iBAAiB,EAAIhC,KAAA,CAAKiB,KAAK,CAACe,iBAAiB,CAAC9D,CAAC,CAAC,CACjE,CAAC,CACD8B,KAAA,CAAKiC,kCAAkC,CAAG,SAAA/D,CAAC,CAAI,CAC7C8B,KAAA,CAAKiB,KAAK,CAACiB,eAAe,EAAIlC,KAAA,CAAKiB,KAAK,CAACiB,eAAe,CAAChE,CAAC,CAAC,CAC7D,CAAC,CACD8B,KAAA,CAAKmC,wCAAwC,CAAG,SAAAjE,CAAC,CAAI,CACnD8B,KAAA,CAAKK,2BAA2B,CAAG+B,IAAI,CAACC,GAAG,CAAC,CAAC,CAC7CrC,KAAA,CAAKiB,KAAK,CAACqB,qBAAqB,EAAItC,KAAA,CAAKiB,KAAK,CAACqB,qBAAqB,CAACpE,CAAC,CAAC,CACzE,CAAC,CACD8B,KAAA,CAAKuC,sCAAsC,CAAG,SAAArE,CAAC,CAAI,CACjD8B,KAAA,CAAKM,yBAAyB,CAAG8B,IAAI,CAACC,GAAG,CAAC,CAAC,CAC3CrC,KAAA,CAAKiB,KAAK,CAACuB,mBAAmB,EAAIxC,KAAA,CAAKiB,KAAK,CAACuB,mBAAmB,CAACtE,CAAC,CAAC,CACrE,CAAC,CACD8B,KAAA,CAAKyC,+BAA+B,CAAG,SAAAvE,CAAC,CAAI,CAC1C8B,KAAA,CAAKI,UAAU,CAAG,IAAI,CACtBJ,KAAA,CAAKiB,KAAK,CAACyB,YAAY,EAAI1C,KAAA,CAAKiB,KAAK,CAACyB,YAAY,CAACxE,CAAC,CAAC,CACvD,CAAC,CACD8B,KAAA,CAAK2C,8BAA8B,CAAG,SAAAzE,CAAC,CAAI,CACzC8B,KAAA,CAAKiB,KAAK,CAAC2B,WAAW,EAAI5C,KAAA,CAAKiB,KAAK,CAAC2B,WAAW,CAAC1E,CAAC,CAAC,CACrD,CAAC,CACD8B,KAAA,CAAKW,0BAA0B,CAAG,UAAM,CACtC,GAAI,CAAA0B,GAAG,CAAGD,IAAI,CAACC,GAAG,CAAC,CAAC,CACpB,GAAI,CAAAQ,8BAA8B,CAAGR,GAAG,CAAGrC,KAAA,CAAKM,yBAAyB,CACzE,GAAI,CAAAwC,WAAW,CAAGD,8BAA8B,CAAGhD,qCAAqC,EAAIG,KAAA,CAAKM,yBAAyB,CAAGN,KAAA,CAAKK,2BAA2B,CAC7J,MAAO,CAAAyC,WAAW,CACpB,CAAC,CACD9C,KAAA,CAAK+C,uBAAuB,CAAG,SAACC,CAAC,CAAEC,CAAC,CAAEC,QAAQ,CAAK,CACjD,GAAI,MAAO,CAAAF,CAAC,GAAK,QAAQ,CAAE,CACzBG,OAAO,CAACC,IAAI,CAAC,+HAA+H,CAAC,CAC/I,CAAC,IAAM,CACL,GAAI,CAAAC,IAAI,CAAGL,CAAC,EAAIpD,WAAW,CAC3BoD,CAAC,CAAGK,IAAI,CAACL,CAAC,CACVC,CAAC,CAAGI,IAAI,CAACJ,CAAC,CACVC,QAAQ,CAAGG,IAAI,CAACH,QAAQ,CAC1B,CACA,GAAI,CAAAI,IAAI,CAAGtD,KAAA,CAAKuD,iBAAiB,CAAC,CAAC,CACnC,GAAI,CAAAC,IAAI,CAAGR,CAAC,EAAI,CAAC,CACjB,GAAI,CAAAS,GAAG,CAAGR,CAAC,EAAI,CAAC,CAChB,GAAIK,IAAI,EAAI,IAAI,CAAE,CAChB,GAAI,MAAO,CAAAA,IAAI,CAACI,MAAM,GAAK,UAAU,CAAE,CACrCJ,IAAI,CAACI,MAAM,CAAC,CACVD,GAAG,CAAHA,GAAG,CACHD,IAAI,CAAJA,IAAI,CACJG,QAAQ,CAAE,CAACT,QAAQ,CAAG,MAAM,CAAG,QACjC,CAAC,CAAC,CACJ,CAAC,IAAM,CACLI,IAAI,CAACM,UAAU,CAAGJ,IAAI,CACtBF,IAAI,CAACO,SAAS,CAAGJ,GAAG,CACtB,CACF,CACF,CAAC,CACDzD,KAAA,CAAK8D,qBAAqB,CAAG,SAACC,IAAI,CAAEb,QAAQ,CAAK,CAC/C,GAAI,QAAgB,KAAK,CAAE,CACzBhE,SAAS,CAAC,+BAA+B,CAAC,CAC5C,CACF,CAAC,CACDc,KAAA,CAAKgE,2CAA2C,CAAG,SAACC,UAAU,CAAEC,gBAAgB,CAAEC,2BAA2B,CAAK,CAChHnE,KAAA,CAAKoE,sBAAsB,CAAGF,gBAAgB,EAAI,CAAC,CACnDlE,KAAA,CAAKmE,2BAA2B,CAAG,CAAC,CAACA,2BAA2B,CAChE3E,SAAS,CAAC6E,aAAa,CAACJ,UAAU,CAAEjE,KAAA,CAAKsE,gBAAgB,CAAC,CAAC,CAAEtE,KAAA,CAAKuE,kCAAkC,CAAEvE,KAAA,CAAKwE,8CAA8C,CAAC,CAC5J,CAAC,CACDxE,KAAA,CAAKwE,8CAA8C,CAAG,SAAChB,IAAI,CAAEC,GAAG,CAAEgB,KAAK,CAAEC,MAAM,CAAK,CAClF,GAAI,CAAAC,eAAe,CAAG3F,UAAU,CAAC4F,GAAG,CAAC,QAAQ,CAAC,CAACF,MAAM,CACrD,GAAI1E,KAAA,CAAK6E,kBAAkB,CAAE,CAC3BF,eAAe,CAAG3E,KAAA,CAAK6E,kBAAkB,CAACC,cAAc,CAACC,OAAO,CAClE,CACA,GAAI,CAAAC,aAAa,CAAGvB,GAAG,CAAGkB,eAAe,CAAGD,MAAM,CAAG1E,KAAA,CAAKoE,sBAAsB,CAMhF,GAAIpE,KAAA,CAAKmE,2BAA2B,CAAE,CACpCa,aAAa,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAEF,aAAa,CAAC,CAC5C,CACAhF,KAAA,CAAK+C,uBAAuB,CAAC,CAC3BC,CAAC,CAAE,CAAC,CACJC,CAAC,CAAE+B,aAAa,CAChB9B,QAAQ,CAAE,IACZ,CAAC,CAAC,CACFlD,KAAA,CAAKkE,gBAAgB,CAAG,CAAC,CACzBlE,KAAA,CAAKmE,2BAA2B,CAAG,KAAK,CAC1C,CAAC,CACDnE,KAAA,CAAKmF,+BAA+B,CAAG,SAAAjH,CAAC,CAAI,CAC1C8B,KAAA,CAAK6E,kBAAkB,CAAG3G,CAAC,CAC3B8B,KAAA,CAAKiB,KAAK,CAACmE,kBAAkB,EAAIpF,KAAA,CAAKiB,KAAK,CAACmE,kBAAkB,CAAClH,CAAC,CAAC,CACnE,CAAC,CACD8B,KAAA,CAAKqF,+BAA+B,CAAG,SAAAnH,CAAC,CAAI,CAC1C8B,KAAA,CAAK6E,kBAAkB,CAAG,IAAI,CAC9B7E,KAAA,CAAKiB,KAAK,CAACqE,kBAAkB,EAAItF,KAAA,CAAKiB,KAAK,CAACqE,kBAAkB,CAACpH,CAAC,CAAC,CACnE,CAAC,CACD8B,KAAA,CAAKuF,8BAA8B,CAAG,SAAArH,CAAC,CAAI,CAGzC,GAAIA,CAAC,CAAE,CACL8B,KAAA,CAAK6E,kBAAkB,CAAG3G,CAAC,CAC7B,CACA8B,KAAA,CAAKiB,KAAK,CAACuE,iBAAiB,EAAIxF,KAAA,CAAKiB,KAAK,CAACuE,iBAAiB,CAACtH,CAAC,CAAC,CACjE,CAAC,CACD8B,KAAA,CAAKyF,8BAA8B,CAAG,SAAAvH,CAAC,CAAI,CACzC8B,KAAA,CAAK6E,kBAAkB,CAAG,IAAI,CAC9B7E,KAAA,CAAKiB,KAAK,CAACyE,iBAAiB,EAAI1F,KAAA,CAAKiB,KAAK,CAACyE,iBAAiB,CAACxH,CAAC,CAAC,CACjE,CAAC,CACD8B,KAAA,CAAK2F,qBAAqB,CAAG,UAAM,CACjC3F,KAAA,CAAK4F,oCAAoC,CAAC,CAAC,CAC7C,CAAC,CACD5F,KAAA,CAAK6F,kBAAkB,CAAG,UAAM,CAC9B,OAAA7F,KAAA,CACF,CAAC,CACDA,KAAA,CAAKuD,iBAAiB,CAAG,UAAM,CAC7B,MAAO,CAAAvD,KAAA,CAAKE,cAAc,CAC5B,CAAC,CACDF,KAAA,CAAK8F,eAAe,CAAG,UAAM,CAC3B,MAAO,CAAA9F,KAAA,CAAKG,aAAa,CAC3B,CAAC,CACDH,KAAA,CAAKsE,gBAAgB,CAAG,UAAM,CAC5B,MAAO,CAAAtE,KAAA,CAAKG,aAAa,CAC3B,CAAC,CACDH,KAAA,CAAK+F,kBAAkB,CAAG,UAAM,CAC9B,MAAO,CAAA/F,KAAA,CAAKE,cAAc,CAC5B,CAAC,CACDF,KAAA,CAAKgG,QAAQ,CAAG,SAAC/C,CAAC,CAAED,CAAC,CAAEE,QAAQ,CAAK,CAClC,GAAI,MAAO,CAAAD,CAAC,GAAK,QAAQ,CAAE,CACzBE,OAAO,CAACC,IAAI,CAAC,iGAAiG,CAAC,CACjH,CAAC,IAAM,CACL,GAAI,CAAA6C,KAAK,CAAGhD,CAAC,EAAIrD,WAAW,CAC5BoD,CAAC,CAAGiD,KAAK,CAACjD,CAAC,CACXC,CAAC,CAAGgD,KAAK,CAAChD,CAAC,CACXC,QAAQ,CAAG+C,KAAK,CAAC/C,QAAQ,CAC3B,CACAlD,KAAA,CAAK+C,uBAAuB,CAAC,CAC3BC,CAAC,CAAEA,CAAC,EAAI,CAAC,CACTC,CAAC,CAAEA,CAAC,EAAI,CAAC,CACTC,QAAQ,CAAEA,QAAQ,GAAK,KACzB,CAAC,CAAC,CACJ,CAAC,CACDlD,KAAA,CAAKkG,WAAW,CAAG,SAAAC,OAAO,CAAI,CAE5B,GAAI,CAAAjD,QAAQ,CAAG,CAACiD,OAAO,EAAIA,OAAO,CAACjD,QAAQ,IAAM,KAAK,CACtD,GAAI,CAAAkD,UAAU,CAAGpG,KAAA,CAAKiB,KAAK,CAACmF,UAAU,CACtC,GAAI,CAAAC,mBAAmB,CAAGrG,KAAA,CAAKuD,iBAAiB,CAAC,CAAC,CAClD,GAAI,CAAAP,CAAC,CAAGoD,UAAU,CAAGC,mBAAmB,CAACC,WAAW,CAAG,CAAC,CACxD,GAAI,CAAArD,CAAC,CAAGmD,UAAU,CAAG,CAAC,CAAGC,mBAAmB,CAACE,YAAY,CACzDvG,KAAA,CAAK+C,uBAAuB,CAAC,CAC3BC,CAAC,CAADA,CAAC,CACDC,CAAC,CAADA,CAAC,CACDC,QAAQ,CAARA,QACF,CAAC,CAAC,CACJ,CAAC,CACDlD,KAAA,CAAKwG,sBAAsB,CAAG,SAAAtI,CAAC,CAAI,CACjC,GAAI,CAAAuI,qBAAqB,CAAGvI,CAAC,CAAC4C,WAAW,CAAC4F,MAAM,CAC9CjC,KAAK,CAAGgC,qBAAqB,CAAChC,KAAK,CACnCC,MAAM,CAAG+B,qBAAqB,CAAC/B,MAAM,CACvC1E,KAAA,CAAKiB,KAAK,CAAC0F,mBAAmB,CAAClC,KAAK,CAAEC,MAAM,CAAC,CAC/C,CAAC,CACD1E,KAAA,CAAK4G,aAAa,CAAG,SAAA1I,CAAC,CAAI,CACxB,GAAI,eAAyB,YAAY,CAAE,CACzC,GAAI8B,KAAA,CAAKiB,KAAK,CAACW,QAAQ,EAAI5B,KAAA,CAAKiB,KAAK,CAAC4F,mBAAmB,EAAI,IAAI,CAAE,CACjE1D,OAAO,CAAC2D,GAAG,CAAC,qDAAqD,CAAG,0DAA0D,CAAG,6DAA6D,CAAG,8DAA8D,CAAG,iBAAiB,CAAC,CACtR,CACF,CACA,GAAI9G,KAAA,CAAKiB,KAAK,CAAC8F,mBAAmB,GAAK,SAAS,CAAE,CAChD9H,eAAe,CAAC,CAAC,CACnB,CACAe,KAAA,CAAK2B,2BAA2B,CAACzD,CAAC,CAAC,CACrC,CAAC,CACD8B,KAAA,CAAKgH,gBAAgB,CAAG,SAAA1D,IAAI,CAAI,CAC9BtD,KAAA,CAAKG,aAAa,CAAGmD,IAAI,CAC3B,CAAC,CACDtD,KAAA,CAAKiH,iBAAiB,CAAG,SAAA3D,IAAI,CAAI,CAC/BtD,KAAA,CAAKE,cAAc,CAAGoD,IAAI,CAI1B,GAAIA,IAAI,EAAI,IAAI,CAAE,CAChBA,IAAI,CAACuC,kBAAkB,CAAG7F,KAAA,CAAK6F,kBAAkB,CACjDvC,IAAI,CAACgB,gBAAgB,CAAGtE,KAAA,CAAKsE,gBAAgB,CAC7ChB,IAAI,CAACwC,eAAe,CAAG9F,KAAA,CAAK8F,eAAe,CAC3CxC,IAAI,CAACyC,kBAAkB,CAAG/F,KAAA,CAAK+F,kBAAkB,CACjDzC,IAAI,CAACC,iBAAiB,CAAGvD,KAAA,CAAKuD,iBAAiB,CAC/CD,IAAI,CAAC0C,QAAQ,CAAGhG,KAAA,CAAKgG,QAAQ,CAC7B1C,IAAI,CAAC4C,WAAW,CAAGlG,KAAA,CAAKkG,WAAW,CACnC5C,IAAI,CAACqC,qBAAqB,CAAG3F,KAAA,CAAK2F,qBAAqB,CACvDrC,IAAI,CAACQ,qBAAqB,CAAG9D,KAAA,CAAK8D,qBAAqB,CACvDR,IAAI,CAACU,2CAA2C,CAAGhE,KAAA,CAAKgE,2CAA2C,CACrG,CACA,GAAI,CAAAkD,GAAG,CAAG/H,SAAS,CAACa,KAAA,CAAKiB,KAAK,CAACkG,YAAY,CAAC,CAC5CD,GAAG,CAAC5D,IAAI,CAAC,CACX,CAAC,CAAC,OAAAtD,KAAA,CACJ,CAAClC,SAAA,CAAAgC,UAAA,CAAAC,gBAAA,SAAApC,YAAA,CAAAmC,UAAA,GAAAsH,GAAA,gDAAAC,KAAA,CAuCD,SAAAC,4CAA4CA,CAAA,CAAG,CAC7C,MAAO,MAAK,CACd,CAAC,GAAAF,GAAA,wCAAAC,KAAA,CAwBD,SAAAE,oCAAoCA,CAAA,CAAG,CACrC5H,OAAO,CAAC,KAAK,CAAE,yDAAyD,CAAC,CAC3E,CAAC,GAAAyH,GAAA,wCAAAC,KAAA,CAwGD,SAAAzB,oCAAoCA,CAAA,CAAG,CAAC,CAAC,GAAAwB,GAAA,sCAAAC,KAAA,CAwBzC,SAAA9C,kCAAkCA,CAACrG,CAAC,CAAE,CACpCiF,OAAO,CAACqE,KAAK,CAAC,8BAA8B,CAAEtJ,CAAC,CAAC,CAClD,CAAC,GAAAkJ,GAAA,UAAAC,KAAA,CAgED,SAAAI,MAAMA,CAAA,CAAG,CACP,GAAI,CAAAC,WAAW,CAAG,IAAI,CAACzG,KAAK,CAC1B0G,qBAAqB,CAAGD,WAAW,CAACC,qBAAqB,CACzDvB,UAAU,CAAGsB,WAAW,CAACtB,UAAU,CACnCO,mBAAmB,CAAGe,WAAW,CAACf,mBAAmB,CACrDiB,cAAc,CAAGF,WAAW,CAACE,cAAc,CAC3CC,mBAAmB,CAAGH,WAAW,CAACG,mBAAmB,CACrDC,aAAa,CAAGJ,WAAW,CAACI,aAAa,CACzCX,YAAY,CAAGO,WAAW,CAACP,YAAY,CACvCJ,mBAAmB,CAAGW,WAAW,CAACX,mBAAmB,CACrDnF,QAAQ,CAAG8F,WAAW,CAAC9F,QAAQ,CAC/BmG,aAAa,CAAGL,WAAW,CAACK,aAAa,CACzCC,KAAK,CAAGlJ,6BAA6B,CAAC4I,WAAW,CAAE3I,SAAS,CAAC,CAC/D,GAAI,eAAyB,YAAY,EAAI,IAAI,CAACkC,KAAK,CAACgH,KAAK,CAAE,CAC7D,GAAI,CAAAA,KAAK,CAAG3I,UAAU,CAAC4I,OAAO,CAAC,IAAI,CAACjH,KAAK,CAACgH,KAAK,CAAC,CAChD,GAAI,CAAAE,gBAAgB,CAAG,CAAC,YAAY,CAAE,gBAAgB,CAAC,CAACC,MAAM,CAAC,SAAAC,IAAI,QAAI,CAAAJ,KAAK,EAAIA,KAAK,CAACI,IAAI,CAAC,GAAKC,SAAS,GAAC,CAC1GpJ,SAAS,CAACiJ,gBAAgB,CAACnH,MAAM,GAAK,CAAC,CAAE,2BAA2B,CAAGuH,IAAI,CAACC,SAAS,CAACL,gBAAgB,CAAC,CAAG,IAAI,CAAG,yDAAyD,CAAC,CAC7K,CACA,GAAI,CAAAM,sBAAsB,CAAG,CAAC,CAAC,CAC/B,GAAI9B,mBAAmB,CAAE,CACvB8B,sBAAsB,CAAG,CACvBC,QAAQ,CAAE,IAAI,CAAClC,sBACjB,CAAC,CACH,CACA,GAAI,CAAAmC,sBAAsB,CAAG,CAACvC,UAAU,EAAIwC,KAAK,CAACC,OAAO,CAAChB,mBAAmB,CAAC,CAC9E,GAAI,CAAAiB,QAAQ,CAAGH,sBAAsB,EAAIb,aAAa,CAAGpI,KAAK,CAACqJ,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC/H,KAAK,CAAC6H,QAAQ,CAAE,SAACG,KAAK,CAAEC,CAAC,CAAK,CAC7G,GAAI,CAAAC,QAAQ,CAAGR,sBAAsB,EAAId,mBAAmB,CAACuB,OAAO,CAACF,CAAC,CAAC,CAAG,CAAC,CAAC,CAC5E,GAAID,KAAK,EAAI,IAAI,GAAKE,QAAQ,EAAIrB,aAAa,CAAC,CAAE,CAChD,MAAoB,CAAApI,KAAK,CAAC2J,aAAa,CAAC5J,IAAI,CAAE,CAC5CwI,KAAK,CAAE,CAACkB,QAAQ,EAAIG,MAAM,CAACC,YAAY,CAAEzB,aAAa,EAAIwB,MAAM,CAACE,kBAAkB,CACrF,CAAC,CAAEP,KAAK,CAAC,CACX,CAAC,IAAM,CACL,MAAO,CAAAA,KAAK,CACd,CACF,CAAC,CAAC,CAAG,IAAI,CAAChI,KAAK,CAAC6H,QAAQ,CACxB,GAAI,CAAAW,gBAAgB,CAAgB/J,KAAK,CAAC2J,aAAa,CAAC5J,IAAI,CAAEZ,QAAQ,CAAC,CAAC,CAAC,CAAE4J,sBAAsB,CAAE,CACjGK,QAAQ,CAAEA,QAAQ,CAClBY,WAAW,CAAE,KAAK,CAClBxC,GAAG,CAAE,IAAI,CAACF,gBAAgB,CAC1BiB,KAAK,CAAE,CAAC7B,UAAU,EAAIkD,MAAM,CAACK,0BAA0B,CAAE5B,aAAa,EAAIuB,MAAM,CAACM,6BAA6B,CAAEjC,qBAAqB,CACvI,CAAC,CAAC,CAAC,CACH,GAAI,CAAAkC,SAAS,CAAGzD,UAAU,CAAGkD,MAAM,CAACQ,cAAc,CAAGR,MAAM,CAACS,YAAY,CACxE,GAAI,CAAAC,kBAAkB,CAAG5D,UAAU,CAAGkD,MAAM,CAACW,uBAAuB,CAAGX,MAAM,CAACY,qBAAqB,CACnG,GAAI,CAAAjJ,KAAK,CAAGrC,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,CAAEoJ,KAAK,CAAC,CAAE,CAAC,CAAC,CAAE,CACtDC,KAAK,CAAE,CAAC4B,SAAS,CAAE/B,aAAa,EAAIkC,kBAAkB,CAAE,IAAI,CAAC/I,KAAK,CAACgH,KAAK,CAAC,CACzEvF,YAAY,CAAE,IAAI,CAACD,+BAA+B,CAClDG,WAAW,CAAE,IAAI,CAACD,8BAA8B,CAChDzB,UAAU,CAAE,IAAI,CAACL,6BAA6B,CAC9CmB,iBAAiB,CAAE,IAAI,CAACD,oCAAoC,CAC5DG,eAAe,CAAE,IAAI,CAACD,kCAAkC,CACxDK,qBAAqB,CAAE,IAAI,CAACH,wCAAwC,CACpEK,mBAAmB,CAAE,IAAI,CAACD,sCAAsC,CAChE4H,yBAAyB,CAAE,IAAI,CAAC7C,4CAA4C,CAC5E8C,gCAAgC,CAAE,IAAI,CAAC1J,mDAAmD,CAC1F2J,0BAA0B,CAAE,IAAI,CAAC5J,6CAA6C,CAC9EmB,QAAQ,CAAE,IAAI,CAACgF,aAAa,CAC5B9E,gBAAgB,CAAE,IAAI,CAACD,mCAAmC,CAC1DyI,6BAA6B,CAAE,IAAI,CAAC1J,uCAAuC,CAC3E2J,oBAAoB,CAAE,IAAI,CAACC,8BAA8B,CACzDpJ,kBAAkB,CAAE,IAAI,CAACD,qCAAqC,CAC9DsJ,iBAAiB,CAAE,IAAI,CAAClD,oCAC1B,CAAC,CAAC,CACF,GAAI,CAAAmD,eAAe,CAAGrL,cAAc,CACpCH,SAAS,CAACwL,eAAe,GAAKpC,SAAS,CAAE,uCAAuC,CAAC,CACjF,GAAI,CAAAqC,UAAU,CAAgBjL,KAAK,CAAC2J,aAAa,CAACqB,eAAe,CAAE7L,QAAQ,CAAC,CAAC,CAAC,CAAEoC,KAAK,CAAE,CACrFiG,GAAG,CAAE,IAAI,CAACD,iBACZ,CAAC,CAAC,CAAEwC,gBAAgB,CAAC,CACrB,GAAI7B,cAAc,CAAE,CAClB,MAAoB,CAAAlI,KAAK,CAACkL,YAAY,CAAChD,cAAc,CAAE,CACrDK,KAAK,CAAEhH,KAAK,CAACgH,KACf,CAAC,CAAE0C,UAAU,CAAC,CAChB,CACA,MAAO,CAAAA,UAAU,CACnB,CAAC,MA/jBsBjL,KAAK,CAACmL,SAAS,EAikBxC,GAAI,CAAAC,WAAW,CAAG,CAChBC,QAAQ,CAAE,CAAC,CACXC,UAAU,CAAE,CAAC,CAIbC,SAAS,CAAE,eAAe,CAE1BC,uBAAuB,CAAE,OAC3B,CAAC,CACD,GAAI,CAAA5B,MAAM,CAAGhK,UAAU,CAAC6L,MAAM,CAAC,CAC7BpB,YAAY,CAAEnL,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,CAAEkM,WAAW,CAAC,CAAE,CAAC,CAAC,CAAE,CAC9DM,aAAa,CAAE,QAAQ,CACvBC,SAAS,CAAE,QAAQ,CACnBC,SAAS,CAAE,MACb,CAAC,CAAC,CACFxB,cAAc,CAAElL,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,CAAEkM,WAAW,CAAC,CAAE,CAAC,CAAC,CAAE,CAChEM,aAAa,CAAE,KAAK,CACpBC,SAAS,CAAE,MAAM,CACjBC,SAAS,CAAE,QACb,CAAC,CAAC,CACF3B,0BAA0B,CAAE,CAC1ByB,aAAa,CAAE,KACjB,CAAC,CACDxB,6BAA6B,CAAE,CAC7B2B,cAAc,CAAE,QAAQ,CACxBR,QAAQ,CAAE,CACZ,CAAC,CACDxB,YAAY,CAAE,CACZiC,QAAQ,CAAE,QAAQ,CAClB/H,GAAG,CAAE,CAAC,CACNgI,MAAM,CAAE,EACV,CAAC,CACDxB,uBAAuB,CAAE,CACvByB,cAAc,CAAE,aAClB,CAAC,CACDxB,qBAAqB,CAAE,CACrBwB,cAAc,CAAE,aAClB,CAAC,CACDlC,kBAAkB,CAAE,CAClBmC,eAAe,CAAE,OACnB,CACF,CAAC,CAAC,CACF,GAAI,CAAAC,mBAAmB,CAAgBlM,KAAK,CAACmM,UAAU,CAAC,SAAC5K,KAAK,CAAEkG,YAAY,CAAK,CAC/E,MAAoB,CAAAzH,KAAK,CAAC2J,aAAa,CAACvJ,UAAU,CAAEjB,QAAQ,CAAC,CAAC,CAAC,CAAEoC,KAAK,CAAE,CACtEkG,YAAY,CAAEA,YAChB,CAAC,CAAC,CAAC,CACL,CAAC,CAAC,CACFyE,mBAAmB,CAACE,WAAW,CAAG,YAAY,CAC9C,cAAe,CAAAF,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}