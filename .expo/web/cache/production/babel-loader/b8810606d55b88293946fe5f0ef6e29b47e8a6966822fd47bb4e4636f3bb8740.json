{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.getReactNavigationConfig=exports.getReactNavigationScreensConfig=void 0;var matchers_1=require(\"./matchers\");function convertDynamicRouteToReactNavigation(segment){if(segment==='index'){return'';}if(segment==='+not-found'){return'*not-found';}var rest=(0,matchers_1.matchDeepDynamicRouteName)(segment);if(rest!=null){return'*'+rest;}var dynamicName=(0,matchers_1.matchDynamicName)(segment);if(dynamicName!=null){return`:${dynamicName}`;}return segment;}function parseRouteSegments(segments){return(segments.split('/').map(convertDynamicRouteToReactNavigation).filter(Boolean).join('/'));}function convertRouteNodeToScreen(node,metaOnly){var path=parseRouteSegments(node.route);if(!node.children.length){if(!metaOnly){return{path:path,screens:{},_route:node};}return path;}var screens=getReactNavigationScreensConfig(node.children,metaOnly);var screen={path:path,screens:screens,initialRouteName:node.initialRouteName};if(!metaOnly){screen._route=node;}return screen;}function getReactNavigationScreensConfig(nodes,metaOnly){return Object.fromEntries(nodes.map(function(node){return[node.route,convertRouteNodeToScreen(node,metaOnly)];}));}exports.getReactNavigationScreensConfig=getReactNavigationScreensConfig;function getReactNavigationConfig(routes,metaOnly){return{initialRouteName:routes.initialRouteName,screens:getReactNavigationScreensConfig(routes.children,metaOnly)};}exports.getReactNavigationConfig=getReactNavigationConfig;","map":{"version":3,"names":["matchers_1","require","convertDynamicRouteToReactNavigation","segment","rest","matchDeepDynamicRouteName","dynamicName","matchDynamicName","parseRouteSegments","segments","split","map","filter","Boolean","join","convertRouteNodeToScreen","node","metaOnly","path","route","children","length","screens","_route","getReactNavigationScreensConfig","screen","initialRouteName","nodes","Object","fromEntries","exports","getReactNavigationConfig","routes"],"sources":["/Users/jonathanbruce/Coding/trackr/node_modules/expo-router/src/getReactNavigationConfig.ts"],"sourcesContent":["import type { RouteNode } from './Route';\nimport { matchDeepDynamicRouteName, matchDynamicName } from './matchers';\n\nexport type Screen =\n  | string\n  | {\n      path: string;\n      screens: Record<string, Screen>;\n      _route?: RouteNode;\n      initialRouteName?: string;\n    };\n\n// `[page]` -> `:page`\n// `page` -> `page`\nfunction convertDynamicRouteToReactNavigation(segment: string): string {\n  // NOTE(EvanBacon): To support shared routes we preserve group segments.\n  if (segment === 'index') {\n    return '';\n  }\n  if (segment === '+not-found') {\n    return '*not-found';\n  }\n\n  const rest = matchDeepDynamicRouteName(segment);\n  if (rest != null) {\n    return '*' + rest;\n  }\n  const dynamicName = matchDynamicName(segment);\n\n  if (dynamicName != null) {\n    return `:${dynamicName}`;\n  }\n\n  return segment;\n}\n\nfunction parseRouteSegments(segments: string): string {\n  return (\n    // NOTE(EvanBacon): When there are nested routes without layouts\n    // the node.route will be something like `app/home/index`\n    // this needs to be split to ensure each segment is parsed correctly.\n    segments\n      .split('/')\n      // Convert each segment to a React Navigation format.\n      .map(convertDynamicRouteToReactNavigation)\n      // Remove any empty paths from groups or index routes.\n      .filter(Boolean)\n      // Join to return as a path.\n      .join('/')\n  );\n}\n\nfunction convertRouteNodeToScreen(node: RouteNode, metaOnly: boolean): Screen {\n  const path = parseRouteSegments(node.route);\n  if (!node.children.length) {\n    if (!metaOnly) {\n      return {\n        path,\n        screens: {},\n        _route: node,\n      };\n    }\n    return path;\n  }\n  const screens = getReactNavigationScreensConfig(node.children, metaOnly);\n\n  const screen: Screen = {\n    path,\n    screens,\n    // NOTE(EvanBacon): This is bad because it forces all Layout Routes\n    // to be loaded into memory. We should move towards a system where\n    // the initial route name is either loaded asynchronously in the Layout Route\n    // or defined via a file system convention.\n    initialRouteName: node.initialRouteName,\n  };\n\n  if (!metaOnly) {\n    screen._route = node;\n  }\n\n  return screen;\n}\n\nexport function getReactNavigationScreensConfig(\n  nodes: RouteNode[],\n  metaOnly: boolean\n): Record<string, Screen> {\n  return Object.fromEntries(\n    nodes.map((node) => [node.route, convertRouteNodeToScreen(node, metaOnly)] as const)\n  );\n}\n\nexport function getReactNavigationConfig(\n  routes: RouteNode,\n  metaOnly: boolean\n): {\n  initialRouteName?: string;\n  screens: Record<string, Screen>;\n} {\n  return {\n    initialRouteName: routes.initialRouteName,\n    screens: getReactNavigationScreensConfig(routes.children, metaOnly),\n  };\n}\n"],"mappings":"sJACA,IAAAA,UAAA,CAAAC,OAAA,eAaA,QAAS,CAAAC,oCAAoCA,CAACC,OAAe,EAE3D,GAAIA,OAAO,GAAK,OAAO,CAAE,CACvB,MAAO,EAAE,C,CAEX,GAAIA,OAAO,GAAK,YAAY,CAAE,CAC5B,MAAO,YAAY,C,CAGrB,GAAM,CAAAC,IAAI,CAAG,GAAAJ,UAAA,CAAAK,yBAAyB,EAACF,OAAO,CAAC,CAC/C,GAAIC,IAAI,EAAI,IAAI,CAAE,CAChB,MAAO,GAAG,CAAGA,IAAI,C,CAEnB,GAAM,CAAAE,WAAW,CAAG,GAAAN,UAAA,CAAAO,gBAAgB,EAACJ,OAAO,CAAC,CAE7C,GAAIG,WAAW,EAAI,IAAI,CAAE,CACvB,MAAO,IAAIA,WAAW,EAAE,C,CAG1B,MAAO,CAAAH,OAAO,CAChB,CAEA,QAAS,CAAAK,kBAAkBA,CAACC,QAAgB,EAC1C,OAIEA,QAAQ,CACLC,KAAK,CAAC,GAAG,CAAC,CAEVC,GAAG,CAACT,oCAAoC,CAAC,CAEzCU,MAAM,CAACC,OAAO,CAAC,CAEfC,IAAI,CAAC,GAAG,CAAC,EAEhB,CAEA,QAAS,CAAAC,wBAAwBA,CAACC,IAAe,CAAEC,QAAiB,EAClE,GAAM,CAAAC,IAAI,CAAGV,kBAAkB,CAACQ,IAAI,CAACG,KAAK,CAAC,CAC3C,GAAI,CAACH,IAAI,CAACI,QAAQ,CAACC,MAAM,CAAE,CACzB,GAAI,CAACJ,QAAQ,CAAE,CACb,MAAO,CACLC,IAAI,CAAJA,IAAI,CACJI,OAAO,CAAE,EAAE,CACXC,MAAM,CAAEP,I,CACT,C,CAEH,MAAO,CAAAE,IAAI,C,CAEb,GAAM,CAAAI,OAAO,CAAGE,+BAA+B,CAACR,IAAI,CAACI,QAAQ,CAAEH,QAAQ,CAAC,CAExE,GAAM,CAAAQ,MAAM,CAAW,CACrBP,IAAI,CAAJA,IAAI,CACJI,OAAO,CAAPA,OAAO,CAKPI,gBAAgB,CAAEV,IAAI,CAACU,gB,CACxB,CAED,GAAI,CAACT,QAAQ,CAAE,CACbQ,MAAM,CAACF,MAAM,CAAGP,IAAI,C,CAGtB,MAAO,CAAAS,MAAM,CACf,CAEA,QAAgB,CAAAD,+BAA+BA,CAC7CG,KAAkB,CAClBV,QAAiB,EAEjB,MAAO,CAAAW,MAAM,CAACC,WAAW,CACvBF,KAAK,CAAChB,GAAG,CAAC,SAACK,IAAI,QAAK,CAACA,IAAI,CAACG,KAAK,CAAEJ,wBAAwB,CAACC,IAAI,CAAEC,QAAQ,CAAC,CAAU,GAAC,CACrF,CACH,CAPAa,OAAA,CAAAN,+BAAA,CAAAA,+BAAA,CASA,QAAgB,CAAAO,wBAAwBA,CACtCC,MAAiB,CACjBf,QAAiB,EAKjB,MAAO,CACLS,gBAAgB,CAAEM,MAAM,CAACN,gBAAgB,CACzCJ,OAAO,CAAEE,+BAA+B,CAACQ,MAAM,CAACZ,QAAQ,CAAEH,QAAQ,C,CACnE,CACH,CAXAa,OAAA,CAAAC,wBAAA,CAAAA,wBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}