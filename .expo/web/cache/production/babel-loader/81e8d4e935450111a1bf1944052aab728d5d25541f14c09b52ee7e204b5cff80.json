{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"@babel/runtime/helpers/defineProperty\");var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||(\"get\"in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function get(){return m[k];}};}Object.defineProperty(o,k2,desc);}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,\"default\",{enumerable:true,value:v});}:function(o,v){o[\"default\"]=v;});var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod)if(k!==\"default\"&&Object.prototype.hasOwnProperty.call(mod,k))__createBinding(result,mod,k);__setModuleDefault(result,mod);return result;};Object.defineProperty(exports,\"__esModule\",{value:true});exports.useInitializeExpoRouter=exports.useStoreRouteInfo=exports.useStoreRootState=exports.useExpoRouter=exports.store=exports.RouterStore=void 0;var native_1=require(\"@react-navigation/native\");var SplashScreen=__importStar(require(\"expo-splash-screen\"));var react_1=require(\"react\");var routing_1=require(\"./routing\");var sort_routes_1=require(\"./sort-routes\");var LocationProvider_1=require(\"../LocationProvider\");var getPathFromState_1=require(\"../fork/getPathFromState\");var getLinkingConfig_1=require(\"../getLinkingConfig\");var getRoutes_1=require(\"../getRoutes\");var useScreens_1=require(\"../useScreens\");var RouterStore=function(){function RouterStore(){var _this=this;_classCallCheck(this,RouterStore);this.hasAttemptedToHideSplash=false;this.rootStateSubscribers=new Set();this.storeSubscribers=new Set();this.linkTo=routing_1.linkTo.bind(this);this.getSortedRoutes=sort_routes_1.getSortedRoutes.bind(this);this.goBack=routing_1.goBack.bind(this);this.canGoBack=routing_1.canGoBack.bind(this);this.push=routing_1.push.bind(this);this.dismiss=routing_1.dismiss.bind(this);this.replace=routing_1.replace.bind(this);this.dismissAll=routing_1.dismissAll.bind(this);this.canDismiss=routing_1.canDismiss.bind(this);this.setParams=routing_1.setParams.bind(this);this.navigate=routing_1.navigate.bind(this);this.subscribeToRootState=function(subscriber){_this.rootStateSubscribers.add(subscriber);return function(){return _this.rootStateSubscribers.delete(subscriber);};};this.subscribeToStore=function(subscriber){_this.storeSubscribers.add(subscriber);return function(){return _this.storeSubscribers.delete(subscriber);};};this.snapshot=function(){return _this;};this.rootStateSnapshot=function(){return _this.rootState;};this.routeInfoSnapshot=function(){return _this.routeInfo;};}return _createClass(RouterStore,[{key:\"initialize\",value:function initialize(context,navigationRef,initialLocation){var _this$navigationRefSu,_this2=this;this.initialState=undefined;this.rootState=undefined;this.nextState=undefined;this.routeInfo=undefined;this.linking=undefined;(_this$navigationRefSu=this.navigationRefSubscription)==null?void 0:_this$navigationRefSu.call(this);this.rootStateSubscribers.clear();this.storeSubscribers.clear();this.routeNode=(0,getRoutes_1.getRoutes)(context,{ignoreEntryPoints:true});this.rootComponent=this.routeNode?(0,useScreens_1.getQualifiedRouteComponent)(this.routeNode):react_1.Fragment;if(!this.routeNode&&\"production\"==='production'){throw new Error('No routes found');}this.navigationRef=navigationRef;if(this.routeNode){this.linking=(0,getLinkingConfig_1.getLinkingConfig)(this.routeNode);if(initialLocation){var _this$linking$getStat,_this$linking;this.linking.getInitialURL=function(){return initialLocation.toString();};this.initialState=(_this$linking$getStat=(_this$linking=this.linking).getStateFromPath)==null?void 0:_this$linking$getStat.call(_this$linking,initialLocation.pathname+initialLocation.search,this.linking.config);}}if(this.initialState){this.rootState=this.initialState;this.routeInfo=this.getRouteInfo(this.initialState);}else{this.routeInfo={unstable_globalHref:'',pathname:'',isIndex:false,params:{},segments:[]};}this.navigationRefSubscription=navigationRef.addListener('state',function(data){var state=data.data.state;if(!_this2.hasAttemptedToHideSplash){_this2.hasAttemptedToHideSplash=true;requestAnimationFrame(function(){return(SplashScreen._internal_maybeHideAsync==null?void 0:SplashScreen._internal_maybeHideAsync());});}var shouldUpdateSubscribers=_this2.nextState===state;_this2.nextState=undefined;if(state&&state!==_this2.rootState){exports.store.updateState(state,undefined);shouldUpdateSubscribers=true;}if(shouldUpdateSubscribers){for(var subscriber of _this2.rootStateSubscribers){subscriber();}}});for(var subscriber of this.storeSubscribers){subscriber();}}},{key:\"updateState\",value:function updateState(state){var nextState=arguments.length>1&&arguments[1]!==undefined?arguments[1]:state;exports.store.rootState=state;exports.store.nextState=nextState;var nextRouteInfo=exports.store.getRouteInfo(state);if(!(0,getPathFromState_1.deepEqual)(this.routeInfo,nextRouteInfo)){exports.store.routeInfo=nextRouteInfo;}}},{key:\"getRouteInfo\",value:function getRouteInfo(state){var _this3=this;return(0,LocationProvider_1.getRouteInfoFromState)(function(state,asPath){var _this3$linking;return(0,getPathFromState_1.getPathDataFromState)(state,_objectSpread(_objectSpread({screens:[]},(_this3$linking=_this3.linking)==null?void 0:_this3$linking.config),{},{preserveDynamicRoutes:asPath,preserveGroups:asPath}));},state);}},{key:\"shouldShowTutorial\",value:function shouldShowTutorial(){return!this.routeNode&&\"production\"==='development';}}]);}();exports.RouterStore=RouterStore;exports.store=new RouterStore();function useExpoRouter(){return(0,react_1.useSyncExternalStore)(exports.store.subscribeToStore,exports.store.snapshot,exports.store.snapshot);}exports.useExpoRouter=useExpoRouter;function syncStoreRootState(){if(exports.store.navigationRef.isReady()){var currentState=exports.store.navigationRef.getRootState();if(exports.store.rootState!==currentState){exports.store.updateState(currentState);}}}function useStoreRootState(){syncStoreRootState();return(0,react_1.useSyncExternalStore)(exports.store.subscribeToRootState,exports.store.rootStateSnapshot,exports.store.rootStateSnapshot);}exports.useStoreRootState=useStoreRootState;function useStoreRouteInfo(){syncStoreRootState();return(0,react_1.useSyncExternalStore)(exports.store.subscribeToRootState,exports.store.routeInfoSnapshot,exports.store.routeInfoSnapshot);}exports.useStoreRouteInfo=useStoreRouteInfo;function useInitializeExpoRouter(context,initialLocation){var navigationRef=(0,native_1.useNavigationContainerRef)();(0,react_1.useMemo)(function(){return exports.store.initialize(context,navigationRef,initialLocation);},[context,initialLocation]);useExpoRouter();return exports.store;}exports.useInitializeExpoRouter=useInitializeExpoRouter;","map":{"version":3,"names":["native_1","require","SplashScreen","__importStar","react_1","routing_1","sort_routes_1","LocationProvider_1","getPathFromState_1","getLinkingConfig_1","getRoutes_1","useScreens_1","RouterStore","_this","_classCallCheck","hasAttemptedToHideSplash","rootStateSubscribers","Set","storeSubscribers","linkTo","bind","getSortedRoutes","goBack","canGoBack","push","dismiss","replace","dismissAll","canDismiss","setParams","navigate","subscribeToRootState","subscriber","add","delete","subscribeToStore","snapshot","rootStateSnapshot","rootState","routeInfoSnapshot","routeInfo","_createClass","key","value","initialize","context","navigationRef","initialLocation","_this$navigationRefSu","_this2","initialState","undefined","nextState","linking","navigationRefSubscription","call","clear","routeNode","getRoutes","ignoreEntryPoints","rootComponent","getQualifiedRouteComponent","Fragment","Error","getLinkingConfig","_this$linking$getStat","_this$linking","getInitialURL","toString","getStateFromPath","pathname","search","config","getRouteInfo","unstable_globalHref","isIndex","params","segments","addListener","data","state","requestAnimationFrame","_internal_maybeHideAsync","shouldUpdateSubscribers","exports","store","updateState","arguments","length","nextRouteInfo","deepEqual","_this3","getRouteInfoFromState","asPath","_this3$linking","getPathDataFromState","_objectSpread","screens","preserveDynamicRoutes","preserveGroups","shouldShowTutorial","useExpoRouter","useSyncExternalStore","syncStoreRootState","isReady","currentState","getRootState","useStoreRootState","useStoreRouteInfo","useInitializeExpoRouter","useNavigationContainerRef","useMemo"],"sources":["/Users/jonathanbruce/Coding/trackr/node_modules/expo-router/src/global-state/router-store.tsx"],"sourcesContent":["import {\n  NavigationContainerRefWithCurrent,\n  getPathFromState,\n  useNavigationContainerRef,\n} from '@react-navigation/native';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useSyncExternalStore, useMemo, ComponentType, Fragment } from 'react';\n\nimport {\n  canGoBack,\n  canDismiss,\n  goBack,\n  linkTo,\n  navigate,\n  dismiss,\n  dismissAll,\n  push,\n  replace,\n  setParams,\n} from './routing';\nimport { getSortedRoutes } from './sort-routes';\nimport { UrlObject, getRouteInfoFromState } from '../LocationProvider';\nimport { RouteNode } from '../Route';\nimport { deepEqual, getPathDataFromState } from '../fork/getPathFromState';\nimport { ResultState } from '../fork/getStateFromPath';\nimport { ExpoLinkingOptions, getLinkingConfig } from '../getLinkingConfig';\nimport { getRoutes } from '../getRoutes';\nimport { RequireContext } from '../types';\nimport { getQualifiedRouteComponent } from '../useScreens';\n\n/**\n * This is the global state for the router. It is used to keep track of the current route, and to provide a way to navigate to other routes.\n *\n * There should only be one instance of this class and be initialized via `useInitializeExpoRouter`\n */\nexport class RouterStore {\n  routeNode!: RouteNode | null;\n  rootComponent!: ComponentType;\n  linking: ExpoLinkingOptions | undefined;\n  private hasAttemptedToHideSplash: boolean = false;\n\n  initialState: ResultState | undefined;\n  rootState: ResultState | undefined;\n  nextState: ResultState | undefined;\n  routeInfo?: UrlObject | undefined;\n\n  navigationRef!: NavigationContainerRefWithCurrent<ReactNavigation.RootParamList>;\n  navigationRefSubscription!: () => void;\n\n  rootStateSubscribers = new Set<() => void>();\n  storeSubscribers = new Set<() => void>();\n\n  linkTo = linkTo.bind(this);\n  getSortedRoutes = getSortedRoutes.bind(this);\n  goBack = goBack.bind(this);\n  canGoBack = canGoBack.bind(this);\n  push = push.bind(this);\n  dismiss = dismiss.bind(this);\n  replace = replace.bind(this);\n  dismissAll = dismissAll.bind(this);\n  canDismiss = canDismiss.bind(this);\n  setParams = setParams.bind(this);\n  navigate = navigate.bind(this);\n\n  initialize(\n    context: RequireContext,\n    navigationRef: NavigationContainerRefWithCurrent<ReactNavigation.RootParamList>,\n    initialLocation?: URL\n  ) {\n    // Clean up any previous state\n    this.initialState = undefined;\n    this.rootState = undefined;\n    this.nextState = undefined;\n    this.routeInfo = undefined;\n    this.linking = undefined;\n    this.navigationRefSubscription?.();\n    this.rootStateSubscribers.clear();\n    this.storeSubscribers.clear();\n\n    this.routeNode = getRoutes(context, { ignoreEntryPoints: true });\n\n    this.rootComponent = this.routeNode ? getQualifiedRouteComponent(this.routeNode) : Fragment;\n\n    // Only error in production, in development we will show the onboarding screen\n    if (!this.routeNode && process.env.NODE_ENV === 'production') {\n      throw new Error('No routes found');\n    }\n\n    this.navigationRef = navigationRef;\n\n    if (this.routeNode) {\n      this.linking = getLinkingConfig(this.routeNode!);\n\n      if (initialLocation) {\n        this.linking.getInitialURL = () => initialLocation.toString();\n        this.initialState = this.linking.getStateFromPath?.(\n          initialLocation.pathname + initialLocation.search,\n          this.linking.config\n        );\n      }\n    }\n\n    // There is no routeNode, so we will be showing the onboarding screen\n    // In the meantime, just mock the routeInfo\n    if (this.initialState) {\n      this.rootState = this.initialState;\n      this.routeInfo = this.getRouteInfo(this.initialState);\n    } else {\n      this.routeInfo = {\n        unstable_globalHref: '',\n        pathname: '',\n        isIndex: false,\n        params: {},\n        segments: [],\n      };\n    }\n\n    /**\n     * Counter intuitively - this fires AFTER both React Navigation's state changes and the subsequent paint.\n     * This poses a couple of issues for Expo Router,\n     *   - Ensuring hooks (e.g. useSearchParams()) have data in the initial render\n     *   - Reacting to state changes after a navigation event\n     *\n     * This is why the initial render renders a Fragment and we wait until `onReady()` is called\n     * Additionally, some hooks compare the state from both the store and the navigationRef. If the store it stale,\n     * that hooks will manually update the store.\n     *\n     */\n    this.navigationRefSubscription = navigationRef.addListener('state', (data) => {\n      const state = data.data.state as ResultState;\n\n      if (!this.hasAttemptedToHideSplash) {\n        this.hasAttemptedToHideSplash = true;\n        // NOTE(EvanBacon): `navigationRef.isReady` is sometimes not true when state is called initially.\n        requestAnimationFrame(\n          () =>\n            // @ts-expect-error: This function is native-only and for internal-use only.\n            SplashScreen._internal_maybeHideAsync?.()\n        );\n      }\n\n      let shouldUpdateSubscribers = this.nextState === state;\n      this.nextState = undefined;\n\n      // This can sometimes be undefined when an error is thrown in the Root Layout Route.\n      // Additionally that state may already equal the rootState if it was updated within a hook\n      if (state && state !== this.rootState) {\n        store.updateState(state, undefined);\n        shouldUpdateSubscribers = true;\n      }\n\n      // If the state has changed, or was changed inside a hook we need to update the subscribers\n      if (shouldUpdateSubscribers) {\n        for (const subscriber of this.rootStateSubscribers) {\n          subscriber();\n        }\n      }\n    });\n\n    for (const subscriber of this.storeSubscribers) {\n      subscriber();\n    }\n  }\n\n  updateState(state: ResultState, nextState = state) {\n    store.rootState = state;\n    store.nextState = nextState;\n\n    const nextRouteInfo = store.getRouteInfo(state);\n\n    if (!deepEqual(this.routeInfo, nextRouteInfo)) {\n      store.routeInfo = nextRouteInfo;\n    }\n  }\n\n  getRouteInfo(state: ResultState) {\n    return getRouteInfoFromState(\n      (state: Parameters<typeof getPathFromState>[0], asPath: boolean) => {\n        return getPathDataFromState(state, {\n          screens: [],\n          ...this.linking?.config,\n          preserveDynamicRoutes: asPath,\n          preserveGroups: asPath,\n        });\n      },\n      state\n    );\n  }\n\n  // This is only used in development, to show the onboarding screen\n  // In production we should have errored during the initialization\n  shouldShowTutorial() {\n    return !this.routeNode && process.env.NODE_ENV === 'development';\n  }\n\n  /** Make sure these are arrow functions so `this` is correctly bound */\n  subscribeToRootState = (subscriber: () => void) => {\n    this.rootStateSubscribers.add(subscriber);\n    return () => this.rootStateSubscribers.delete(subscriber);\n  };\n  subscribeToStore = (subscriber: () => void) => {\n    this.storeSubscribers.add(subscriber);\n    return () => this.storeSubscribers.delete(subscriber);\n  };\n  snapshot = () => {\n    return this;\n  };\n  rootStateSnapshot = () => {\n    return this.rootState!;\n  };\n  routeInfoSnapshot = () => {\n    return this.routeInfo!;\n  };\n}\n\nexport const store = new RouterStore();\n\nexport function useExpoRouter() {\n  return useSyncExternalStore(store.subscribeToStore, store.snapshot, store.snapshot);\n}\n\nfunction syncStoreRootState() {\n  if (store.navigationRef.isReady()) {\n    const currentState = store.navigationRef.getRootState() as unknown as ResultState;\n\n    if (store.rootState !== currentState) {\n      store.updateState(currentState);\n    }\n  }\n}\n\nexport function useStoreRootState() {\n  syncStoreRootState();\n  return useSyncExternalStore(\n    store.subscribeToRootState,\n    store.rootStateSnapshot,\n    store.rootStateSnapshot\n  );\n}\n\nexport function useStoreRouteInfo() {\n  syncStoreRootState();\n  return useSyncExternalStore(\n    store.subscribeToRootState,\n    store.routeInfoSnapshot,\n    store.routeInfoSnapshot\n  );\n}\n\nexport function useInitializeExpoRouter(context: RequireContext, initialLocation: URL | undefined) {\n  const navigationRef = useNavigationContainerRef();\n  useMemo(\n    () => store.initialize(context, navigationRef, initialLocation),\n    [context, initialLocation]\n  );\n  useExpoRouter();\n  return store;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}