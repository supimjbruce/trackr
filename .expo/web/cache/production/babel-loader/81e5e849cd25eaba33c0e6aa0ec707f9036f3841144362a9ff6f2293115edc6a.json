{"ast":null,"code":"\"use strict\";var _defineProperty=require(\"@babel/runtime/helpers/defineProperty\");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.getIgnoreList=exports.extrapolateGroups=exports.generateDynamic=exports.getExactRoutes=exports.getRoutes=void 0;var getRoutesCore_1=require(\"./getRoutesCore\");function getRoutes(contextModule){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return(0,getRoutesCore_1.getRoutes)(contextModule,_objectSpread({getSystemRoute:function getSystemRoute(_ref){var route=_ref.route,type=_ref.type;if(route===''&&type==='layout'){return{type:'layout',loadRoute:function loadRoute(){return{default:require('./views/Navigator').DefaultNavigator};},contextKey:'expo-router/build/views/Navigator.js',route:'',generated:true,dynamic:null,children:[]};}else if(route==='_sitemap'&&type==='route'){return{loadRoute:function loadRoute(){var _require=require('./views/Sitemap'),Sitemap=_require.Sitemap,getNavOptions=_require.getNavOptions;return{default:Sitemap,getNavOptions:getNavOptions};},route:'_sitemap',type:'route',contextKey:'expo-router/build/views/Sitemap.js',generated:true,internal:true,dynamic:null,children:[]};}else if(route==='+not-found'&&type==='route'){return{loadRoute:function loadRoute(){return{default:require('./views/Unmatched').Unmatched};},type:'route',route:'+not-found',contextKey:'expo-router/build/views/Unmatched.js',generated:true,internal:true,dynamic:[{name:'+not-found',deep:true,notFound:true}],children:[]};}throw new Error(`Unknown system route: ${route} and type: ${type}`);}},options));}exports.getRoutes=getRoutes;function getExactRoutes(contextModule){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return getRoutes(contextModule,_objectSpread(_objectSpread({},options),{},{skipGenerated:true}));}exports.getExactRoutes=getExactRoutes;var getRoutesCore_2=require(\"./getRoutesCore\");Object.defineProperty(exports,\"generateDynamic\",{enumerable:true,get:function get(){return getRoutesCore_2.generateDynamic;}});Object.defineProperty(exports,\"extrapolateGroups\",{enumerable:true,get:function get(){return getRoutesCore_2.extrapolateGroups;}});Object.defineProperty(exports,\"getIgnoreList\",{enumerable:true,get:function get(){return getRoutesCore_2.getIgnoreList;}});","map":{"version":3,"names":["getRoutesCore_1","require","getRoutes","contextModule","options","arguments","length","undefined","_objectSpread","getSystemRoute","_ref","route","type","loadRoute","default","DefaultNavigator","contextKey","generated","dynamic","children","_require","Sitemap","getNavOptions","internal","Unmatched","name","deep","notFound","Error","exports","getExactRoutes","skipGenerated","getRoutesCore_2","Object","defineProperty","enumerable","get","generateDynamic","extrapolateGroups","getIgnoreList"],"sources":["/Users/jonathanbruce/Coding/trackr/node_modules/expo-router/src/getRoutes.ts"],"sourcesContent":["import type { RouteNode } from './Route';\nimport { getRoutes as getRoutesCore, type Options as OptionsCore } from './getRoutesCore';\nimport type { RequireContext } from './types';\n\nexport type Options = Omit<OptionsCore, 'getSystemRoute'>;\n/**\n * Given a Metro context module, return an array of nested routes.\n *\n * This is a two step process:\n *  1. Convert the RequireContext keys (file paths) into a directory tree.\n *      - This should extrapolate array syntax into multiple routes\n *      - Routes are given a specificity score\n *  2. Flatten the directory tree into routes\n *      - Routes in directories without _layout files are hoisted to the nearest _layout\n *      - The name of the route is relative to the nearest _layout\n *      - If multiple routes have the same name, the most specific route is used\n */\nexport function getRoutes(contextModule: RequireContext, options: Options = {}): RouteNode | null {\n  return getRoutesCore(contextModule, {\n    getSystemRoute({ route, type }) {\n      if (route === '' && type === 'layout') {\n        // Root layout when no layout is defined.\n        return {\n          type: 'layout',\n          loadRoute: () => ({\n            default: (require('./views/Navigator') as typeof import('./views/Navigator'))\n              .DefaultNavigator,\n          }),\n          // Generate a fake file name for the directory\n          contextKey: 'expo-router/build/views/Navigator.js',\n          route: '',\n          generated: true,\n          dynamic: null,\n          children: [],\n        };\n      } else if (route === '_sitemap' && type === 'route') {\n        return {\n          loadRoute() {\n            const { Sitemap, getNavOptions } = require('./views/Sitemap');\n            return { default: Sitemap, getNavOptions };\n          },\n          route: '_sitemap',\n          type: 'route',\n          contextKey: 'expo-router/build/views/Sitemap.js',\n          generated: true,\n          internal: true,\n          dynamic: null,\n          children: [],\n        };\n      } else if (route === '+not-found' && type === 'route') {\n        return {\n          loadRoute() {\n            return { default: require('./views/Unmatched').Unmatched };\n          },\n          type: 'route',\n          route: '+not-found',\n          contextKey: 'expo-router/build/views/Unmatched.js',\n          generated: true,\n          internal: true,\n          dynamic: [{ name: '+not-found', deep: true, notFound: true }],\n          children: [],\n        };\n      }\n      throw new Error(`Unknown system route: ${route} and type: ${type}`);\n    },\n    ...options,\n  });\n}\n\nexport function getExactRoutes(\n  contextModule: RequireContext,\n  options: Options = {}\n): RouteNode | null {\n  return getRoutes(contextModule, {\n    ...options,\n    skipGenerated: true,\n  });\n}\n\nexport { generateDynamic, extrapolateGroups, getIgnoreList } from './getRoutesCore';\n"],"mappings":"+2BACA,IAAAA,eAAA,CAAAC,OAAA,oBAgBA,QAAgB,CAAAC,SAASA,CAACC,aAA6B,CAAuB,IAArB,CAAAC,OAAA,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAmB,EAAE,CAC5E,MAAO,GAAAL,eAAA,CAAAE,SAAa,EAACC,aAAa,CAAAK,aAAA,EAChCC,cAAc,SAAd,CAAAA,cAAcA,CAAAC,IAAA,CAAgB,IAAb,CAAAC,KAAK,CAAAD,IAAA,CAALC,KAAK,CAAEC,IAAI,CAAAF,IAAA,CAAJE,IAAI,CAC1B,GAAID,KAAK,GAAK,EAAE,EAAIC,IAAI,GAAK,QAAQ,CAAE,CAErC,MAAO,CACLA,IAAI,CAAE,QAAQ,CACdC,SAAS,CAAE,QAAX,CAAAA,SAASA,CAAA,QAAS,CAChBC,OAAO,CAAGb,OAAO,CAAC,mBAAmB,CAAwC,CAC1Ec,gB,CACJ,EAAC,CAEFC,UAAU,CAAE,sCAAsC,CAClDL,KAAK,CAAE,EAAE,CACTM,SAAS,CAAE,IAAI,CACfC,OAAO,CAAE,IAAI,CACbC,QAAQ,CAAE,E,CACX,C,CACF,IAAM,IAAIR,KAAK,GAAK,UAAU,EAAIC,IAAI,GAAK,OAAO,CAAE,CACnD,MAAO,CACLC,SAAS,SAAT,CAAAA,SAASA,CAAA,EACP,IAAAO,QAAA,CAAmCnB,OAAO,CAAC,iBAAiB,CAAC,CAArDoB,OAAO,CAAAD,QAAA,CAAPC,OAAO,CAAEC,aAAa,CAAAF,QAAA,CAAbE,aAAa,CAC9B,MAAO,CAAER,OAAO,CAAEO,OAAO,CAAEC,aAAa,CAAbA,aAAa,CAAE,CAC5C,CAAC,CACDX,KAAK,CAAE,UAAU,CACjBC,IAAI,CAAE,OAAO,CACbI,UAAU,CAAE,oCAAoC,CAChDC,SAAS,CAAE,IAAI,CACfM,QAAQ,CAAE,IAAI,CACdL,OAAO,CAAE,IAAI,CACbC,QAAQ,CAAE,E,CACX,C,CACF,IAAM,IAAIR,KAAK,GAAK,YAAY,EAAIC,IAAI,GAAK,OAAO,CAAE,CACrD,MAAO,CACLC,SAAS,SAAT,CAAAA,SAASA,CAAA,EACP,MAAO,CAAEC,OAAO,CAAEb,OAAO,CAAC,mBAAmB,CAAC,CAACuB,SAAS,CAAE,CAC5D,CAAC,CACDZ,IAAI,CAAE,OAAO,CACbD,KAAK,CAAE,YAAY,CACnBK,UAAU,CAAE,sCAAsC,CAClDC,SAAS,CAAE,IAAI,CACfM,QAAQ,CAAE,IAAI,CACdL,OAAO,CAAE,CAAC,CAAEO,IAAI,CAAE,YAAY,CAAEC,IAAI,CAAE,IAAI,CAAEC,QAAQ,CAAE,IAAI,CAAE,CAAC,CAC7DR,QAAQ,CAAE,E,CACX,C,CAEH,KAAM,IAAI,CAAAS,KAAK,CAAC,yBAAyBjB,KAAK,cAAcC,IAAI,EAAE,CAAC,CACrE,CAAC,EACER,OAAO,CACX,CAAC,CACJ,CAlDAyB,OAAA,CAAA3B,SAAA,CAAAA,SAAA,CAoDA,QAAgB,CAAA4B,cAAcA,CAC5B3B,aAA6B,CACR,IAArB,CAAAC,OAAA,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAmB,EAAE,CAErB,MAAO,CAAAH,SAAS,CAACC,aAAa,CAAAK,aAAA,CAAAA,aAAA,IACzBJ,OAAO,MACV2B,aAAa,CAAE,IAAI,EACpB,CAAC,CACJ,CARAF,OAAA,CAAAC,cAAA,CAAAA,cAAA,CAUA,IAAAE,eAAA,CAAA/B,OAAA,oBAASgC,MAAA,CAAAC,cAAA,CAAAL,OAAA,oBAAAM,UAAA,MAAAC,GAAA,UAAAA,IAAA,SAAAJ,eAAA,CAAAK,eAAe,KAAEJ,MAAA,CAAAC,cAAA,CAAAL,OAAA,sBAAAM,UAAA,MAAAC,GAAA,UAAAA,IAAA,SAAAJ,eAAA,CAAAM,iBAAiB,KAAEL,MAAA,CAAAC,cAAA,CAAAL,OAAA,kBAAAM,UAAA,MAAAC,GAAA,UAAAA,IAAA,SAAAJ,eAAA,CAAAO,aAAa","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}