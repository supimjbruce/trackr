{"ast":null,"code":"\"use strict\";var _objectWithoutProperties=require(\"@babel/runtime/helpers/objectWithoutProperties\");var _slicedToArray=require(\"@babel/runtime/helpers/slicedToArray\");var _defineProperty=require(\"@babel/runtime/helpers/defineProperty\");var _toConsumableArray=require(\"@babel/runtime/helpers/toConsumableArray\");var _excluded=[\"filePath\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod};};Object.defineProperty(exports,\"__esModule\",{value:true});exports.getUserDefinedTopLevelNotFoundRoute=exports.getExactRoutes=exports.getRoutes=exports.assertDuplicateRoutes=exports.generateDynamic=exports.generateDynamicFromSegment=exports.getRecursiveTree=void 0;var import_mode_1=__importDefault(require(\"./import-mode\"));var matchers_1=require(\"./matchers\");function getRecursiveTree(files){var tree={name:'',children:[],parents:[],node:null};for(var file of files){var parts=file.normalizedName.split('/');var currentNode=tree;var _loop=function _loop(){var part=parts[i];if(i===parts.length-1&&part==='_layout'){if(currentNode.node){var overwritten=currentNode.node.contextKey;throw new Error(`Higher priority Layout Route \"${file.contextKey}\" overriding redundant Layout Route \"${overwritten}\". Remove the Layout Route \"${overwritten}\" to fix this.`);}return 1;}var existing=currentNode.children.find(function(item){return item.name===part;});if(existing){currentNode=existing;}else{var newNode={name:part,children:[],parents:[].concat(_toConsumableArray(currentNode.parents),[currentNode.name]),node:null};currentNode.children.push(newNode);currentNode=newNode;}};for(var i=0;i<parts.length;i++){if(_loop())continue;}currentNode.node=file;}if(\"production\"!=='production'){assertDeprecatedFormat(tree);}return tree;}exports.getRecursiveTree=getRecursiveTree;function assertDeprecatedFormat(tree){for(var child of tree.children){if(child.node&&child.children.length&&!child.node.normalizedName.endsWith('_layout')){var ext=child.node.contextKey.split('.').pop();throw new Error(`Using deprecated Layout Route format: Move \\`./app/${child.node.normalizedName}.${ext}\\` to \\`./app/${child.node.normalizedName}/_layout.${ext}\\``);}assertDeprecatedFormat(child);}}function getTreeNodesAsRouteNodes(nodes,options){return nodes.map(function(node){return treeNodeToRouteNode(node,options);}).flat().filter(Boolean);}function generateDynamicFromSegment(name){if(name==='+not-found'){return{name:'+not-found',deep:true,notFound:true};}var deepDynamicName=(0,matchers_1.matchDeepDynamicRouteName)(name);var dynamicName=deepDynamicName!=null?deepDynamicName:(0,matchers_1.matchDynamicName)(name);if(!dynamicName){return null;}return{name:dynamicName,deep:!!deepDynamicName};}exports.generateDynamicFromSegment=generateDynamicFromSegment;function generateDynamic(name){var description=name.split('/').map(function(segment){return generateDynamicFromSegment(segment);}).filter(Boolean);return description.length===0?null:description;}exports.generateDynamic=generateDynamic;function collapseRouteSegments(route){return(0,matchers_1.stripGroupSegmentsFromPath)(route.replace(/\\/index$/,''));}function getDefaultInitialRoute(node,name){return node.children.find(function(node){return collapseRouteSegments(node.route)===name;});}function applyDefaultInitialRouteName(node){var _node$children,_getDefaultInitialRou;var groupName=(0,matchers_1.matchGroupName)(node.route);if(!((_node$children=node.children)!=null&&_node$children.length)){return node;}var initialRouteName=groupName?(_getDefaultInitialRou=getDefaultInitialRoute(node,groupName))==null?void 0:_getDefaultInitialRou.route:undefined;var loaded=node.loadRoute();if(loaded!=null&&loaded.unstable_settings){var _loaded$unstable_sett;initialRouteName=(_loaded$unstable_sett=loaded.unstable_settings.initialRouteName)!=null?_loaded$unstable_sett:initialRouteName;if(groupName){var _loaded$unstable_sett2,_loaded$unstable_sett3;var groupSpecificInitialRouteName=(_loaded$unstable_sett2=loaded.unstable_settings)==null?void 0:(_loaded$unstable_sett3=_loaded$unstable_sett2[groupName])==null?void 0:_loaded$unstable_sett3.initialRouteName;initialRouteName=groupSpecificInitialRouteName!=null?groupSpecificInitialRouteName:initialRouteName;}}return _objectSpread(_objectSpread({},node),{},{initialRouteName:initialRouteName});}function folderNodeToRouteNode(_ref,options){var name=_ref.name,children=_ref.children;if(!children.length){return null;}return getTreeNodesAsRouteNodes(children.map(function(child){return _objectSpread(_objectSpread({},child),{},{name:[name,child.name].filter(Boolean).join('/')});}),options);}function fileNodeToRouteNode(tree,options){var name=tree.name,node=tree.node,children=tree.children;if(!node)throw new Error('node must be defined');var dynamic=generateDynamic(name);var clones=extrapolateGroupRoutes(name,node.contextKey);clones.delete(name);var output={loadRoute:node.loadRoute,route:name,contextKey:node.contextKey,children:getTreeNodesAsRouteNodes(children,options),dynamic:dynamic,filePath:node.filePath,entryPoints:options.ignoreEntryPoints||isApiRoutePath(node.contextKey)?undefined:[node.filePath]};if(clones.size){return _toConsumableArray(clones).map(function(clone){return applyDefaultInitialRouteName(_objectSpread(_objectSpread({},output),{},{contextKey:node.contextKey.replace(output.route,clone),route:clone}));});}return[applyDefaultInitialRouteName({loadRoute:node.loadRoute,route:name,entryPoints:options.ignoreEntryPoints||isApiRoutePath(node.contextKey)?undefined:[node.filePath],filePath:node.filePath,contextKey:node.contextKey,children:getTreeNodesAsRouteNodes(children,options),dynamic:dynamic})];}function extrapolateGroupRoutes(route,contextKey){var routes=arguments.length>2&&arguments[2]!==undefined?arguments[2]:new Set();var match=(0,matchers_1.matchGroupName)(route);if(!match){routes.add(route);return routes;}var groups=match==null?void 0:match.split(',');var groupsSet=new Set(groups);if(groupsSet.size!==groups.length){throw new Error(`Array syntax cannot contain duplicate group name \"${groups}\" in \"${contextKey}\".`);}if(groups.length===1){routes.add(route);return routes;}for(var group of groups){extrapolateGroupRoutes(route.replace(match,group.trim()),contextKey,routes);}return routes;}function treeNodeToRouteNode(tree,options){if(tree.node){return fileNodeToRouteNode(tree,options);}return folderNodeToRouteNode(tree,options);}function contextModuleToFileNodes(contextModule){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var files=arguments.length>2&&arguments[2]!==undefined?arguments[2]:contextModule.keys();var nodes=files.map(function(key){if(\"production\"==='development'){if(import_mode_1.default==='sync'){var _contextModule;var isApi=key.match(/\\+api\\.[jt]sx?$/);if(!isApi&&!((_contextModule=contextModule(key))!=null&&_contextModule.default)){return null;}}}var node={loadRoute:function loadRoute(){if(options.ignoreRequireErrors){try{return contextModule(key);}catch(_unused){return{};}}else{return contextModule(key);}},normalizedName:(0,matchers_1.getNameFromFilePath)(key),filePath:key,contextKey:key};return node;});return nodes.filter(Boolean);}function hasCustomRootLayoutNode(routes){if(routes.length!==1){return false;}var route=routes[0];if(route.route===''&&route.contextKey.match(/^\\.\\/_layout\\.([jt]sx?)$/)){return true;}return false;}function treeNodesToRootRoute(treeNode,options){var routes=treeNodeToRouteNode(treeNode,options);return withOptionalRootLayout(routes);}function processKeys(files,options){var ignore=options.ignore;return files.filter(function(file){return!(ignore!=null&&ignore.some(function(pattern){return pattern.test(file);}));});}function assertDuplicateRoutes(filenames){if(\"production\"==='production'){return;}var duplicates=filenames.map(function(filename){return(0,matchers_1.removeSupportedExtensions)(filename);}).reduce(function(acc,filename){acc[filename]=acc[filename]?acc[filename]+1:1;return acc;},{});Object.entries(duplicates).forEach(function(_ref2){var _ref3=_slicedToArray(_ref2,2),filename=_ref3[0],count=_ref3[1];if(count>1){throw new Error(`Multiple files match the route name \"${filename}\".`);}});}exports.assertDuplicateRoutes=assertDuplicateRoutes;function getRoutes(contextModule,options){var route=getExactRoutesInternal(contextModule,options);if(!route){return null;}appendSitemapRoute(route);appendUnmatchedRoute(route);if(options!=null&&options.ignoreEntryPoints){return removeFilePath(route);}return removeFilePath(crawlAndAppendEntryFilesForInitialRoutes(crawlAndAppendEntryFiles(route)));}exports.getRoutes=getRoutes;function removeFilePath(route){if(!route)return route;var filePath=route.filePath,rest=_objectWithoutProperties(route,_excluded);return _objectSpread(_objectSpread({},rest),{},{children:route.children.map(function(child){return removeFilePath(child);}).filter(Boolean)});}function unique(array){return _toConsumableArray(new Set(array));}function isLayoutRoute(route){return route.contextKey.match(/\\/_layout\\.([jt]sx?)$/);}function isViewRoute(route){return!!route&&!isApiRoute(route);}function isApiRoute(route){return isApiRoutePath(route.contextKey);}function isApiRoutePath(route){return!!route.match(/\\+api\\.[jt]sx?$/);}function crawlAndAppendEntryFiles(route){var _route$entryPoints;var entryPoints=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];if(!isViewRoute(route)){return null;}var nextEntryPoints=unique([].concat(_toConsumableArray(entryPoints),_toConsumableArray((_route$entryPoints=route.entryPoints)!=null?_route$entryPoints:[]),[route.filePath]));route.children.forEach(function(child){crawlAndAppendEntryFiles(child,nextEntryPoints);});if(isLayoutRoute(route)){delete route.entryPoints;}else{route.entryPoints=nextEntryPoints;}return route;}function crawlAndAppendEntryFilesForInitialRoutes(route){var initialRoutes=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];if(!isViewRoute(route)){return null;}if(isLayoutRoute(route)){if(route.initialRouteName){var initialRoute=route.children.find(function(child){return child.route===route.initialRouteName;});if(!initialRoute){throw new Error(`Invalid initialRouteName \"${route.initialRouteName}\" defined in ${route.filePath}. Options are: ${route.children.map(function(route){return route.route;}).join(', ')}`);}route.children.forEach(function(child){crawlAndAppendEntryFilesForInitialRoutes(child,[].concat(_toConsumableArray(initialRoutes),[initialRoute]));});}}else{var isInitial=initialRoutes.some(function(initialRoute){return initialRoute.contextKey===route.contextKey;});if(!isInitial){var _route$entryPoints3;route.entryPoints=unique([].concat(_toConsumableArray(initialRoutes.map(function(route){var _route$entryPoints2;return(_route$entryPoints2=route.entryPoints)!=null?_route$entryPoints2:[];}).flat()),_toConsumableArray((_route$entryPoints3=route.entryPoints)!=null?_route$entryPoints3:[])));}}return route;}function getIgnoreList(options){var _options$ignore;var ignore=[/^\\.\\/\\+html\\.[tj]sx?$/].concat(_toConsumableArray((_options$ignore=options==null?void 0:options.ignore)!=null?_options$ignore:[]));if((options==null?void 0:options.preserveApiRoutes)!==true){ignore.push(/\\+api\\.[tj]sx?$/);}return ignore;}function getExactRoutesInternal(contextModule){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var treeNodes=contextModuleToTree(contextModule,options);return treeNodesToRootRoute(treeNodes,options);}function getExactRoutes(contextModule,options){var route=getExactRoutesInternal(contextModule,options);if(!(options!=null&&options.ignoreEntryPoints)){return removeFilePath(crawlAndAppendEntryFilesForInitialRoutes(crawlAndAppendEntryFiles(route)));}return removeFilePath(route);}exports.getExactRoutes=getExactRoutes;function contextModuleToTree(contextModule,options){var allowed=processKeys(contextModule.keys(),_objectSpread(_objectSpread({},options),{},{ignore:getIgnoreList(options)}));assertDuplicateRoutes(allowed);var files=contextModuleToFileNodes(contextModule,options,allowed);return getRecursiveTree(files);}function appendSitemapRoute(routes){if(!routes.children.length||routes.children.some(function(route){return route.route==='_sitemap';})){return routes;}routes.children.push({loadRoute:function loadRoute(){var _require=require('./views/Sitemap'),Sitemap=_require.Sitemap,getNavOptions=_require.getNavOptions;return{default:Sitemap,getNavOptions:getNavOptions};},filePath:'expo-router/build/views/Sitemap.js',route:'_sitemap',contextKey:'./_sitemap.tsx',generated:true,internal:true,dynamic:null,children:[]});return routes;}function appendUnmatchedRoute(routes){var userDefinedDynamicRoute=getUserDefinedTopLevelNotFoundRoute(routes);if(!userDefinedDynamicRoute){routes.children.push({loadRoute:function loadRoute(){return{default:require('./views/Unmatched').Unmatched};},filePath:'expo-router/build/views/Unmatched.js',route:'+not-found',contextKey:'./+not-found.tsx',dynamic:[{name:'+not-found',deep:true,notFound:true}],children:[],generated:true,internal:true});}return routes;}function getUserDefinedTopLevelNotFoundRoute(routes){for(var route of(_routes$children=routes==null?void 0:routes.children)!=null?_routes$children:[]){var _routes$children;if(route.generated)continue;var isDeepDynamic=(0,matchers_1.stripGroupSegmentsFromPath)(route.route)==='+not-found'&&route.route.match(/\\+not-found$/);if(isDeepDynamic){return route;}if((0,matchers_1.matchGroupName)(route.route)){var child=getUserDefinedTopLevelNotFoundRoute(route);if(child){return child;}}}return null;}exports.getUserDefinedTopLevelNotFoundRoute=getUserDefinedTopLevelNotFoundRoute;function withOptionalRootLayout(routes){if(!(routes!=null&&routes.length)){return null;}if(hasCustomRootLayoutNode(routes)){return routes[0];}return{loadRoute:function loadRoute(){return{default:require('./views/Navigator').DefaultNavigator};},filePath:'expo-router/build/views/Navigator.js',contextKey:'./_layout.tsx',route:'',generated:true,dynamic:null,children:routes};}","map":{"version":3,"names":["import_mode_1","__importDefault","require","matchers_1","getRecursiveTree","files","tree","name","children","parents","node","file","parts","normalizedName","split","currentNode","_loop","part","i","length","overwritten","contextKey","Error","existing","find","item","newNode","concat","_toConsumableArray","push","assertDeprecatedFormat","exports","child","endsWith","ext","pop","getTreeNodesAsRouteNodes","nodes","options","map","treeNodeToRouteNode","flat","filter","Boolean","generateDynamicFromSegment","deep","notFound","deepDynamicName","matchDeepDynamicRouteName","dynamicName","matchDynamicName","generateDynamic","description","segment","collapseRouteSegments","route","stripGroupSegmentsFromPath","replace","getDefaultInitialRoute","applyDefaultInitialRouteName","_node$children","_getDefaultInitialRou","groupName","matchGroupName","initialRouteName","undefined","loaded","loadRoute","unstable_settings","_loaded$unstable_sett","_loaded$unstable_sett2","_loaded$unstable_sett3","groupSpecificInitialRouteName","_objectSpread","folderNodeToRouteNode","_ref","join","fileNodeToRouteNode","dynamic","clones","extrapolateGroupRoutes","delete","output","filePath","entryPoints","ignoreEntryPoints","isApiRoutePath","size","clone","routes","arguments","Set","match","add","groups","groupsSet","group","trim","contextModuleToFileNodes","contextModule","keys","key","default","_contextModule","isApi","ignoreRequireErrors","_unused","getNameFromFilePath","hasCustomRootLayoutNode","treeNodesToRootRoute","treeNode","withOptionalRootLayout","processKeys","ignore","some","pattern","test","assertDuplicateRoutes","filenames","duplicates","filename","removeSupportedExtensions","reduce","acc","Object","entries","forEach","_ref2","_ref3","_slicedToArray","count","getRoutes","getExactRoutesInternal","appendSitemapRoute","appendUnmatchedRoute","removeFilePath","crawlAndAppendEntryFilesForInitialRoutes","crawlAndAppendEntryFiles","rest","_objectWithoutProperties","_excluded","unique","array","isLayoutRoute","isViewRoute","isApiRoute","_route$entryPoints","nextEntryPoints","initialRoutes","initialRoute","isInitial","_route$entryPoints3","_route$entryPoints2","getIgnoreList","_options$ignore","preserveApiRoutes","treeNodes","contextModuleToTree","getExactRoutes","allowed","_require","Sitemap","getNavOptions","generated","internal","userDefinedDynamicRoute","getUserDefinedTopLevelNotFoundRoute","Unmatched","_routes$children","isDeepDynamic","DefaultNavigator"],"sources":["/Users/jonathanbruce/Coding/trackr/node_modules/expo-router/src/getRoutes.ts"],"sourcesContent":["import type { DynamicConvention, RouteNode } from './Route';\nimport EXPO_ROUTER_IMPORT_MODE from './import-mode';\nimport {\n  getNameFromFilePath,\n  matchDeepDynamicRouteName,\n  matchDynamicName,\n  matchGroupName,\n  removeSupportedExtensions,\n  stripGroupSegmentsFromPath,\n} from './matchers';\nimport type { RequireContext } from './types';\n\nexport type FileNode = Pick<IntermediateRouteNode, 'contextKey' | 'loadRoute' | 'filePath'> & {\n  /** Like `(tab)/index` */\n  normalizedName: string;\n};\n\ntype IntermediateRouteNode = Omit<RouteNode, 'children'> & {\n  filePath: string;\n  children: IntermediateRouteNode[];\n};\n\ntype TreeNode = {\n  name: string;\n  children: TreeNode[];\n  parents: string[];\n  /** null when there is no file in a folder. */\n  node: FileNode | null;\n};\n\ntype Options = {\n  ignore?: RegExp[];\n  preserveApiRoutes?: boolean;\n  ignoreRequireErrors?: boolean;\n  ignoreEntryPoints?: boolean;\n};\n\n/** Convert a flat map of file nodes into a nested tree of files. */\nexport function getRecursiveTree(files: FileNode[]): TreeNode {\n  const tree = {\n    name: '',\n    children: [],\n    parents: [],\n    node: null,\n  };\n\n  for (const file of files) {\n    // ['(tab)', 'settings', '[...another]']\n    const parts = file.normalizedName.split('/');\n    let currentNode: TreeNode = tree;\n    for (let i = 0; i < parts.length; i++) {\n      const part = parts[i];\n\n      if (i === parts.length - 1 && part === '_layout') {\n        if (currentNode.node) {\n          const overwritten = currentNode.node.contextKey;\n          throw new Error(\n            `Higher priority Layout Route \"${file.contextKey}\" overriding redundant Layout Route \"${overwritten}\". Remove the Layout Route \"${overwritten}\" to fix this.`\n          );\n        }\n        continue;\n      }\n\n      const existing = currentNode.children.find((item) => item.name === part);\n      if (existing) {\n        currentNode = existing;\n      } else {\n        const newNode: TreeNode = {\n          name: part,\n          children: [],\n          parents: [...currentNode.parents, currentNode.name],\n          node: null,\n        };\n        currentNode.children.push(newNode);\n        currentNode = newNode;\n      }\n    }\n    currentNode.node = file;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assertDeprecatedFormat(tree);\n  }\n\n  return tree;\n}\n\nfunction assertDeprecatedFormat(tree: TreeNode) {\n  for (const child of tree.children) {\n    if (child.node && child.children.length && !child.node.normalizedName.endsWith('_layout')) {\n      const ext = child.node.contextKey.split('.').pop();\n      throw new Error(\n        `Using deprecated Layout Route format: Move \\`./app/${child.node.normalizedName}.${ext}\\` to \\`./app/${child.node.normalizedName}/_layout.${ext}\\``\n      );\n    }\n    assertDeprecatedFormat(child);\n  }\n}\n\nfunction getTreeNodesAsRouteNodes(nodes: TreeNode[], options: Options): IntermediateRouteNode[] {\n  return nodes\n    .map((node) => treeNodeToRouteNode(node, options))\n    .flat()\n    .filter(Boolean) as IntermediateRouteNode[];\n}\n\nexport function generateDynamicFromSegment(name: string): DynamicConvention | null {\n  if (name === '+not-found') {\n    return {\n      name: '+not-found',\n      deep: true,\n      notFound: true,\n    };\n  }\n\n  const deepDynamicName = matchDeepDynamicRouteName(name);\n  const dynamicName = deepDynamicName ?? matchDynamicName(name);\n  if (!dynamicName) {\n    return null;\n  }\n  return { name: dynamicName, deep: !!deepDynamicName };\n}\n\nexport function generateDynamic(name: string): IntermediateRouteNode['dynamic'] {\n  const description = name\n    .split('/')\n    .map((segment) => generateDynamicFromSegment(segment))\n    .filter(Boolean) as DynamicConvention[];\n  return description.length === 0 ? null : description;\n}\n\nfunction collapseRouteSegments(route: string) {\n  return stripGroupSegmentsFromPath(route.replace(/\\/index$/, ''));\n}\n\n/**\n * Given a route node and a name representing the group name,\n * find the nearest child matching the name.\n *\n * Doesn't support slashes in the name.\n * Routes like `explore/(something)/index` will be matched against `explore`.\n *\n */\nfunction getDefaultInitialRoute(node: IntermediateRouteNode, name: string) {\n  return node.children.find((node) => collapseRouteSegments(node.route) === name);\n}\n\nfunction applyDefaultInitialRouteName(node: IntermediateRouteNode): IntermediateRouteNode {\n  const groupName = matchGroupName(node.route);\n  if (!node.children?.length) {\n    return node;\n  }\n\n  // Guess at the initial route based on the group name.\n  // TODO(EvanBacon): Perhaps we should attempt to warn when the group doesn't match any child routes.\n  let initialRouteName = groupName ? getDefaultInitialRoute(node, groupName)?.route : undefined;\n  const loaded = node.loadRoute();\n\n  if (loaded?.unstable_settings) {\n    // Allow unstable_settings={ initialRouteName: '...' } to override the default initial route name.\n    initialRouteName = loaded.unstable_settings.initialRouteName ?? initialRouteName;\n\n    if (groupName) {\n      // Allow unstable_settings={ 'custom': { initialRouteName: '...' } } to override the less specific initial route name.\n      const groupSpecificInitialRouteName = loaded.unstable_settings?.[groupName]?.initialRouteName;\n\n      initialRouteName = groupSpecificInitialRouteName ?? initialRouteName;\n    }\n  }\n\n  return {\n    ...node,\n    initialRouteName,\n  };\n}\n\nfunction folderNodeToRouteNode(\n  { name, children }: TreeNode,\n  options: Options\n): IntermediateRouteNode[] | null {\n  // Empty folder, skip it.\n  if (!children.length) {\n    return null;\n  }\n\n  // When there's a directory, but no layout route file (with valid export), the child routes won't be grouped.\n  // This pushes all children into the nearest layout route.\n  return getTreeNodesAsRouteNodes(\n    children.map((child) => {\n      return {\n        ...child,\n        name: [name, child.name].filter(Boolean).join('/'),\n      };\n    }),\n    options\n  );\n}\n\nfunction fileNodeToRouteNode(tree: TreeNode, options: Options): IntermediateRouteNode[] | null {\n  const { name, node, children } = tree;\n\n  if (!node) throw new Error('node must be defined');\n\n  const dynamic = generateDynamic(name);\n\n  const clones = extrapolateGroupRoutes(name, node.contextKey);\n  clones.delete(name);\n\n  const output = {\n    loadRoute: node.loadRoute,\n    route: name,\n    contextKey: node.contextKey,\n    children: getTreeNodesAsRouteNodes(children, options),\n    dynamic,\n    filePath: node.filePath,\n    entryPoints:\n      options.ignoreEntryPoints || isApiRoutePath(node.contextKey) ? undefined : [node.filePath],\n  };\n\n  if (clones.size) {\n    return [...clones].map((clone) =>\n      applyDefaultInitialRouteName({\n        ...output,\n        contextKey: node.contextKey.replace(output.route, clone),\n        route: clone,\n      })\n    );\n  }\n\n  return [\n    applyDefaultInitialRouteName({\n      loadRoute: node.loadRoute,\n      route: name,\n      entryPoints:\n        options.ignoreEntryPoints || isApiRoutePath(node.contextKey) ? undefined : [node.filePath],\n      filePath: node.filePath,\n      contextKey: node.contextKey,\n      children: getTreeNodesAsRouteNodes(children, options),\n      dynamic,\n    }),\n  ];\n}\n\nfunction extrapolateGroupRoutes(\n  route: string,\n  contextKey: string,\n  routes: Set<string> = new Set()\n): Set<string> {\n  const match = matchGroupName(route);\n\n  if (!match) {\n    routes.add(route);\n    return routes;\n  }\n\n  const groups = match?.split(',');\n  const groupsSet = new Set(groups);\n\n  if (groupsSet.size !== groups.length) {\n    throw new Error(\n      `Array syntax cannot contain duplicate group name \"${groups}\" in \"${contextKey}\".`\n    );\n  }\n\n  if (groups.length === 1) {\n    routes.add(route);\n    return routes;\n  }\n\n  for (const group of groups) {\n    extrapolateGroupRoutes(route.replace(match, group.trim()), contextKey, routes);\n  }\n\n  return routes;\n}\n\nfunction treeNodeToRouteNode(tree: TreeNode, options: Options): IntermediateRouteNode[] | null {\n  if (tree.node) {\n    return fileNodeToRouteNode(tree, options);\n  }\n\n  return folderNodeToRouteNode(tree, options);\n}\n\nfunction contextModuleToFileNodes(\n  contextModule: RequireContext,\n  options: Options = {},\n  files: string[] = contextModule.keys()\n): FileNode[] {\n  const nodes = files.map((key) => {\n    // In development, check if the file exports a default component\n    // this helps keep things snappy when creating files. In production we load all screens lazily.\n    if (process.env.NODE_ENV === 'development') {\n      // If the user has set the `EXPO_ROUTER_IMPORT_MODE` to `sync` then we should\n      // filter the missing routes.\n      if (EXPO_ROUTER_IMPORT_MODE === 'sync') {\n        const isApi = key.match(/\\+api\\.[jt]sx?$/);\n        if (!isApi && !contextModule(key)?.default) {\n          return null;\n        }\n      }\n    }\n    const node: FileNode = {\n      loadRoute() {\n        if (options.ignoreRequireErrors) {\n          try {\n            return contextModule(key);\n          } catch {\n            return {};\n          }\n        } else {\n          return contextModule(key);\n        }\n      },\n      normalizedName: getNameFromFilePath(key),\n      filePath: key,\n      contextKey: key,\n    };\n\n    return node;\n  });\n\n  return nodes.filter(Boolean) as FileNode[];\n}\n\nfunction hasCustomRootLayoutNode(routes: IntermediateRouteNode[]) {\n  if (routes.length !== 1) {\n    return false;\n  }\n  // This could either be the root _layout or an app with a single file.\n  const route = routes[0];\n\n  if (route.route === '' && route.contextKey.match(/^\\.\\/_layout\\.([jt]sx?)$/)) {\n    return true;\n  }\n  return false;\n}\n\nfunction treeNodesToRootRoute(treeNode: TreeNode, options: Options): IntermediateRouteNode | null {\n  const routes = treeNodeToRouteNode(treeNode, options);\n  return withOptionalRootLayout(routes);\n}\n\nfunction processKeys(files: string[], options: Options): string[] {\n  const { ignore } = options;\n\n  return files.filter((file) => {\n    return !ignore?.some((pattern) => pattern.test(file));\n  });\n}\n\n/**\n * Asserts if the require.context has files that share the same name but have different extensions. Exposed for testing.\n * @private\n */\nexport function assertDuplicateRoutes(filenames: string[]) {\n  if (process.env.NODE_ENV === 'production') {\n    return;\n  }\n\n  const duplicates = filenames\n    .map((filename) => removeSupportedExtensions(filename))\n    .reduce(\n      (acc, filename) => {\n        acc[filename] = acc[filename] ? acc[filename] + 1 : 1;\n        return acc;\n      },\n      {} as Record<string, number>\n    );\n\n  Object.entries(duplicates).forEach(([filename, count]) => {\n    if (count > 1) {\n      throw new Error(`Multiple files match the route name \"${filename}\".`);\n    }\n  });\n}\n\n/** Given a Metro context module, return an array of nested routes. */\nexport function getRoutes(contextModule: RequireContext, options?: Options): RouteNode | null {\n  const route = getExactRoutesInternal(contextModule, options);\n\n  // If there is no route, return an empty route.\n  if (!route) {\n    return null;\n  }\n\n  appendSitemapRoute(route);\n\n  // Auto add not found route if it doesn't exist\n  appendUnmatchedRoute(route);\n\n  if (options?.ignoreEntryPoints) {\n    return removeFilePath(route);\n  }\n  return removeFilePath(crawlAndAppendEntryFilesForInitialRoutes(crawlAndAppendEntryFiles(route)));\n}\n\nfunction removeFilePath(route: IntermediateRouteNode | null): RouteNode | null {\n  if (!route) return route;\n  const { filePath, ...rest } = route;\n\n  return {\n    ...rest,\n    children: route.children.map((child) => removeFilePath(child)).filter(Boolean) as RouteNode[],\n  };\n}\n\nfunction unique<T>(array: T[]): T[] {\n  return [...new Set(array)];\n}\n\nfunction isLayoutRoute(route: IntermediateRouteNode) {\n  return route.contextKey.match(/\\/_layout\\.([jt]sx?)$/);\n}\n\nfunction isViewRoute(route?: IntermediateRouteNode | null): route is IntermediateRouteNode {\n  return !!route && !isApiRoute(route);\n}\nfunction isApiRoute(route: IntermediateRouteNode) {\n  return isApiRoutePath(route.contextKey);\n}\nfunction isApiRoutePath(route: string): boolean {\n  return !!route.match(/\\+api\\.[jt]sx?$/);\n}\n\nfunction crawlAndAppendEntryFiles(\n  route: IntermediateRouteNode | null,\n  entryPoints: string[] = []\n): IntermediateRouteNode | null {\n  if (!isViewRoute(route)) {\n    return null;\n  }\n  const nextEntryPoints = unique([...entryPoints, ...(route.entryPoints ?? []), route.filePath]);\n\n  route.children.forEach((child) => {\n    crawlAndAppendEntryFiles(child, nextEntryPoints);\n  });\n\n  // Skip adding entry points for layout routes since we only need them\n  // for rendering child nodes.\n  if (isLayoutRoute(route)) {\n    delete route.entryPoints;\n  } else {\n    route.entryPoints = nextEntryPoints;\n  }\n\n  return route;\n}\n\nfunction crawlAndAppendEntryFilesForInitialRoutes(\n  route: IntermediateRouteNode | null,\n  initialRoutes: IntermediateRouteNode[] = []\n): IntermediateRouteNode | null {\n  if (!isViewRoute(route)) {\n    return null;\n  }\n\n  // Skip adding entry points for layout routes since we only need them\n  // for rendering child nodes.\n  if (isLayoutRoute(route)) {\n    if (route.initialRouteName) {\n      const initialRoute = route.children.find((child) => child.route === route.initialRouteName);\n      if (!initialRoute) {\n        throw new Error(\n          `Invalid initialRouteName \"${route.initialRouteName}\" defined in ${\n            route.filePath\n          }. Options are: ${route.children.map((route) => route.route).join(', ')}`\n        );\n      }\n      // Update all children to include the entry points from the initial route...\n\n      route.children.forEach((child) => {\n        crawlAndAppendEntryFilesForInitialRoutes(child, [...initialRoutes, initialRoute]);\n      });\n    }\n  } else {\n    const isInitial = initialRoutes.some(\n      (initialRoute) => initialRoute.contextKey === route.contextKey\n    );\n    if (!isInitial) {\n      route.entryPoints = unique([\n        ...initialRoutes.map((route) => route.entryPoints ?? []).flat(),\n        ...(route.entryPoints ?? []),\n      ]);\n    }\n  }\n\n  return route;\n}\n\nfunction getIgnoreList(options?: Options) {\n  const ignore: RegExp[] = [/^\\.\\/\\+html\\.[tj]sx?$/, ...(options?.ignore ?? [])];\n  if (options?.preserveApiRoutes !== true) {\n    ignore.push(/\\+api\\.[tj]sx?$/);\n  }\n  return ignore;\n}\n\nfunction getExactRoutesInternal(\n  contextModule: RequireContext,\n  options: Options = {}\n): IntermediateRouteNode | null {\n  const treeNodes = contextModuleToTree(contextModule, options);\n  return treeNodesToRootRoute(treeNodes, options);\n}\n\n/** Get routes without unmatched or sitemap. */\nexport function getExactRoutes(contextModule: RequireContext, options?: Options): RouteNode | null {\n  const route = getExactRoutesInternal(contextModule, options);\n  if (!options?.ignoreEntryPoints) {\n    return removeFilePath(\n      crawlAndAppendEntryFilesForInitialRoutes(crawlAndAppendEntryFiles(route))\n    );\n  }\n\n  return removeFilePath(route);\n}\n\nfunction contextModuleToTree(contextModule: RequireContext, options?: Options) {\n  const allowed = processKeys(contextModule.keys(), {\n    ...options,\n    ignore: getIgnoreList(options),\n  });\n  assertDuplicateRoutes(allowed);\n  const files = contextModuleToFileNodes(contextModule, options, allowed);\n  return getRecursiveTree(files);\n}\n\nfunction appendSitemapRoute(routes: IntermediateRouteNode) {\n  if (\n    !routes.children.length ||\n    // Allow overriding the sitemap route\n    routes.children.some((route) => route.route === '_sitemap')\n  ) {\n    return routes;\n  }\n  routes.children.push({\n    loadRoute() {\n      const { Sitemap, getNavOptions } = require('./views/Sitemap');\n      return { default: Sitemap, getNavOptions };\n    },\n    filePath: 'expo-router/build/views/Sitemap.js',\n    route: '_sitemap',\n    contextKey: './_sitemap.tsx',\n    generated: true,\n    internal: true,\n    dynamic: null,\n    children: [],\n  });\n  return routes;\n}\n\nfunction appendUnmatchedRoute(routes: IntermediateRouteNode) {\n  // Auto add not found route if it doesn't exist\n  const userDefinedDynamicRoute = getUserDefinedTopLevelNotFoundRoute(routes);\n  if (!userDefinedDynamicRoute) {\n    routes.children.push({\n      loadRoute() {\n        return { default: require('./views/Unmatched').Unmatched };\n      },\n      filePath: 'expo-router/build/views/Unmatched.js',\n      route: '+not-found',\n      contextKey: './+not-found.tsx',\n      dynamic: [{ name: '+not-found', deep: true, notFound: true }],\n      children: [],\n      generated: true,\n      internal: true,\n    });\n  }\n  return routes;\n}\n\n/**\n * Exposed for testing.\n * @returns a top-level deep dynamic route if it exists, otherwise null.\n */\nexport function getUserDefinedTopLevelNotFoundRoute(routes: RouteNode | null): RouteNode | null {\n  // Auto add not found route if it doesn't exist\n  for (const route of routes?.children ?? []) {\n    if (route.generated) continue;\n    const isDeepDynamic =\n      stripGroupSegmentsFromPath(route.route) === '+not-found' && route.route.match(/\\+not-found$/);\n    if (isDeepDynamic) {\n      return route;\n    }\n    // Recurse through group routes\n    if (matchGroupName(route.route)) {\n      const child = getUserDefinedTopLevelNotFoundRoute(route);\n      if (child) {\n        return child;\n      }\n    }\n  }\n  return null;\n}\n\nfunction withOptionalRootLayout(\n  routes: IntermediateRouteNode[] | null\n): IntermediateRouteNode | null {\n  if (!routes?.length) {\n    return null;\n  }\n\n  if (hasCustomRootLayoutNode(routes)) {\n    return routes[0];\n  }\n\n  return {\n    loadRoute: () => ({\n      default: (require('./views/Navigator') as typeof import('./views/Navigator'))\n        .DefaultNavigator,\n    }),\n    filePath: 'expo-router/build/views/Navigator.js',\n    // Generate a fake file name for the directory\n    contextKey: './_layout.tsx',\n    route: '',\n    generated: true,\n    dynamic: null,\n    children: routes,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}