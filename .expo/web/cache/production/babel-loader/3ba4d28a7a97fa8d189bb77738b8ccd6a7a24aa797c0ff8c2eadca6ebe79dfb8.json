{"ast":null,"code":"'use client';\"use strict\";var _defineProperty=require(\"@babel/runtime/helpers/defineProperty\");var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||(\"get\"in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function get(){return m[k];}};}Object.defineProperty(o,k2,desc);}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,\"default\",{enumerable:true,value:v});}:function(o,v){o[\"default\"]=v;});var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod)if(k!==\"default\"&&Object.prototype.hasOwnProperty.call(mod,k))__createBinding(result,mod,k);__setModuleDefault(result,mod);return result;};var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod};};Object.defineProperty(exports,\"__esModule\",{value:true});exports.useInitializeExpoRouter=exports.useStoreRouteInfo=exports.useStoreRootState=exports.useExpoRouter=exports.store=exports.RouterStore=void 0;var native_1=require(\"@react-navigation/native\");var expo_constants_1=__importDefault(require(\"expo-constants\"));var fast_deep_equal_1=__importDefault(require(\"fast-deep-equal\"));var react_1=require(\"react\");var react_native_1=require(\"react-native-web/dist/index\");var routing_1=require(\"./routing\");var sort_routes_1=require(\"./sort-routes\");var LocationProvider_1=require(\"../LocationProvider\");var getPathFromState_1=require(\"../fork/getPathFromState\");var getLinkingConfig_1=require(\"../getLinkingConfig\");var getRoutes_1=require(\"../getRoutes\");var useScreens_1=require(\"../useScreens\");var SplashScreen=__importStar(require(\"../views/Splash\"));var RouterStore=function(){function RouterStore(){var _this=this;_classCallCheck(this,RouterStore);this.hasAttemptedToHideSplash=false;this.rootStateSubscribers=new Set();this.storeSubscribers=new Set();this.linkTo=routing_1.linkTo.bind(this);this.getSortedRoutes=sort_routes_1.getSortedRoutes.bind(this);this.goBack=routing_1.goBack.bind(this);this.canGoBack=routing_1.canGoBack.bind(this);this.push=routing_1.push.bind(this);this.dismiss=routing_1.dismiss.bind(this);this.dismissTo=routing_1.dismissTo.bind(this);this.replace=routing_1.replace.bind(this);this.dismissAll=routing_1.dismissAll.bind(this);this.canDismiss=routing_1.canDismiss.bind(this);this.setParams=routing_1.setParams.bind(this);this.navigate=routing_1.navigate.bind(this);this.reload=routing_1.reload.bind(this);this.subscribeToRootState=function(subscriber){_this.rootStateSubscribers.add(subscriber);return function(){return _this.rootStateSubscribers.delete(subscriber);};};this.subscribeToStore=function(subscriber){_this.storeSubscribers.add(subscriber);return function(){return _this.storeSubscribers.delete(subscriber);};};this.snapshot=function(){return _this;};this.rootStateSnapshot=function(){return _this.rootState;};this.routeInfoSnapshot=function(){return _this.routeInfo;};}return _createClass(RouterStore,[{key:\"initialize\",value:function initialize(context,navigationRef){var _this$navigationRefSu,_expo_constants_1$def,_expo_constants_1$def2,_this2=this;var linkingConfigOptions=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};this.initialState=undefined;this.rootState=undefined;this.nextState=undefined;this.linking=undefined;(_this$navigationRefSu=this.navigationRefSubscription)==null?void 0:_this$navigationRefSu.call(this);this.rootStateSubscribers.clear();this.storeSubscribers.clear();this.routeNode=(0,getRoutes_1.getRoutes)(context,_objectSpread(_objectSpread({},(_expo_constants_1$def=expo_constants_1.default.expoConfig)==null?void 0:(_expo_constants_1$def2=_expo_constants_1$def.extra)==null?void 0:_expo_constants_1$def2.router),{},{ignoreEntryPoints:true,platform:react_native_1.Platform.OS}));this.routeInfo={unstable_globalHref:'',pathname:'',isIndex:false,params:{},segments:[]};if(this.routeNode){var _this$linking;this.linking=(0,getLinkingConfig_1.getLinkingConfig)(this,this.routeNode,context,linkingConfigOptions);this.rootComponent=(0,useScreens_1.getQualifiedRouteComponent)(this.routeNode);var initialURL=(_this$linking=this.linking)==null?void 0:_this$linking.getInitialURL==null?void 0:_this$linking.getInitialURL();if(typeof initialURL==='string'){var _this$linking$getStat,_this$linking2;this.rootState=(_this$linking$getStat=(_this$linking2=this.linking).getStateFromPath)==null?void 0:_this$linking$getStat.call(_this$linking2,initialURL,this.linking.config);this.initialState=this.rootState;if(this.rootState){this.routeInfo=this.getRouteInfo(this.rootState);}}}else{if(\"production\"==='production'){throw new Error('No routes found');}this.rootComponent=react_1.Fragment;}this.navigationRef=navigationRef;this.navigationRefSubscription=navigationRef.addListener('state',function(data){var state=data.data.state;if(!_this2.hasAttemptedToHideSplash){_this2.hasAttemptedToHideSplash=true;_this2.splashScreenAnimationFrame=requestAnimationFrame(function(){SplashScreen._internal_maybeHideAsync==null?void 0:SplashScreen._internal_maybeHideAsync();});}var shouldUpdateSubscribers=_this2.nextState===state;_this2.nextState=undefined;if(state&&state!==_this2.rootState){exports.store.updateState(state,undefined);shouldUpdateSubscribers=true;}if(shouldUpdateSubscribers){for(var subscriber of _this2.rootStateSubscribers){subscriber();}}});for(var subscriber of this.storeSubscribers){subscriber();}}},{key:\"updateState\",value:function updateState(state){var nextState=arguments.length>1&&arguments[1]!==undefined?arguments[1]:state;exports.store.rootState=state;exports.store.nextState=nextState;var nextRouteInfo=exports.store.getRouteInfo(state);if(!(0,fast_deep_equal_1.default)(this.routeInfo,nextRouteInfo)){exports.store.routeInfo=nextRouteInfo;}}},{key:\"getRouteInfo\",value:function getRouteInfo(state){var _this3=this;return(0,LocationProvider_1.getRouteInfoFromState)(function(state,asPath){var _this3$linking;return(0,getPathFromState_1.getPathDataFromState)(state,_objectSpread(_objectSpread({screens:{}},(_this3$linking=_this3.linking)==null?void 0:_this3$linking.config),{},{preserveDynamicRoutes:asPath,preserveGroups:asPath,shouldEncodeURISegment:false}));},state);}},{key:\"shouldShowTutorial\",value:function shouldShowTutorial(){return!this.routeNode&&\"production\"==='development';}},{key:\"cleanup\",value:function cleanup(){if(this.splashScreenAnimationFrame){cancelAnimationFrame(this.splashScreenAnimationFrame);}}}]);}();exports.RouterStore=RouterStore;exports.store=new RouterStore();function useExpoRouter(){return(0,react_1.useSyncExternalStore)(exports.store.subscribeToStore,exports.store.snapshot,exports.store.snapshot);}exports.useExpoRouter=useExpoRouter;function syncStoreRootState(){if(exports.store.navigationRef.isReady()){var currentState=exports.store.navigationRef.getRootState();if(exports.store.rootState!==currentState){exports.store.updateState(currentState);}}}function useStoreRootState(){syncStoreRootState();return(0,react_1.useSyncExternalStore)(exports.store.subscribeToRootState,exports.store.rootStateSnapshot,exports.store.rootStateSnapshot);}exports.useStoreRootState=useStoreRootState;function useStoreRouteInfo(){syncStoreRootState();return(0,react_1.useSyncExternalStore)(exports.store.subscribeToRootState,exports.store.routeInfoSnapshot,exports.store.routeInfoSnapshot);}exports.useStoreRouteInfo=useStoreRouteInfo;function useInitializeExpoRouter(context,options){var navigationRef=(0,native_1.useNavigationContainerRef)();(0,react_1.useMemo)(function(){return exports.store.initialize(context,navigationRef,options);},[context]);useExpoRouter();return exports.store;}exports.useInitializeExpoRouter=useInitializeExpoRouter;","map":{"version":3,"names":["native_1","require","expo_constants_1","__importDefault","fast_deep_equal_1","react_1","react_native_1","routing_1","sort_routes_1","LocationProvider_1","getPathFromState_1","getLinkingConfig_1","getRoutes_1","useScreens_1","SplashScreen","__importStar","RouterStore","_this","_classCallCheck","hasAttemptedToHideSplash","rootStateSubscribers","Set","storeSubscribers","linkTo","bind","getSortedRoutes","goBack","canGoBack","push","dismiss","dismissTo","replace","dismissAll","canDismiss","setParams","navigate","reload","subscribeToRootState","subscriber","add","delete","subscribeToStore","snapshot","rootStateSnapshot","rootState","routeInfoSnapshot","routeInfo","_createClass","key","value","initialize","context","navigationRef","_this$navigationRefSu","_expo_constants_1$def","_expo_constants_1$def2","_this2","linkingConfigOptions","arguments","length","undefined","initialState","nextState","linking","navigationRefSubscription","call","clear","routeNode","getRoutes","_objectSpread","default","expoConfig","extra","router","ignoreEntryPoints","platform","Platform","OS","unstable_globalHref","pathname","isIndex","params","segments","_this$linking","getLinkingConfig","rootComponent","getQualifiedRouteComponent","initialURL","getInitialURL","_this$linking$getStat","_this$linking2","getStateFromPath","config","getRouteInfo","Error","Fragment","addListener","data","state","splashScreenAnimationFrame","requestAnimationFrame","_internal_maybeHideAsync","shouldUpdateSubscribers","exports","store","updateState","nextRouteInfo","_this3","getRouteInfoFromState","asPath","_this3$linking","getPathDataFromState","screens","preserveDynamicRoutes","preserveGroups","shouldEncodeURISegment","shouldShowTutorial","cleanup","cancelAnimationFrame","useExpoRouter","useSyncExternalStore","syncStoreRootState","isReady","currentState","getRootState","useStoreRootState","useStoreRouteInfo","useInitializeExpoRouter","options","useNavigationContainerRef","useMemo"],"sources":["/Users/jonathanbruce/Coding/trackr/node_modules/expo-router/src/global-state/router-store.tsx"],"sourcesContent":["'use client';\n\nimport {\n  NavigationContainerRefWithCurrent,\n  useNavigationContainerRef,\n} from '@react-navigation/native';\nimport Constants from 'expo-constants';\nimport equal from 'fast-deep-equal';\nimport { useSyncExternalStore, useMemo, ComponentType, Fragment } from 'react';\nimport { Platform } from 'react-native';\n\nimport {\n  canGoBack,\n  canDismiss,\n  goBack,\n  linkTo,\n  navigate,\n  dismiss,\n  dismissAll,\n  push,\n  reload,\n  replace,\n  setParams,\n  dismissTo,\n} from './routing';\nimport { getSortedRoutes } from './sort-routes';\nimport { UrlObject, getRouteInfoFromState } from '../LocationProvider';\nimport { RouteNode } from '../Route';\nimport { getPathDataFromState, getPathFromState } from '../fork/getPathFromState';\n// import { ResultState } from '../fork/getStateFromPath';\nimport { ExpoLinkingOptions, LinkingConfigOptions, getLinkingConfig } from '../getLinkingConfig';\nimport { getRoutes } from '../getRoutes';\nimport { RequireContext } from '../types';\nimport { getQualifiedRouteComponent } from '../useScreens';\nimport * as SplashScreen from '../views/Splash';\n\ntype ResultState = any;\n\n/**\n * This is the global state for the router. It is used to keep track of the current route, and to provide a way to navigate to other routes.\n *\n * There should only be one instance of this class and be initialized via `useInitializeExpoRouter`\n */\nexport class RouterStore {\n  routeNode!: RouteNode | null;\n  rootComponent!: ComponentType;\n  linking?: ExpoLinkingOptions;\n  private hasAttemptedToHideSplash: boolean = false;\n\n  initialState?: ResultState;\n  rootState?: ResultState;\n  nextState?: ResultState;\n  routeInfo?: UrlObject;\n  splashScreenAnimationFrame?: number;\n\n  navigationRef!: NavigationContainerRefWithCurrent<ReactNavigation.RootParamList>;\n  navigationRefSubscription!: () => void;\n\n  rootStateSubscribers = new Set<() => void>();\n  storeSubscribers = new Set<() => void>();\n\n  linkTo = linkTo.bind(this);\n  getSortedRoutes = getSortedRoutes.bind(this);\n  goBack = goBack.bind(this);\n  canGoBack = canGoBack.bind(this);\n  push = push.bind(this);\n  dismiss = dismiss.bind(this);\n  dismissTo = dismissTo.bind(this);\n  replace = replace.bind(this);\n  dismissAll = dismissAll.bind(this);\n  canDismiss = canDismiss.bind(this);\n  setParams = setParams.bind(this);\n  navigate = navigate.bind(this);\n  reload = reload.bind(this);\n\n  initialize(\n    context: RequireContext,\n    navigationRef: NavigationContainerRefWithCurrent<ReactNavigation.RootParamList>,\n    linkingConfigOptions: LinkingConfigOptions = {}\n  ) {\n    // Clean up any previous state\n    this.initialState = undefined;\n    this.rootState = undefined;\n    this.nextState = undefined;\n    this.linking = undefined;\n    this.navigationRefSubscription?.();\n    this.rootStateSubscribers.clear();\n    this.storeSubscribers.clear();\n\n    this.routeNode = getRoutes(context, {\n      ...Constants.expoConfig?.extra?.router,\n      ignoreEntryPoints: true,\n      platform: Platform.OS,\n    });\n\n    // We always needs routeInfo, even if there are no routes. This can happen if:\n    //  - there are no routes (we are showing the onboarding screen)\n    //  - getInitialURL() is async\n    this.routeInfo = {\n      unstable_globalHref: '',\n      pathname: '',\n      isIndex: false,\n      params: {},\n      segments: [],\n    };\n\n    if (this.routeNode) {\n      // We have routes, so get the linking config and the root component\n      this.linking = getLinkingConfig(this, this.routeNode, context, linkingConfigOptions);\n      this.rootComponent = getQualifiedRouteComponent(this.routeNode);\n\n      // By default React Navigation is async and does not render anything in the first pass as it waits for `getInitialURL`\n      // This will cause static rendering to fail, which once performs a single pass.\n      // If the initialURL is a string, we can preload the state and routeInfo, skipping React Navigation's async behavior.\n      const initialURL = this.linking?.getInitialURL?.();\n      if (typeof initialURL === 'string') {\n        this.rootState = this.linking.getStateFromPath?.(initialURL, this.linking.config);\n        this.initialState = this.rootState;\n        if (this.rootState) {\n          this.routeInfo = this.getRouteInfo(this.rootState);\n        }\n      }\n    } else {\n      // Only error in production, in development we will show the onboarding screen\n      if (process.env.NODE_ENV === 'production') {\n        throw new Error('No routes found');\n      }\n\n      // In development, we will show the onboarding screen\n      this.rootComponent = Fragment;\n    }\n\n    /**\n     * Counter intuitively - this fires AFTER both React Navigation's state changes and the subsequent paint.\n     * This poses a couple of issues for Expo Router,\n     *   - Ensuring hooks (e.g. useSearchParams()) have data in the initial render\n     *   - Reacting to state changes after a navigation event\n     *\n     * This is why the initial render renders a Fragment and we wait until `onReady()` is called\n     * Additionally, some hooks compare the state from both the store and the navigationRef. If the store it stale,\n     * that hooks will manually update the store.\n     *\n     */\n    this.navigationRef = navigationRef;\n    this.navigationRefSubscription = navigationRef.addListener('state', (data) => {\n      const state = data.data.state as ResultState;\n\n      if (!this.hasAttemptedToHideSplash) {\n        this.hasAttemptedToHideSplash = true;\n        // NOTE(EvanBacon): `navigationRef.isReady` is sometimes not true when state is called initially.\n        this.splashScreenAnimationFrame = requestAnimationFrame(() => {\n          SplashScreen._internal_maybeHideAsync?.();\n        });\n      }\n\n      let shouldUpdateSubscribers = this.nextState === state;\n      this.nextState = undefined;\n\n      // This can sometimes be undefined when an error is thrown in the Root Layout Route.\n      // Additionally that state may already equal the rootState if it was updated within a hook\n      if (state && state !== this.rootState) {\n        store.updateState(state, undefined);\n        shouldUpdateSubscribers = true;\n      }\n\n      // If the state has changed, or was changed inside a hook we need to update the subscribers\n      if (shouldUpdateSubscribers) {\n        for (const subscriber of this.rootStateSubscribers) {\n          subscriber();\n        }\n      }\n    });\n\n    for (const subscriber of this.storeSubscribers) {\n      subscriber();\n    }\n  }\n\n  updateState(state: ResultState, nextState = state) {\n    store.rootState = state;\n    store.nextState = nextState;\n\n    const nextRouteInfo = store.getRouteInfo(state);\n\n    if (!equal(this.routeInfo, nextRouteInfo)) {\n      store.routeInfo = nextRouteInfo;\n    }\n  }\n\n  getRouteInfo(state: ResultState) {\n    return getRouteInfoFromState(\n      (state: Parameters<typeof getPathFromState>[0], asPath: boolean) => {\n        return getPathDataFromState(state, {\n          screens: {},\n          ...this.linking?.config,\n          preserveDynamicRoutes: asPath,\n          preserveGroups: asPath,\n          shouldEncodeURISegment: false,\n        });\n      },\n      state\n    );\n  }\n\n  // This is only used in development, to show the onboarding screen\n  // In production we should have errored during the initialization\n  shouldShowTutorial() {\n    return !this.routeNode && process.env.NODE_ENV === 'development';\n  }\n\n  /** Make sure these are arrow functions so `this` is correctly bound */\n  subscribeToRootState = (subscriber: () => void) => {\n    this.rootStateSubscribers.add(subscriber);\n    return () => this.rootStateSubscribers.delete(subscriber);\n  };\n  subscribeToStore = (subscriber: () => void) => {\n    this.storeSubscribers.add(subscriber);\n    return () => this.storeSubscribers.delete(subscriber);\n  };\n  snapshot = () => {\n    return this;\n  };\n  rootStateSnapshot = () => {\n    return this.rootState!;\n  };\n  routeInfoSnapshot = () => {\n    return this.routeInfo!;\n  };\n\n  cleanup() {\n    if (this.splashScreenAnimationFrame) {\n      cancelAnimationFrame(this.splashScreenAnimationFrame);\n    }\n  }\n}\n\nexport const store = new RouterStore();\n\nexport function useExpoRouter() {\n  return useSyncExternalStore(store.subscribeToStore, store.snapshot, store.snapshot);\n}\n\nfunction syncStoreRootState() {\n  if (store.navigationRef.isReady()) {\n    const currentState = store.navigationRef.getRootState() as unknown as ResultState;\n\n    if (store.rootState !== currentState) {\n      store.updateState(currentState);\n    }\n  }\n}\n\nexport function useStoreRootState() {\n  syncStoreRootState();\n  return useSyncExternalStore(\n    store.subscribeToRootState,\n    store.rootStateSnapshot,\n    store.rootStateSnapshot\n  );\n}\n\nexport function useStoreRouteInfo() {\n  syncStoreRootState();\n  return useSyncExternalStore(\n    store.subscribeToRootState,\n    store.routeInfoSnapshot,\n    store.routeInfoSnapshot\n  );\n}\n\nexport function useInitializeExpoRouter(context: RequireContext, options: LinkingConfigOptions) {\n  const navigationRef = useNavigationContainerRef();\n  useMemo(() => store.initialize(context, navigationRef, options), [context]);\n  useExpoRouter();\n  return store;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}