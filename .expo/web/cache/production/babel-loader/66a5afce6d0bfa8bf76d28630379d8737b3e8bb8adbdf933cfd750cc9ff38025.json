{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"style\",\"mode\",\"edges\"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r]);}return n;},_extends.apply(null,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{useSafeAreaInsets}from'./SafeAreaContext';var defaultEdges={top:'additive',left:'additive',bottom:'additive',right:'additive'};function getEdgeValue(inset,current,mode){switch(mode){case'off':return current;case'maximum':return Math.max(current,inset);case'additive':default:return current+inset;}}export var SafeAreaView=React.forwardRef(function(_ref,ref){var _ref$style=_ref.style,style=_ref$style===void 0?{}:_ref$style,mode=_ref.mode,edges=_ref.edges,rest=_objectWithoutProperties(_ref,_excluded);var insets=useSafeAreaInsets();var edgesRecord=React.useMemo(function(){if(edges==null){return defaultEdges;}return Array.isArray(edges)?edges.reduce(function(acc,edge){acc[edge]='additive';return acc;},{}):edges;},[edges]);var appliedStyle=React.useMemo(function(){var flatStyle=StyleSheet.flatten(style);if(mode==='margin'){var _flatStyle$margin=flatStyle.margin,margin=_flatStyle$margin===void 0?0:_flatStyle$margin,_flatStyle$marginVert=flatStyle.marginVertical,marginVertical=_flatStyle$marginVert===void 0?margin:_flatStyle$marginVert,_flatStyle$marginHori=flatStyle.marginHorizontal,marginHorizontal=_flatStyle$marginHori===void 0?margin:_flatStyle$marginHori,_flatStyle$marginTop=flatStyle.marginTop,marginTop=_flatStyle$marginTop===void 0?marginVertical:_flatStyle$marginTop,_flatStyle$marginRigh=flatStyle.marginRight,marginRight=_flatStyle$marginRigh===void 0?marginHorizontal:_flatStyle$marginRigh,_flatStyle$marginBott=flatStyle.marginBottom,marginBottom=_flatStyle$marginBott===void 0?marginVertical:_flatStyle$marginBott,_flatStyle$marginLeft=flatStyle.marginLeft,marginLeft=_flatStyle$marginLeft===void 0?marginHorizontal:_flatStyle$marginLeft;var marginStyle={marginTop:getEdgeValue(insets.top,marginTop,edgesRecord.top),marginRight:getEdgeValue(insets.right,marginRight,edgesRecord.right),marginBottom:getEdgeValue(insets.bottom,marginBottom,edgesRecord.bottom),marginLeft:getEdgeValue(insets.left,marginLeft,edgesRecord.left)};return[style,marginStyle];}else{var _flatStyle$padding=flatStyle.padding,padding=_flatStyle$padding===void 0?0:_flatStyle$padding,_flatStyle$paddingVer=flatStyle.paddingVertical,paddingVertical=_flatStyle$paddingVer===void 0?padding:_flatStyle$paddingVer,_flatStyle$paddingHor=flatStyle.paddingHorizontal,paddingHorizontal=_flatStyle$paddingHor===void 0?padding:_flatStyle$paddingHor,_flatStyle$paddingTop=flatStyle.paddingTop,paddingTop=_flatStyle$paddingTop===void 0?paddingVertical:_flatStyle$paddingTop,_flatStyle$paddingRig=flatStyle.paddingRight,paddingRight=_flatStyle$paddingRig===void 0?paddingHorizontal:_flatStyle$paddingRig,_flatStyle$paddingBot=flatStyle.paddingBottom,paddingBottom=_flatStyle$paddingBot===void 0?paddingVertical:_flatStyle$paddingBot,_flatStyle$paddingLef=flatStyle.paddingLeft,paddingLeft=_flatStyle$paddingLef===void 0?paddingHorizontal:_flatStyle$paddingLef;var paddingStyle={paddingTop:getEdgeValue(insets.top,paddingTop,edgesRecord.top),paddingRight:getEdgeValue(insets.right,paddingRight,edgesRecord.right),paddingBottom:getEdgeValue(insets.bottom,paddingBottom,edgesRecord.bottom),paddingLeft:getEdgeValue(insets.left,paddingLeft,edgesRecord.left)};return[style,paddingStyle];}},[edgesRecord.bottom,edgesRecord.left,edgesRecord.right,edgesRecord.top,insets.bottom,insets.left,insets.right,insets.top,mode,style]);return React.createElement(View,_extends({style:appliedStyle},rest,{ref:ref}));});","map":{"version":3,"names":["React","StyleSheet","View","useSafeAreaInsets","defaultEdges","top","left","bottom","right","getEdgeValue","inset","current","mode","Math","max","SafeAreaView","forwardRef","_ref","ref","_ref$style","style","edges","rest","_objectWithoutProperties","_excluded","insets","edgesRecord","useMemo","Array","isArray","reduce","acc","edge","appliedStyle","flatStyle","flatten","_flatStyle$margin","margin","_flatStyle$marginVert","marginVertical","_flatStyle$marginHori","marginHorizontal","_flatStyle$marginTop","marginTop","_flatStyle$marginRigh","marginRight","_flatStyle$marginBott","marginBottom","_flatStyle$marginLeft","marginLeft","marginStyle","_flatStyle$padding","padding","_flatStyle$paddingVer","paddingVertical","_flatStyle$paddingHor","paddingHorizontal","_flatStyle$paddingTop","paddingTop","_flatStyle$paddingRig","paddingRight","_flatStyle$paddingBot","paddingBottom","_flatStyle$paddingLef","paddingLeft","paddingStyle","createElement","_extends"],"sources":["/Users/jonathanbruce/Coding/trackr/node_modules/react-native-safe-area-context/src/SafeAreaView.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n  Edge,\n  EdgeMode,\n  EdgeRecord,\n  NativeSafeAreaViewInstance,\n  NativeSafeAreaViewProps,\n} from './SafeArea.types';\nimport { useSafeAreaInsets } from './SafeAreaContext';\n\nconst defaultEdges: Record<Edge, EdgeMode> = {\n  top: 'additive',\n  left: 'additive',\n  bottom: 'additive',\n  right: 'additive',\n};\n\nfunction getEdgeValue(\n  inset: number,\n  current: number,\n  mode: EdgeMode | undefined,\n) {\n  switch (mode) {\n    case 'off':\n      return current;\n    case 'maximum':\n      return Math.max(current, inset);\n    case 'additive':\n    default:\n      return current + inset;\n  }\n}\n\nexport const SafeAreaView = React.forwardRef<\n  NativeSafeAreaViewInstance,\n  NativeSafeAreaViewProps\n>(({ style = {}, mode, edges, ...rest }, ref) => {\n  const insets = useSafeAreaInsets();\n\n  const edgesRecord = React.useMemo(() => {\n    if (edges == null) {\n      return defaultEdges;\n    }\n\n    return Array.isArray(edges)\n      ? edges.reduce<EdgeRecord>((acc, edge: Edge) => {\n          acc[edge] = 'additive';\n          return acc;\n        }, {})\n      : // ts has trouble with refining readonly arrays.\n        (edges as EdgeRecord);\n  }, [edges]);\n\n  const appliedStyle = React.useMemo(() => {\n    const flatStyle = StyleSheet.flatten(style) as Record<string, number>;\n\n    if (mode === 'margin') {\n      const {\n        margin = 0,\n        marginVertical = margin,\n        marginHorizontal = margin,\n        marginTop = marginVertical,\n        marginRight = marginHorizontal,\n        marginBottom = marginVertical,\n        marginLeft = marginHorizontal,\n      } = flatStyle;\n\n      const marginStyle = {\n        marginTop: getEdgeValue(insets.top, marginTop, edgesRecord.top),\n        marginRight: getEdgeValue(insets.right, marginRight, edgesRecord.right),\n        marginBottom: getEdgeValue(\n          insets.bottom,\n          marginBottom,\n          edgesRecord.bottom,\n        ),\n        marginLeft: getEdgeValue(insets.left, marginLeft, edgesRecord.left),\n      };\n\n      return [style, marginStyle];\n    } else {\n      const {\n        padding = 0,\n        paddingVertical = padding,\n        paddingHorizontal = padding,\n        paddingTop = paddingVertical,\n        paddingRight = paddingHorizontal,\n        paddingBottom = paddingVertical,\n        paddingLeft = paddingHorizontal,\n      } = flatStyle;\n\n      const paddingStyle = {\n        paddingTop: getEdgeValue(insets.top, paddingTop, edgesRecord.top),\n        paddingRight: getEdgeValue(\n          insets.right,\n          paddingRight,\n          edgesRecord.right,\n        ),\n        paddingBottom: getEdgeValue(\n          insets.bottom,\n          paddingBottom,\n          edgesRecord.bottom,\n        ),\n        paddingLeft: getEdgeValue(insets.left, paddingLeft, edgesRecord.left),\n      };\n\n      return [style, paddingStyle];\n    }\n  }, [\n    edgesRecord.bottom,\n    edgesRecord.left,\n    edgesRecord.right,\n    edgesRecord.top,\n    insets.bottom,\n    insets.left,\n    insets.right,\n    insets.top,\n    mode,\n    style,\n  ]);\n\n  return <View style={appliedStyle} {...rest} ref={ref} />;\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}