{"ast":null,"code":"\"use strict\";var _slicedToArray=require(\"@babel/runtime/helpers/slicedToArray\");var _defineProperty=require(\"@babel/runtime/helpers/defineProperty\");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}Object.defineProperty(exports,\"__esModule\",{value:true});exports.getNormalizedStatePath=exports.getRouteInfoFromState=void 0;var getStateFromPath_1=require(\"./fork/getStateFromPath\");function getRouteInfoFromState(getPathFromState,state,baseUrl){var _getPathFromState=getPathFromState(state,false),path=_getPathFromState.path;var qualified=getPathFromState(state,true);return _objectSpread({unstable_globalHref:path,pathname:(0,getStateFromPath_1.stripBaseUrl)(path,baseUrl).split('?')['0'],isIndex:isIndexPath(state)},getNormalizedStatePath(qualified,baseUrl));}exports.getRouteInfoFromState=getRouteInfoFromState;function isIndexPath(state){var _state$index;var route=state.routes[(_state$index=state.index)!=null?_state$index:state.routes.length-1];if(route.state){return isIndexPath(route.state);}if(route.params&&'screen'in route.params){return route.params.screen==='index';}return false;}function getNormalizedStatePath(_ref,baseUrl){var statePath=_ref.path,params=_ref.params;var _statePath$split=statePath.split('?'),_statePath$split2=_slicedToArray(_statePath$split,1),pathname=_statePath$split2[0];return{segments:(0,getStateFromPath_1.stripBaseUrl)(pathname,baseUrl).split('/').filter(Boolean).map(decodeURIComponent),params:Object.entries(params).reduce(function(prev,_ref2){var _ref3=_slicedToArray(_ref2,2),key=_ref3[0],value=_ref3[1];if(Array.isArray(value)){prev[key]=value.map(function(v){try{return decodeURIComponent(v);}catch(_unused){return v;}});}else{try{prev[key]=decodeURIComponent(value);}catch(_unused2){prev[key]=value;}}return prev;},{})};}exports.getNormalizedStatePath=getNormalizedStatePath;","map":{"version":3,"names":["getStateFromPath_1","require","getRouteInfoFromState","getPathFromState","state","baseUrl","_getPathFromState","path","qualified","_objectSpread","unstable_globalHref","pathname","stripBaseUrl","split","isIndex","isIndexPath","getNormalizedStatePath","exports","_state$index","route","routes","index","length","params","screen","_ref","statePath","_statePath$split","_statePath$split2","_slicedToArray","segments","filter","Boolean","map","decodeURIComponent","Object","entries","reduce","prev","_ref2","_ref3","key","value","Array","isArray","v","_unused","_unused2"],"sources":["/Users/jonathanbruce/Coding/trackr/node_modules/expo-router/src/LocationProvider.tsx"],"sourcesContent":["import type { State } from './fork/getPathFromState';\nimport { stripBaseUrl } from './fork/getStateFromPath';\n\ntype SearchParams = Record<string, string | string[]>;\n\nexport type UrlObject = {\n  unstable_globalHref: string;\n  pathname: string;\n  readonly params: SearchParams;\n  segments: string[];\n  isIndex: boolean;\n};\n\nexport function getRouteInfoFromState(\n  getPathFromState: (state: State, asPath: boolean) => { path: string; params: any },\n  state: State,\n  baseUrl?: string\n): UrlObject {\n  const { path } = getPathFromState(state, false);\n  const qualified = getPathFromState(state, true);\n\n  return {\n    // TODO: This may have a predefined origin attached in the future.\n    unstable_globalHref: path,\n    pathname: stripBaseUrl(path, baseUrl).split('?')['0'],\n    isIndex: isIndexPath(state),\n    ...getNormalizedStatePath(qualified, baseUrl),\n  };\n}\n\nfunction isIndexPath(state: State) {\n  const route = state.routes[state.index ?? state.routes.length - 1];\n  if (route.state) {\n    return isIndexPath(route.state);\n  }\n  // router.params is typed as 'object', so this usual syntax is to please TypeScript\n  if (route.params && 'screen' in route.params) {\n    return route.params.screen === 'index';\n  }\n  return false;\n}\n\n// TODO: Split up getPathFromState to return all this info at once.\nexport function getNormalizedStatePath(\n  {\n    path: statePath,\n    params,\n  }: {\n    path: string;\n    params: any;\n  },\n  baseUrl?: string\n): Pick<UrlObject, 'segments' | 'params'> {\n  const [pathname] = statePath.split('?');\n  return {\n    // Strip empty path at the start\n    segments: stripBaseUrl(pathname, baseUrl).split('/').filter(Boolean).map(decodeURIComponent),\n    // TODO: This is not efficient, we should generate based on the state instead\n    // of converting to string then back to object\n    params: Object.entries(params).reduce((prev, [key, value]) => {\n      if (Array.isArray(value)) {\n        prev[key] = value.map((v: string) => {\n          try {\n            return decodeURIComponent(v);\n          } catch {\n            return v;\n          }\n        });\n      } else {\n        try {\n          prev[key] = decodeURIComponent(value as string);\n        } catch {\n          prev[key] = value as string;\n        }\n      }\n      return prev;\n    }, {} as SearchParams),\n  };\n}\n"],"mappings":"83BACA,IAAAA,kBAAA,CAAAC,OAAA,4BAYA,QAAgB,CAAAC,qBAAqBA,CACnCC,gBAAkF,CAClFC,KAAY,CACZC,OAAgB,EAEhB,IAAAC,iBAAA,CAAiBH,gBAAgB,CAACC,KAAK,CAAE,KAAK,CAAC,CAAvCG,IAAI,CAAAD,iBAAA,CAAJC,IAAI,CACZ,GAAM,CAAAC,SAAS,CAAGL,gBAAgB,CAACC,KAAK,CAAE,IAAI,CAAC,CAE/C,OAAAK,aAAA,EAEEC,mBAAmB,CAAEH,IAAI,CACzBI,QAAQ,CAAE,GAAAX,kBAAA,CAAAY,YAAY,EAACL,IAAI,CAAEF,OAAO,CAAC,CAACQ,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACrDC,OAAO,CAAEC,WAAW,CAACX,KAAK,CAAC,EACxBY,sBAAsB,CAACR,SAAS,CAAEH,OAAO,CAAC,EAEjD,CAfAY,OAAA,CAAAf,qBAAA,CAAAA,qBAAA,CAiBA,QAAS,CAAAa,WAAWA,CAACX,KAAY,MAAAc,YAAA,CAC/B,GAAM,CAAAC,KAAK,CAAGf,KAAK,CAACgB,MAAM,EAAAF,YAAA,CAACd,KAAK,CAACiB,KAAK,QAAAH,YAAA,CAAId,KAAK,CAACgB,MAAM,CAACE,MAAM,CAAG,CAAC,CAAC,CAClE,GAAIH,KAAK,CAACf,KAAK,CAAE,CACf,MAAO,CAAAW,WAAW,CAACI,KAAK,CAACf,KAAK,CAAC,C,CAGjC,GAAIe,KAAK,CAACI,MAAM,EAAI,QAAQ,EAAI,CAAAJ,KAAK,CAACI,MAAM,CAAE,CAC5C,MAAO,CAAAJ,KAAK,CAACI,MAAM,CAACC,MAAM,GAAK,OAAO,C,CAExC,MAAO,MAAK,CACd,CAGA,QAAgB,CAAAR,sBAAsBA,CAAAS,IAAA,CAQpCpB,OAAgB,KANR,CAAAqB,SAAS,CAAAD,IAAA,CAAflB,IAAI,CACJgB,MAAM,CAAAE,IAAA,CAANF,MAAM,CAOR,IAAAI,gBAAA,CAAmBD,SAAS,CAACb,KAAK,CAAC,GAAG,CAAC,CAAAe,iBAAA,CAAAC,cAAA,CAAAF,gBAAA,IAAhChB,QAAQ,CAAAiB,iBAAA,IACf,MAAO,CAELE,QAAQ,CAAE,GAAA9B,kBAAA,CAAAY,YAAY,EAACD,QAAQ,CAAEN,OAAO,CAAC,CAACQ,KAAK,CAAC,GAAG,CAAC,CAACkB,MAAM,CAACC,OAAO,CAAC,CAACC,GAAG,CAACC,kBAAkB,CAAC,CAG5FX,MAAM,CAAEY,MAAM,CAACC,OAAO,CAACb,MAAM,CAAC,CAACc,MAAM,CAAC,SAACC,IAAI,CAAAC,KAAA,CAAkB,KAAAC,KAAA,CAAAX,cAAA,CAAAU,KAAA,IAAfE,GAAG,CAAAD,KAAA,IAAEE,KAAK,CAAAF,KAAA,IACtD,GAAIG,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,CAAE,CACxBJ,IAAI,CAACG,GAAG,CAAC,CAAGC,KAAK,CAACT,GAAG,CAAC,SAACY,CAAS,CAAI,CAClC,GAAI,CACF,MAAO,CAAAX,kBAAkB,CAACW,CAAC,CAAC,C,CAC5B,MAAAC,OAAA,CAAM,CACN,MAAO,CAAAD,CAAC,C,CAEZ,CAAC,CAAC,C,CACH,IAAM,CACL,GAAI,CACFP,IAAI,CAACG,GAAG,CAAC,CAAGP,kBAAkB,CAACQ,KAAe,CAAC,C,CAC/C,MAAAK,QAAA,CAAM,CACNT,IAAI,CAACG,GAAG,CAAC,CAAGC,KAAe,C,EAG/B,MAAO,CAAAJ,IAAI,CACb,CAAC,CAAE,EAAkB,C,CACtB,CACH,CAnCArB,OAAA,CAAAD,sBAAA,CAAAA,sBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}