{"ast":null,"code":"\"use strict\";\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _jsxFileName = \"/Users/jonathanbruce/Coding/trackr/node_modules/expo-router/build/renderRootComponent.js\";\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderRootComponent = void 0;\nvar expo_1 = require(\"expo\");\nvar SplashScreen = __importStar(require(\"expo-splash-screen\"));\nvar react_1 = __importDefault(require(\"react\"));\nvar react_native_1 = require(\"react-native-web/dist/index\");\nfunction isBaseObject(obj) {\n  if (Object.prototype.toString.call(obj) !== '[object Object]') {\n    return false;\n  }\n  var proto = Object.getPrototypeOf(obj);\n  if (proto === null) {\n    return true;\n  }\n  return proto === Object.prototype;\n}\nfunction isErrorShaped(error) {\n  return error && typeof error === 'object' && typeof error.name === 'string' && typeof error.message === 'string';\n}\nfunction convertError(error) {\n  if (isErrorShaped(error)) {\n    return error;\n  }\n  if (process.env.NODE_ENV === 'development') {\n    if (error == null) {\n      return new Error('A null/undefined error was thrown.');\n    }\n  }\n  if (isBaseObject(error)) {\n    return new Error(JSON.stringify(error));\n  }\n  return new Error(String(error));\n}\nfunction renderRootComponent(Component) {\n  var _this = this;\n  try {\n    setTimeout(function () {\n      SplashScreen._internal_preventAutoHideAsync == null ? void 0 : SplashScreen._internal_preventAutoHideAsync();\n    });\n    if (process.env.NODE_ENV !== 'production') {\n      var _require = require('@expo/metro-runtime/error-overlay'),\n        withErrorOverlay = _require.withErrorOverlay;\n      (0, expo_1.registerRootComponent)(withErrorOverlay(Component));\n    } else {\n      (0, expo_1.registerRootComponent)(Component);\n    }\n  } catch (e) {\n    SplashScreen.hideAsync();\n    var error = convertError(e);\n    (0, expo_1.registerRootComponent)(function () {\n      return _reactJsxDevRuntime.jsxDEV(react_native_1.View, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 49\n      }, _this);\n    });\n    if (react_native_1.Platform.OS === 'web') {\n      console.error(error);\n      console.error(`A runtime error has occurred while rendering the root component.`);\n    }\n    setTimeout(function () {\n      throw error;\n    });\n  }\n}\nexports.renderRootComponent = renderRootComponent;","map":{"version":3,"names":["expo_1","require","SplashScreen","__importStar","react_1","__importDefault","react_native_1","isBaseObject","obj","Object","prototype","toString","call","proto","getPrototypeOf","isErrorShaped","error","name","message","convertError","process","env","NODE_ENV","Error","JSON","stringify","String","renderRootComponent","Component","_this","setTimeout","_internal_preventAutoHideAsync","_require","withErrorOverlay","registerRootComponent","e","hideAsync","_reactJsxDevRuntime","jsxDEV","View","fileName","_jsxFileName","lineNumber","columnNumber","Platform","OS","console","exports"],"sources":["/Users/jonathanbruce/Coding/trackr/node_modules/expo-router/src/renderRootComponent.tsx"],"sourcesContent":["import { registerRootComponent } from 'expo';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React from 'react';\nimport { Platform, View } from 'react-native';\n\nfunction isBaseObject(obj: any) {\n  if (Object.prototype.toString.call(obj) !== '[object Object]') {\n    return false;\n  }\n  const proto = Object.getPrototypeOf(obj);\n  if (proto === null) {\n    return true;\n  }\n  return proto === Object.prototype;\n}\n\nfunction isErrorShaped(error: any): error is Error {\n  return (\n    error &&\n    typeof error === 'object' &&\n    typeof error.name === 'string' &&\n    typeof error.message === 'string'\n  );\n}\n\n/**\n * After we throw this error, any number of tools could handle it.\n * This check ensures the error is always in a reason state before surfacing it to the runtime.\n */\nfunction convertError(error: any) {\n  if (isErrorShaped(error)) {\n    return error;\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    if (error == null) {\n      return new Error('A null/undefined error was thrown.');\n    }\n  }\n\n  if (isBaseObject(error)) {\n    return new Error(JSON.stringify(error));\n  }\n\n  return new Error(String(error));\n}\n\n/**\n * Register and mount the root component using the predefined rendering\n * method. This function ensures the Splash Screen and errors are handled correctly.\n */\nexport function renderRootComponent(Component: React.ComponentType<any>) {\n  try {\n    // This must be delayed so the user has a chance to call it first.\n    setTimeout(() => {\n      // @ts-expect-error: This function is native-only and for internal-use only.\n      SplashScreen._internal_preventAutoHideAsync?.();\n    });\n\n    if (process.env.NODE_ENV !== 'production') {\n      const { withErrorOverlay } =\n        require('@expo/metro-runtime/error-overlay') as typeof import('@expo/metro-runtime/error-overlay');\n      registerRootComponent(withErrorOverlay(Component));\n    } else {\n      registerRootComponent(Component);\n    }\n  } catch (e) {\n    // Hide the splash screen if there was an error so the user can see it.\n    SplashScreen.hideAsync();\n\n    const error = convertError(e);\n    // Prevent the app from throwing confusing:\n    //  ERROR  Invariant Violation: \"main\" has not been registered. This can happen if:\n    // * Metro (the local dev server) is run from the wrong folder. Check if Metro is running, stop it and restart it in the current project.\n    // * A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\n    registerRootComponent(() => <View />);\n\n    // Console is pretty useless on native, on web you get interactive stack traces.\n    if (Platform.OS === 'web') {\n      console.error(error);\n      console.error(`A runtime error has occurred while rendering the root component.`);\n    }\n\n    // Give React a tick to render before throwing.\n    setTimeout(() => {\n      throw error;\n    });\n\n    // TODO: Render a production-only error screen.\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAC,YAAA,CAAAF,OAAA;AACA,IAAAG,OAAA,GAAAC,eAAA,CAAAJ,OAAA;AAA0B,IAAAK,cAAA,GAAAL,OAAA;AAG1B,SAASM,YAAYA,CAACC,GAAQ;EAC5B,IAAIC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACJ,GAAG,CAAC,KAAK,iBAAiB,EAAE;IAC7D,OAAO,KAAK;;EAEd,IAAMK,KAAK,GAAGJ,MAAM,CAACK,cAAc,CAACN,GAAG,CAAC;EACxC,IAAIK,KAAK,KAAK,IAAI,EAAE;IAClB,OAAO,IAAI;;EAEb,OAAOA,KAAK,KAAKJ,MAAM,CAACC,SAAS;AACnC;AAEA,SAASK,aAAaA,CAACC,KAAU;EAC/B,OACEA,KAAK,IACL,OAAOA,KAAK,KAAK,QAAQ,IACzB,OAAOA,KAAK,CAACC,IAAI,KAAK,QAAQ,IAC9B,OAAOD,KAAK,CAACE,OAAO,KAAK,QAAQ;AAErC;AAMA,SAASC,YAAYA,CAACH,KAAU;EAC9B,IAAID,aAAa,CAACC,KAAK,CAAC,EAAE;IACxB,OAAOA,KAAK;;EAGd,IAAII,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;IAC1C,IAAIN,KAAK,IAAI,IAAI,EAAE;MACjB,OAAO,IAAIO,KAAK,CAAC,oCAAoC,CAAC;;;EAI1D,IAAIhB,YAAY,CAACS,KAAK,CAAC,EAAE;IACvB,OAAO,IAAIO,KAAK,CAACC,IAAI,CAACC,SAAS,CAACT,KAAK,CAAC,CAAC;;EAGzC,OAAO,IAAIO,KAAK,CAACG,MAAM,CAACV,KAAK,CAAC,CAAC;AACjC;AAMA,SAAgBW,mBAAmBA,CAACC,SAAmC;EAAA,IAAAC,KAAA;EACrE,IAAI;IAEFC,UAAU,CAAC,YAAK;MAEd5B,YAAY,CAAC6B,8BAA8B,oBAA3C7B,YAAY,CAAC6B,8BAA8B,CAAE,CAAE;IACjD,CAAC,CAAC;IAEF,IAAIX,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,IAAAU,QAAA,GACE/B,OAAO,CAAC,mCAAmC,CAAuD;QAD5FgC,gBAAgB,GAAAD,QAAA,CAAhBC,gBAAgB;MAExB,IAAAjC,MAAA,CAAAkC,qBAAqB,EAACD,gBAAgB,CAACL,SAAS,CAAC,CAAC;KACnD,MAAM;MACL,IAAA5B,MAAA,CAAAkC,qBAAqB,EAACN,SAAS,CAAC;;GAEnC,CAAC,OAAOO,CAAC,EAAE;IAEVjC,YAAY,CAACkC,SAAS,EAAE;IAExB,IAAMpB,KAAK,GAAGG,YAAY,CAACgB,CAAC,CAAC;IAK7B,IAAAnC,MAAA,CAAAkC,qBAAqB,EAAC;MAAA,OAAMG,mBAAA,CAAAC,MAAA,CAAChC,cAAA,CAAAiC,IAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAd,KAAA,CAAG;IAAA,EAAC;IAGrC,IAAIvB,cAAA,CAAAsC,QAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;MACzBC,OAAO,CAAC9B,KAAK,CAACA,KAAK,CAAC;MACpB8B,OAAO,CAAC9B,KAAK,CAAC,kEAAkE,CAAC;;IAInFc,UAAU,CAAC,YAAK;MACd,MAAMd,KAAK;IACb,CAAC,CAAC;;AAIN;AAvCA+B,OAAA,CAAApB,mBAAA,GAAAA,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}