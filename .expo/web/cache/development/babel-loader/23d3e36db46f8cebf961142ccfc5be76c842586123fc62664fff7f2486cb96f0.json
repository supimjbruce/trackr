{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useOptionalNavigation = exports.useLoadedNavigation = void 0;\nvar native_1 = require(\"@react-navigation/native\");\nvar react_1 = require(\"react\");\nvar router_store_1 = require(\"../global-state/router-store\");\nfunction useLoadedNavigation() {\n  var _ref = (0, router_store_1.useExpoRouter)(),\n    navigationRef = _ref.navigationRef;\n  var navigation = (0, native_1.useNavigation)();\n  var isMounted = (0, react_1.useRef)(true);\n  var pending = (0, react_1.useRef)([]);\n  (0, react_1.useEffect)(function () {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n  var flush = (0, react_1.useCallback)(function () {\n    if (isMounted.current) {\n      var pendingCallbacks = pending.current;\n      pending.current = [];\n      pendingCallbacks.forEach(function (callback) {\n        callback(navigation);\n      });\n    }\n  }, [navigation]);\n  (0, react_1.useEffect)(function () {\n    if (navigationRef.current) {\n      flush();\n    }\n  }, [flush]);\n  var push = (0, react_1.useCallback)(function (fn) {\n    pending.current.push(fn);\n    if (navigationRef.current) {\n      flush();\n    }\n  }, [flush]);\n  return push;\n}\nexports.useLoadedNavigation = useLoadedNavigation;\nfunction useOptionalNavigation() {\n  var _ref2 = (0, react_1.useState)(null),\n    _ref3 = _slicedToArray(_ref2, 2),\n    navigation = _ref3[0],\n    setNavigation = _ref3[1];\n  var loadNavigation = useLoadedNavigation();\n  (0, react_1.useEffect)(function () {\n    loadNavigation(function (nav) {\n      return setNavigation(nav);\n    });\n  }, []);\n  return navigation;\n}\nexports.useOptionalNavigation = useOptionalNavigation;","map":{"version":3,"names":["native_1","require","react_1","router_store_1","useLoadedNavigation","_ref","useExpoRouter","navigationRef","navigation","useNavigation","isMounted","useRef","pending","useEffect","current","flush","useCallback","pendingCallbacks","forEach","callback","push","fn","exports","useOptionalNavigation","_ref2","useState","_ref3","_slicedToArray","setNavigation","loadNavigation","nav"],"sources":["/Users/jonathanbruce/Coding/trackr/node_modules/expo-router/src/link/useLoadedNavigation.ts"],"sourcesContent":["import { NavigationProp, useNavigation } from '@react-navigation/native';\nimport { useCallback, useState, useEffect, useRef } from 'react';\n\nimport { useExpoRouter } from '../global-state/router-store';\n\ntype GenericNavigation = NavigationProp<ReactNavigation.RootParamList>;\n\n/** Returns a callback which is invoked when the navigation state has loaded. */\nexport function useLoadedNavigation() {\n  const { navigationRef } = useExpoRouter();\n  const navigation = useNavigation();\n  const isMounted = useRef(true);\n  const pending = useRef<((navigation: GenericNavigation) => void)[]>([]);\n\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const flush = useCallback(() => {\n    if (isMounted.current) {\n      const pendingCallbacks = pending.current;\n      pending.current = [];\n      pendingCallbacks.forEach((callback) => {\n        // @ts-ignore\n        callback(navigation);\n      });\n    }\n  }, [navigation]);\n\n  useEffect(() => {\n    if (navigationRef.current) {\n      flush();\n    }\n  }, [flush]);\n\n  const push = useCallback(\n    (fn: (navigation: GenericNavigation) => void) => {\n      pending.current.push(fn);\n      if (navigationRef.current) {\n        flush();\n      }\n    },\n    [flush]\n  );\n\n  return push;\n}\n\nexport function useOptionalNavigation(): GenericNavigation | null {\n  const [navigation, setNavigation] = useState<GenericNavigation | null>(null);\n  const loadNavigation = useLoadedNavigation();\n\n  useEffect(() => {\n    loadNavigation((nav) => setNavigation(nav));\n  }, []);\n\n  return navigation;\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAEA,IAAAE,cAAA,GAAAF,OAAA;AAKA,SAAgBG,mBAAmBA,CAAA;EACjC,IAAAC,IAAA,GAA0B,IAAAF,cAAA,CAAAG,aAAa,GAAE;IAAjCC,aAAa,GAAAF,IAAA,CAAbE,aAAa;EACrB,IAAMC,UAAU,GAAG,IAAAR,QAAA,CAAAS,aAAa,GAAE;EAClC,IAAMC,SAAS,GAAG,IAAAR,OAAA,CAAAS,MAAM,EAAC,IAAI,CAAC;EAC9B,IAAMC,OAAO,GAAG,IAAAV,OAAA,CAAAS,MAAM,EAA8C,EAAE,CAAC;EAEvE,IAAAT,OAAA,CAAAW,SAAS,EAAC,YAAK;IACbH,SAAS,CAACI,OAAO,GAAG,IAAI;IACxB,OAAO,YAAK;MACVJ,SAAS,CAACI,OAAO,GAAG,KAAK;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,KAAK,GAAG,IAAAb,OAAA,CAAAc,WAAW,EAAC,YAAK;IAC7B,IAAIN,SAAS,CAACI,OAAO,EAAE;MACrB,IAAMG,gBAAgB,GAAGL,OAAO,CAACE,OAAO;MACxCF,OAAO,CAACE,OAAO,GAAG,EAAE;MACpBG,gBAAgB,CAACC,OAAO,CAAC,UAACC,QAAQ,EAAI;QAEpCA,QAAQ,CAACX,UAAU,CAAC;MACtB,CAAC,CAAC;;EAEN,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,IAAAN,OAAA,CAAAW,SAAS,EAAC,YAAK;IACb,IAAIN,aAAa,CAACO,OAAO,EAAE;MACzBC,KAAK,EAAE;;EAEX,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,IAAMK,IAAI,GAAG,IAAAlB,OAAA,CAAAc,WAAW,EACtB,UAACK,EAA2C,EAAI;IAC9CT,OAAO,CAACE,OAAO,CAACM,IAAI,CAACC,EAAE,CAAC;IACxB,IAAId,aAAa,CAACO,OAAO,EAAE;MACzBC,KAAK,EAAE;;EAEX,CAAC,EACD,CAACA,KAAK,CAAC,CACR;EAED,OAAOK,IAAI;AACb;AAzCAE,OAAA,CAAAlB,mBAAA,GAAAA,mBAAA;AA2CA,SAAgBmB,qBAAqBA,CAAA;EACnC,IAAAC,KAAA,GAAoC,IAAAtB,OAAA,CAAAuB,QAAQ,EAA2B,IAAI,CAAC;IAAAC,KAAA,GAAAC,cAAA,CAAAH,KAAA;IAArEhB,UAAU,GAAAkB,KAAA;IAAEE,aAAa,GAAAF,KAAA;EAChC,IAAMG,cAAc,GAAGzB,mBAAmB,EAAE;EAE5C,IAAAF,OAAA,CAAAW,SAAS,EAAC,YAAK;IACbgB,cAAc,CAAC,UAACC,GAAG;MAAA,OAAKF,aAAa,CAACE,GAAG,CAAC;IAAA,EAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOtB,UAAU;AACnB;AATAc,OAAA,CAAAC,qBAAA,GAAAA,qBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}