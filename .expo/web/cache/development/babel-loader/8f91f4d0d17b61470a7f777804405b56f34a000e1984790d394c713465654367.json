{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LogBoxInspectorStackFrames = exports.getCollapseMessage = void 0;\nvar react_1 = __importStar(require(\"react\"));\nvar react_native_1 = require(\"react-native-web/dist/index\");\nvar LogBoxInspectorSection_1 = require(\"./LogBoxInspectorSection\");\nvar LogBoxInspectorSourceMapStatus_1 = require(\"./LogBoxInspectorSourceMapStatus\");\nvar LogBoxInspectorStackFrame_1 = require(\"./LogBoxInspectorStackFrame\");\nvar LogContext_1 = require(\"../Data/LogContext\");\nvar LogBoxButton_1 = require(\"../UI/LogBoxButton\");\nvar LogBoxStyle = __importStar(require(\"../UI/LogBoxStyle\"));\nvar openFileInEditor_1 = __importDefault(require(\"../modules/openFileInEditor\"));\nfunction getCollapseMessage(stackFrames, collapsed) {\n  if (stackFrames.length === 0) {\n    return 'No frames to show';\n  }\n  var collapsedCount = stackFrames.reduce(function (count, _ref) {\n    var collapse = _ref.collapse;\n    if (collapse === true) {\n      return count + 1;\n    }\n    return count;\n  }, 0);\n  if (collapsedCount === 0) {\n    return 'Showing all frames';\n  }\n  var framePlural = `frame${collapsedCount > 1 ? 's' : ''}`;\n  if (collapsedCount === stackFrames.length) {\n    return collapsed ? `See${collapsedCount > 1 ? ' all ' : ' '}${collapsedCount} collapsed ${framePlural}` : `Collapse${collapsedCount > 1 ? ' all ' : ' '}${collapsedCount} ${framePlural}`;\n  } else {\n    return collapsed ? `See ${collapsedCount} more ${framePlural}` : `Collapse ${collapsedCount} ${framePlural}`;\n  }\n}\nexports.getCollapseMessage = getCollapseMessage;\nfunction LogBoxInspectorStackFrames(_ref2) {\n  var _log$getAvailableStac3;\n  var onRetry = _ref2.onRetry,\n    type = _ref2.type;\n  var log = (0, LogContext_1.useSelectedLog)();\n  var _ref3 = (0, react_1.useState)(function () {\n      var _log$getAvailableStac;\n      return (_log$getAvailableStac = log.getAvailableStack(type)) == null ? void 0 : _log$getAvailableStac.some(function (_ref5) {\n        var collapse = _ref5.collapse;\n        return !collapse;\n      });\n    }),\n    _ref4 = _slicedToArray(_ref3, 2),\n    collapsed = _ref4[0],\n    setCollapsed = _ref4[1];\n  function getStackList() {\n    if (collapsed === true) {\n      var _log$getAvailableStac2;\n      return (_log$getAvailableStac2 = log.getAvailableStack(type)) == null ? void 0 : _log$getAvailableStac2.filter(function (_ref6) {\n        var collapse = _ref6.collapse;\n        return !collapse;\n      });\n    } else {\n      return log.getAvailableStack(type);\n    }\n  }\n  if (((_log$getAvailableStac3 = log.getAvailableStack(type)) == null ? void 0 : _log$getAvailableStac3.length) === 0) {\n    return null;\n  }\n  return react_1.default.createElement(LogBoxInspectorSection_1.LogBoxInspectorSection, {\n    heading: type === 'component' ? 'Component Stack' : 'Call Stack',\n    action: react_1.default.createElement(LogBoxInspectorSourceMapStatus_1.LogBoxInspectorSourceMapStatus, {\n      onPress: log.symbolicated[type].status === 'FAILED' ? onRetry : null,\n      status: log.symbolicated[type].status\n    })\n  }, log.symbolicated[type].status !== 'COMPLETE' && react_1.default.createElement(react_native_1.View, {\n    style: stackStyles.hintBox\n  }, react_1.default.createElement(react_native_1.Text, {\n    style: stackStyles.hintText\n  }, \"This call stack is not symbolicated. Some features are unavailable such as viewing the function name or tapping to open files.\")), react_1.default.createElement(StackFrameList, {\n    list: getStackList(),\n    status: log.symbolicated[type].status\n  }), react_1.default.createElement(StackFrameFooter, {\n    onPress: function onPress() {\n      return setCollapsed(!collapsed);\n    },\n    message: getCollapseMessage(log.getAvailableStack(type), !!collapsed)\n  }));\n}\nexports.LogBoxInspectorStackFrames = LogBoxInspectorStackFrames;\nfunction StackFrameList(_ref7) {\n  var list = _ref7.list,\n    status = _ref7.status;\n  return list.map(function (frame, index) {\n    var file = frame.file,\n      lineNumber = frame.lineNumber;\n    return react_1.default.createElement(LogBoxInspectorStackFrame_1.LogBoxInspectorStackFrame, {\n      key: index,\n      frame: frame,\n      onPress: status === 'COMPLETE' && file != null && lineNumber != null ? function () {\n        return (0, openFileInEditor_1.default)(file, lineNumber);\n      } : undefined\n    });\n  });\n}\nfunction StackFrameFooter(_ref8) {\n  var message = _ref8.message,\n    onPress = _ref8.onPress;\n  return react_1.default.createElement(react_native_1.View, {\n    style: stackStyles.collapseContainer\n  }, react_1.default.createElement(LogBoxButton_1.LogBoxButton, {\n    backgroundColor: {\n      default: 'transparent',\n      pressed: LogBoxStyle.getBackgroundColor(1)\n    },\n    onPress: onPress,\n    style: stackStyles.collapseButton\n  }, react_1.default.createElement(react_native_1.Text, {\n    style: stackStyles.collapse\n  }, message)));\n}\nvar stackStyles = react_native_1.StyleSheet.create({\n  section: {\n    marginTop: 15\n  },\n  heading: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingHorizontal: 12,\n    marginBottom: 10\n  },\n  headingText: {\n    color: LogBoxStyle.getTextColor(1),\n    flex: 1,\n    fontSize: 20,\n    fontWeight: '600',\n    includeFontPadding: false,\n    lineHeight: 20\n  },\n  body: {\n    paddingBottom: 10\n  },\n  bodyText: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: '500',\n    paddingHorizontal: 27\n  },\n  hintText: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 13,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: '400',\n    marginHorizontal: 10\n  },\n  hintBox: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    marginHorizontal: 10,\n    paddingHorizontal: 5,\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginBottom: 5\n  },\n  collapseContainer: {\n    marginLeft: 15,\n    flexDirection: 'row'\n  },\n  collapseButton: {\n    borderRadius: 5\n  },\n  collapse: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 12,\n    fontWeight: '300',\n    lineHeight: 20,\n    marginTop: 0,\n    paddingHorizontal: 10,\n    paddingVertical: 5\n  }\n});","map":{"version":3,"names":["react_1","__importStar","require","react_native_1","LogBoxInspectorSection_1","LogBoxInspectorSourceMapStatus_1","LogBoxInspectorStackFrame_1","LogContext_1","LogBoxButton_1","LogBoxStyle","openFileInEditor_1","__importDefault","getCollapseMessage","stackFrames","collapsed","length","collapsedCount","reduce","count","_ref","collapse","framePlural","exports","LogBoxInspectorStackFrames","_ref2","_log$getAvailableStac3","onRetry","type","log","useSelectedLog","_ref3","useState","_log$getAvailableStac","getAvailableStack","some","_ref5","_ref4","_slicedToArray","setCollapsed","getStackList","_log$getAvailableStac2","filter","_ref6","default","createElement","LogBoxInspectorSection","heading","action","LogBoxInspectorSourceMapStatus","onPress","symbolicated","status","View","style","stackStyles","hintBox","Text","hintText","StackFrameList","list","StackFrameFooter","message","_ref7","map","frame","index","file","lineNumber","LogBoxInspectorStackFrame","key","undefined","_ref8","collapseContainer","LogBoxButton","backgroundColor","pressed","getBackgroundColor","collapseButton","StyleSheet","create","section","marginTop","alignItems","flexDirection","paddingHorizontal","marginBottom","headingText","color","getTextColor","flex","fontSize","fontWeight","includeFontPadding","lineHeight","body","paddingBottom","bodyText","marginHorizontal","paddingVertical","borderRadius","marginLeft"],"sources":["/Users/jonathanbruce/Coding/trackr/node_modules/@expo/metro-runtime/src/error-overlay/overlay/LogBoxInspectorStackFrames.tsx"],"sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport { LogBoxInspectorSection } from './LogBoxInspectorSection';\nimport { LogBoxInspectorSourceMapStatus } from './LogBoxInspectorSourceMapStatus';\nimport { LogBoxInspectorStackFrame } from './LogBoxInspectorStackFrame';\nimport type { StackType } from '../Data/LogBoxLog';\nimport type { Stack } from '../Data/LogBoxSymbolication';\nimport { useSelectedLog } from '../Data/LogContext';\nimport { LogBoxButton } from '../UI/LogBoxButton';\nimport * as LogBoxStyle from '../UI/LogBoxStyle';\nimport openFileInEditor from '../modules/openFileInEditor';\n\ntype Props = {\n  type: StackType;\n  onRetry: () => void;\n};\n\nexport function getCollapseMessage(stackFrames: Stack, collapsed: boolean): string {\n  if (stackFrames.length === 0) {\n    return 'No frames to show';\n  }\n\n  const collapsedCount = stackFrames.reduce((count, { collapse }) => {\n    if (collapse === true) {\n      return count + 1;\n    }\n\n    return count;\n  }, 0);\n\n  if (collapsedCount === 0) {\n    return 'Showing all frames';\n  }\n\n  const framePlural = `frame${collapsedCount > 1 ? 's' : ''}`;\n  if (collapsedCount === stackFrames.length) {\n    return collapsed\n      ? `See${collapsedCount > 1 ? ' all ' : ' '}${collapsedCount} collapsed ${framePlural}`\n      : `Collapse${collapsedCount > 1 ? ' all ' : ' '}${collapsedCount} ${framePlural}`;\n  } else {\n    return collapsed\n      ? `See ${collapsedCount} more ${framePlural}`\n      : `Collapse ${collapsedCount} ${framePlural}`;\n  }\n}\n\nexport function LogBoxInspectorStackFrames({ onRetry, type }: Props) {\n  const log = useSelectedLog();\n\n  const [collapsed, setCollapsed] = useState(() => {\n    // Only collapse frames initially if some frames are not collapsed.\n    return log.getAvailableStack(type)?.some(({ collapse }) => !collapse);\n  });\n\n  function getStackList() {\n    if (collapsed === true) {\n      return log.getAvailableStack(type)?.filter(({ collapse }) => !collapse);\n    } else {\n      return log.getAvailableStack(type);\n    }\n  }\n\n  if (log.getAvailableStack(type)?.length === 0) {\n    return null;\n  }\n\n  return (\n    <LogBoxInspectorSection\n      heading={type === 'component' ? 'Component Stack' : 'Call Stack'}\n      action={\n        <LogBoxInspectorSourceMapStatus\n          onPress={log.symbolicated[type].status === 'FAILED' ? onRetry : null}\n          status={log.symbolicated[type].status}\n        />\n      }>\n      {log.symbolicated[type].status !== 'COMPLETE' && (\n        <View style={stackStyles.hintBox}>\n          <Text style={stackStyles.hintText}>\n            This call stack is not symbolicated. Some features are unavailable such as viewing the\n            function name or tapping to open files.\n          </Text>\n        </View>\n      )}\n      <StackFrameList list={getStackList()!} status={log.symbolicated[type].status} />\n      <StackFrameFooter\n        onPress={() => setCollapsed(!collapsed)}\n        message={getCollapseMessage(log.getAvailableStack(type)!, !!collapsed)}\n      />\n    </LogBoxInspectorSection>\n  );\n}\n\nfunction StackFrameList({\n  list,\n  status,\n}: {\n  list: Stack;\n  status: 'NONE' | 'PENDING' | 'COMPLETE' | 'FAILED';\n}): any {\n  return list.map((frame, index) => {\n    const { file, lineNumber } = frame;\n    return (\n      <LogBoxInspectorStackFrame\n        key={index}\n        frame={frame}\n        onPress={\n          status === 'COMPLETE' && file != null && lineNumber != null\n            ? () => openFileInEditor(file, lineNumber)\n            : undefined\n        }\n      />\n    );\n  });\n}\n\nfunction StackFrameFooter({ message, onPress }: { message: string; onPress: () => void }) {\n  return (\n    <View style={stackStyles.collapseContainer}>\n      <LogBoxButton\n        backgroundColor={{\n          default: 'transparent',\n          pressed: LogBoxStyle.getBackgroundColor(1),\n        }}\n        onPress={onPress}\n        style={stackStyles.collapseButton}>\n        <Text style={stackStyles.collapse}>{message}</Text>\n      </LogBoxButton>\n    </View>\n  );\n}\n\nconst stackStyles = StyleSheet.create({\n  section: {\n    marginTop: 15,\n  },\n  heading: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingHorizontal: 12,\n    marginBottom: 10,\n  },\n  headingText: {\n    color: LogBoxStyle.getTextColor(1),\n    flex: 1,\n    fontSize: 20,\n    fontWeight: '600',\n    includeFontPadding: false,\n    lineHeight: 20,\n  },\n  body: {\n    paddingBottom: 10,\n  },\n  bodyText: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: '500',\n    paddingHorizontal: 27,\n  },\n  hintText: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 13,\n    includeFontPadding: false,\n    lineHeight: 18,\n    fontWeight: '400',\n    marginHorizontal: 10,\n  },\n  hintBox: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    marginHorizontal: 10,\n    paddingHorizontal: 5,\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginBottom: 5,\n  },\n  collapseContainer: {\n    marginLeft: 15,\n    flexDirection: 'row',\n  },\n  collapseButton: {\n    borderRadius: 5,\n  },\n  collapse: {\n    color: LogBoxStyle.getTextColor(0.7),\n    fontSize: 12,\n    fontWeight: '300',\n    lineHeight: 20,\n    marginTop: 0,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}