{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar HMRClient_1 = __importDefault(require(\"./HMRClient\"));\nHMRClient_1.default.log('log', [`[web] Logs will appear in the browser console`]);\nHMRClient_1.default.setup({\n  isEnabled: true\n});","map":{"version":3,"names":["HMRClient_1","__importDefault","require","default","log","setup","isEnabled"],"sources":["/Users/jonathanbruce/Coding/trackr/node_modules/@expo/metro-runtime/src/setupHMR.ts"],"sourcesContent":["import HMRClient from './HMRClient';\n\n// Sets up developer tools for React Native web.\n// We assume full control over the console and send JavaScript logs to Metro.\n// [\n//   'trace',\n//   'info',\n//   'warn',\n//   'error',\n//   'log',\n//   'group',\n//   'groupCollapsed',\n//   'groupEnd',\n//   'debug',\n// ].forEach(level => {\n//   const originalFunction = console[level];\n//   console[level] = function (...args: readonly any[]) {\n//     HMRClient.log(\n//       // @ts-expect-error\n//       level, args);\n//     originalFunction.apply(console, args);\n//   };\n// });\n\nHMRClient.log('log', [`[web] Logs will appear in the browser console`]);\n\n// This is called native on native platforms\nHMRClient.setup({ isEnabled: true });\n"],"mappings":";;;;;;;;;;AAAA,IAAAA,WAAA,GAAAC,eAAA,CAAAC,OAAA;AAwBAF,WAAA,CAAAG,OAAS,CAACC,GAAG,CAAC,KAAK,EAAE,CAAC,+CAA+C,CAAC,CAAC;AAGvEJ,WAAA,CAAAG,OAAS,CAACE,KAAK,CAAC;EAAEC,SAAS,EAAE;AAAI,CAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}