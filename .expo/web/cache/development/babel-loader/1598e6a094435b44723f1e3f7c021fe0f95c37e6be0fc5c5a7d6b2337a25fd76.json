{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sortRoutesWithInitial = exports.sortRoutes = void 0;\nvar matchers_1 = require(\"./matchers\");\nfunction sortDynamicConvention(a, b) {\n  if (a.deep && !b.deep) {\n    return 1;\n  }\n  if (!a.deep && b.deep) {\n    return -1;\n  }\n  return 0;\n}\nfunction sortRoutes(a, b) {\n  if (a.dynamic && !b.dynamic) {\n    return 1;\n  }\n  if (!a.dynamic && b.dynamic) {\n    return -1;\n  }\n  if (a.dynamic && b.dynamic) {\n    if (a.dynamic.length !== b.dynamic.length) {\n      return b.dynamic.length - a.dynamic.length;\n    }\n    for (var i = 0; i < a.dynamic.length; i++) {\n      var aDynamic = a.dynamic[i];\n      var bDynamic = b.dynamic[i];\n      if (aDynamic.notFound && bDynamic.notFound) {\n        var _s = sortDynamicConvention(aDynamic, bDynamic);\n        if (_s) {\n          return _s;\n        }\n      }\n      if (aDynamic.notFound && !bDynamic.notFound) {\n        return 1;\n      }\n      if (!aDynamic.notFound && bDynamic.notFound) {\n        return -1;\n      }\n      var s = sortDynamicConvention(aDynamic, bDynamic);\n      if (s) {\n        return s;\n      }\n    }\n    return 0;\n  }\n  var aIndex = a.route === 'index' || (0, matchers_1.matchGroupName)(a.route) != null;\n  var bIndex = b.route === 'index' || (0, matchers_1.matchGroupName)(b.route) != null;\n  if (aIndex && !bIndex) {\n    return -1;\n  }\n  if (!aIndex && bIndex) {\n    return 1;\n  }\n  return a.route.length - b.route.length;\n}\nexports.sortRoutes = sortRoutes;\nfunction sortRoutesWithInitial(initialRouteName) {\n  return function (a, b) {\n    if (initialRouteName) {\n      if (a.route === initialRouteName) {\n        return -1;\n      }\n      if (b.route === initialRouteName) {\n        return 1;\n      }\n    }\n    return sortRoutes(a, b);\n  };\n}\nexports.sortRoutesWithInitial = sortRoutesWithInitial;","map":{"version":3,"names":["matchers_1","require","sortDynamicConvention","a","b","deep","sortRoutes","dynamic","length","i","aDynamic","bDynamic","notFound","s","aIndex","route","matchGroupName","bIndex","exports","sortRoutesWithInitial","initialRouteName"],"sources":["/Users/jonathanbruce/Coding/trackr/node_modules/expo-router/src/sortRoutes.ts"],"sourcesContent":["import { DynamicConvention, RouteNode } from './Route';\nimport { matchGroupName } from './matchers';\n\nfunction sortDynamicConvention(a: DynamicConvention, b: DynamicConvention) {\n  if (a.deep && !b.deep) {\n    return 1;\n  }\n  if (!a.deep && b.deep) {\n    return -1;\n  }\n  return 0;\n}\n\nexport function sortRoutes(a: RouteNode, b: RouteNode): number {\n  if (a.dynamic && !b.dynamic) {\n    return 1;\n  }\n  if (!a.dynamic && b.dynamic) {\n    return -1;\n  }\n  if (a.dynamic && b.dynamic) {\n    if (a.dynamic.length !== b.dynamic.length) {\n      return b.dynamic.length - a.dynamic.length;\n    }\n\n    for (let i = 0; i < a.dynamic.length; i++) {\n      const aDynamic = a.dynamic[i];\n      const bDynamic = b.dynamic[i];\n\n      if (aDynamic.notFound && bDynamic.notFound) {\n        const s = sortDynamicConvention(aDynamic, bDynamic);\n        if (s) {\n          return s;\n        }\n      }\n      if (aDynamic.notFound && !bDynamic.notFound) {\n        return 1;\n      }\n      if (!aDynamic.notFound && bDynamic.notFound) {\n        return -1;\n      }\n\n      const s = sortDynamicConvention(aDynamic, bDynamic);\n      if (s) {\n        return s;\n      }\n    }\n    return 0;\n  }\n\n  const aIndex = a.route === 'index' || matchGroupName(a.route) != null;\n  const bIndex = b.route === 'index' || matchGroupName(b.route) != null;\n\n  if (aIndex && !bIndex) {\n    return -1;\n  }\n  if (!aIndex && bIndex) {\n    return 1;\n  }\n\n  return a.route.length - b.route.length;\n}\n\nexport function sortRoutesWithInitial(initialRouteName?: string) {\n  return (a: RouteNode, b: RouteNode): number => {\n    if (initialRouteName) {\n      if (a.route === initialRouteName) {\n        return -1;\n      }\n      if (b.route === initialRouteName) {\n        return 1;\n      }\n    }\n    return sortRoutes(a, b);\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}