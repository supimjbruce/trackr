{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLocalSearchParams = exports.useGlobalSearchParams = exports.usePathname = exports.useSegments = exports.useUnstableGlobalHref = exports.useRouter = exports.useNavigationContainerRef = exports.useRootNavigation = exports.useRouteInfo = exports.useRootNavigationState = void 0;\nvar native_1 = require(\"@react-navigation/native\");\nvar react_1 = __importDefault(require(\"react\"));\nvar router_store_1 = require(\"./global-state/router-store\");\nfunction useRootNavigationState() {\n  return (0, router_store_1.useStoreRootState)();\n}\nexports.useRootNavigationState = useRootNavigationState;\nfunction useRouteInfo() {\n  return (0, router_store_1.useStoreRouteInfo)();\n}\nexports.useRouteInfo = useRouteInfo;\nfunction useRootNavigation() {\n  return router_store_1.store.navigationRef.current;\n}\nexports.useRootNavigation = useRootNavigation;\nfunction useNavigationContainerRef() {\n  return router_store_1.store.navigationRef;\n}\nexports.useNavigationContainerRef = useNavigationContainerRef;\nfunction useRouter() {\n  return react_1.default.useMemo(function () {\n    return {\n      push: router_store_1.store.push,\n      dismiss: router_store_1.store.dismiss,\n      dismissAll: router_store_1.store.dismissAll,\n      canDismiss: router_store_1.store.canDismiss,\n      back: router_store_1.store.goBack,\n      replace: router_store_1.store.replace,\n      setParams: router_store_1.store.setParams,\n      canGoBack: router_store_1.store.canGoBack,\n      navigate: router_store_1.store.navigate\n    };\n  }, []);\n}\nexports.useRouter = useRouter;\nfunction useUnstableGlobalHref() {\n  return (0, router_store_1.useStoreRouteInfo)().unstable_globalHref;\n}\nexports.useUnstableGlobalHref = useUnstableGlobalHref;\nfunction useSegments() {\n  return (0, router_store_1.useStoreRouteInfo)().segments;\n}\nexports.useSegments = useSegments;\nfunction usePathname() {\n  return (0, router_store_1.useStoreRouteInfo)().pathname;\n}\nexports.usePathname = usePathname;\nfunction useGlobalSearchParams() {\n  return (0, router_store_1.useStoreRouteInfo)().params;\n}\nexports.useGlobalSearchParams = useGlobalSearchParams;\nfunction useLocalSearchParams() {\n  var _react_1$default$useC, _react_1$default$useC2;\n  var params = (_react_1$default$useC = (_react_1$default$useC2 = react_1.default.useContext(native_1.NavigationRouteContext)) == null ? void 0 : _react_1$default$useC2.params) != null ? _react_1$default$useC : {};\n  return Object.fromEntries(Object.entries(params).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      value = _ref2[1];\n    if (Array.isArray(value)) {\n      return [key, value.map(function (v) {\n        try {\n          return decodeURIComponent(v);\n        } catch (_unused) {\n          return v;\n        }\n      })];\n    } else {\n      try {\n        return [key, decodeURIComponent(value)];\n      } catch (_unused2) {\n        return [key, value];\n      }\n    }\n  }));\n}\nexports.useLocalSearchParams = useLocalSearchParams;","map":{"version":3,"names":["native_1","require","react_1","__importDefault","router_store_1","useRootNavigationState","useStoreRootState","exports","useRouteInfo","useStoreRouteInfo","useRootNavigation","store","navigationRef","current","useNavigationContainerRef","useRouter","default","useMemo","push","dismiss","dismissAll","canDismiss","back","goBack","replace","setParams","canGoBack","navigate","useUnstableGlobalHref","unstable_globalHref","useSegments","segments","usePathname","pathname","useGlobalSearchParams","params","useLocalSearchParams","_react_1$default$useC","_react_1$default$useC2","useContext","NavigationRouteContext","Object","fromEntries","entries","map","_ref","_ref2","_slicedToArray","key","value","Array","isArray","v","decodeURIComponent","_unused","_unused2"],"sources":["/Users/jonathanbruce/Coding/trackr/node_modules/expo-router/src/hooks.ts"],"sourcesContent":["import { NavigationRouteContext } from '@react-navigation/native';\nimport React from 'react';\n\nimport { store, useStoreRootState, useStoreRouteInfo } from './global-state/router-store';\nimport { Router } from './types';\n\ntype SearchParams = Record<string, string | string[]>;\n\nexport function useRootNavigationState() {\n  return useStoreRootState();\n}\n\nexport function useRouteInfo() {\n  return useStoreRouteInfo();\n}\n\n/** @deprecated use `useNavigationContainerRef()` instead, which returns a React ref. */\nexport function useRootNavigation() {\n  return store.navigationRef.current;\n}\n\n/** @return the root `<NavigationContainer />` ref for the app. The `ref.current` may be `null` if the `<NavigationContainer />` hasn't mounted yet. */\nexport function useNavigationContainerRef() {\n  return store.navigationRef;\n}\n\nexport function useRouter(): Router {\n  return React.useMemo(\n    () => ({\n      push: store.push,\n      dismiss: store.dismiss,\n      dismissAll: store.dismissAll,\n      canDismiss: store.canDismiss,\n      back: store.goBack,\n      replace: store.replace,\n      setParams: store.setParams,\n      canGoBack: store.canGoBack,\n      navigate: store.navigate,\n      // TODO(EvanBacon): add `reload`\n    }),\n    []\n  );\n}\n\n/**\n * @private\n * @returns the current global pathname with query params attached. This may change in the future to include the hostname from a predefined universal link, i.e. `/foobar?hey=world` becomes `https://acme.dev/foobar?hey=world`\n */\nexport function useUnstableGlobalHref(): string {\n  return useStoreRouteInfo().unstable_globalHref;\n}\n\n/**\n * Get a list of selected file segments for the currently selected route. Segments are not normalized, so they will be the same as the file path. e.g. /[id]?id=normal -> [\"[id]\"]\n *\n * `useSegments` can be typed using an abstract.\n * Consider the following file structure, and strictly typed `useSegments` function:\n *\n * ```md\n * - app\n *   - [user]\n *     - index.js\n *     - followers.js\n *   - settings.js\n * ```\n * This can be strictly typed using the following abstract:\n *\n * ```ts\n * const [first, second] = useSegments<['settings'] | ['[user]'] | ['[user]', 'followers']>()\n * ```\n */\nexport function useSegments<TSegments extends string[] = string[]>(): TSegments {\n  return useStoreRouteInfo().segments as TSegments;\n}\n\n/** @returns global selected pathname without query parameters. */\nexport function usePathname(): string {\n  return useStoreRouteInfo().pathname;\n}\n\n/**\n * Get the globally selected query parameters, including dynamic path segments. This function will update even when the route is not focused.\n * Useful for analytics or other background operations that don't draw to the screen.\n *\n * When querying search params in a stack, opt-towards using `useLocalSearchParams` as these will only\n * update when the route is focused.\n *\n * @see `useLocalSearchParams`\n */\nexport function useGlobalSearchParams<\n  TParams extends SearchParams = SearchParams,\n>(): Partial<TParams> {\n  return useStoreRouteInfo().params as Partial<TParams>;\n}\n\n/**\n * Returns the URL search parameters for the contextually focused route. e.g. `/acme?foo=bar` -> `{ foo: \"bar\" }`.\n * This is useful for stacks where you may push a new screen that changes the query parameters.\n *\n * To observe updates even when the invoking route is not focused, use `useGlobalSearchParams()`.\n */\nexport function useLocalSearchParams<\n  TParams extends SearchParams = SearchParams,\n>(): Partial<TParams> {\n  const params = React.useContext(NavigationRouteContext)?.params ?? {};\n  return Object.fromEntries(\n    Object.entries(params).map(([key, value]) => {\n      if (Array.isArray(value)) {\n        return [\n          key,\n          value.map((v) => {\n            try {\n              return decodeURIComponent(v);\n            } catch {\n              return v;\n            }\n          }),\n        ];\n      } else {\n        try {\n          return [key, decodeURIComponent(value as string)];\n        } catch {\n          return [key, value];\n        }\n      }\n    })\n  ) as Partial<TParams>;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}