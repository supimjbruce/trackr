{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ErrorOverlayBodyContents = exports.ErrorOverlayBody = exports.LogBoxInspector = exports.LogBoxInspectorContainer = void 0;\nvar react_1 = __importStar(require(\"react\"));\nvar react_native_1 = require(\"react-native-web/dist/index\");\nvar LogBoxData = __importStar(require(\"./Data/LogBoxData\"));\nvar LogContext_1 = require(\"./Data/LogContext\");\nvar LogBoxStyle = __importStar(require(\"./UI/LogBoxStyle\"));\nvar LogBoxInspectorCodeFrame_1 = require(\"./overlay/LogBoxInspectorCodeFrame\");\nvar LogBoxInspectorFooter_1 = require(\"./overlay/LogBoxInspectorFooter\");\nvar LogBoxInspectorHeader_1 = require(\"./overlay/LogBoxInspectorHeader\");\nvar LogBoxInspectorMessageHeader_1 = require(\"./overlay/LogBoxInspectorMessageHeader\");\nvar LogBoxInspectorStackFrames_1 = require(\"./overlay/LogBoxInspectorStackFrames\");\nvar HEADER_TITLE_MAP = {\n  warn: 'Console Warning',\n  error: 'Console Error',\n  fatal: 'Uncaught Error',\n  syntax: 'Syntax Error',\n  static: 'Static Rendering Error (Node.js)',\n  component: 'Render Error'\n};\nfunction LogBoxInspectorContainer() {\n  var _ref = (0, LogContext_1.useLogs)(),\n    selectedLogIndex = _ref.selectedLogIndex,\n    logs = _ref.logs;\n  var log = logs[selectedLogIndex];\n  if (log == null) {\n    return null;\n  }\n  return react_1.default.createElement(LogBoxInspector, {\n    log: log,\n    selectedLogIndex: selectedLogIndex,\n    logs: logs\n  });\n}\nexports.LogBoxInspectorContainer = LogBoxInspectorContainer;\nfunction LogBoxInspector(_ref2) {\n  var log = _ref2.log,\n    selectedLogIndex = _ref2.selectedLogIndex,\n    logs = _ref2.logs;\n  var onDismiss = (0, react_1.useCallback)(function () {\n    var logsArray = Array.from(logs);\n    if (selectedLogIndex != null) {\n      if (logsArray.length - 1 <= 0) {\n        LogBoxData.setSelectedLog(-1);\n      } else if (selectedLogIndex >= logsArray.length - 1) {\n        LogBoxData.setSelectedLog(selectedLogIndex - 1);\n      }\n      LogBoxData.dismiss(logsArray[selectedLogIndex]);\n    }\n  }, [selectedLogIndex]);\n  var onMinimize = (0, react_1.useCallback)(function () {\n    LogBoxData.setSelectedLog(-1);\n  }, []);\n  var onChangeSelectedIndex = (0, react_1.useCallback)(function (index) {\n    LogBoxData.setSelectedLog(index);\n  }, []);\n  (0, react_1.useEffect)(function () {\n    if (log) {\n      LogBoxData.symbolicateLogNow('stack', log);\n      LogBoxData.symbolicateLogNow('component', log);\n    }\n  }, [log]);\n  (0, react_1.useEffect)(function () {\n    if (logs.length > 1) {\n      var selected = selectedLogIndex;\n      var lastIndex = logs.length - 1;\n      var prevIndex = selected - 1 < 0 ? lastIndex : selected - 1;\n      var nextIndex = selected + 1 > lastIndex ? 0 : selected + 1;\n      for (var type of ['component', 'stack']) {\n        LogBoxData.symbolicateLogLazy(type, logs[prevIndex]);\n        LogBoxData.symbolicateLogLazy(type, logs[nextIndex]);\n      }\n    }\n  }, [logs, selectedLogIndex]);\n  (0, react_1.useEffect)(function () {\n    react_native_1.Keyboard.dismiss();\n  }, []);\n  var _handleRetry = (0, react_1.useCallback)(function (type) {\n    LogBoxData.retrySymbolicateLogNow(type, log);\n  }, [log]);\n  return react_1.default.createElement(react_native_1.View, {\n    style: styles.container\n  }, react_1.default.createElement(LogBoxInspectorHeader_1.LogBoxInspectorHeader, {\n    onSelectIndex: onChangeSelectedIndex,\n    level: log.level\n  }), react_1.default.createElement(ErrorOverlayBody, {\n    onRetry: _handleRetry\n  }), react_1.default.createElement(LogBoxInspectorFooter_1.LogBoxInspectorFooter, {\n    onDismiss: onDismiss,\n    onMinimize: onMinimize\n  }));\n}\nexports.LogBoxInspector = LogBoxInspector;\nfunction ErrorOverlayBody(_ref3) {\n  var onRetry = _ref3.onRetry;\n  var log = (0, LogContext_1.useSelectedLog)();\n  return react_1.default.createElement(ErrorOverlayBodyContents, {\n    log: log,\n    onRetry: onRetry\n  });\n}\nexports.ErrorOverlayBody = ErrorOverlayBody;\nfunction ErrorOverlayBodyContents(_ref4) {\n  var _HEADER_TITLE_MAP, _log$componentStack;\n  var log = _ref4.log,\n    onRetry = _ref4.onRetry;\n  var _ref5 = (0, react_1.useState)(true),\n    _ref6 = _slicedToArray(_ref5, 2),\n    collapsed = _ref6[0],\n    setCollapsed = _ref6[1];\n  (0, react_1.useEffect)(function () {\n    setCollapsed(true);\n  }, [log]);\n  var headerTitle = (_HEADER_TITLE_MAP = HEADER_TITLE_MAP[log.isComponentError ? 'component' : log.level]) != null ? _HEADER_TITLE_MAP : log.type;\n  var header = react_1.default.createElement(LogBoxInspectorMessageHeader_1.LogBoxInspectorMessageHeader, {\n    collapsed: collapsed,\n    onPress: function onPress() {\n      return setCollapsed(!collapsed);\n    },\n    message: log.message,\n    level: log.level,\n    title: headerTitle\n  });\n  var needsStack = !log.message.content.match(/(Expected server HTML to contain a matching|Text content did not match\\.)/);\n  return react_1.default.createElement(react_1.default.Fragment, null, collapsed && header, react_1.default.createElement(react_native_1.ScrollView, {\n    style: styles.scrollBody\n  }, !collapsed && header, react_1.default.createElement(LogBoxInspectorCodeFrame_1.LogBoxInspectorCodeFrame, {\n    codeFrame: log.codeFrame\n  }), needsStack && react_1.default.createElement(LogBoxInspectorStackFrames_1.LogBoxInspectorStackFrames, {\n    type: \"stack\",\n    onRetry: onRetry.bind(onRetry, 'stack')\n  }), !!(log != null && (_log$componentStack = log.componentStack) != null && _log$componentStack.length) && react_1.default.createElement(LogBoxInspectorStackFrames_1.LogBoxInspectorStackFrames, {\n    type: \"component\",\n    onRetry: onRetry.bind(onRetry, 'component')\n  })));\n}\nexports.ErrorOverlayBodyContents = ErrorOverlayBodyContents;\nvar styles = react_native_1.StyleSheet.create({\n  scrollBody: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(1),\n    flex: 1\n  },\n  container: {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    zIndex: 999,\n    flex: 1,\n    position: 'fixed'\n  }\n});\nexports.default = LogBoxData.withSubscription(LogBoxInspectorContainer);","map":{"version":3,"names":["react_1","__importStar","require","react_native_1","LogBoxData","LogContext_1","LogBoxStyle","LogBoxInspectorCodeFrame_1","LogBoxInspectorFooter_1","LogBoxInspectorHeader_1","LogBoxInspectorMessageHeader_1","LogBoxInspectorStackFrames_1","HEADER_TITLE_MAP","warn","error","fatal","syntax","static","component","LogBoxInspectorContainer","_ref","useLogs","selectedLogIndex","logs","log","default","createElement","LogBoxInspector","exports","_ref2","onDismiss","useCallback","logsArray","Array","from","length","setSelectedLog","dismiss","onMinimize","onChangeSelectedIndex","index","useEffect","symbolicateLogNow","selected","lastIndex","prevIndex","nextIndex","type","symbolicateLogLazy","Keyboard","_handleRetry","retrySymbolicateLogNow","View","style","styles","container","LogBoxInspectorHeader","onSelectIndex","level","ErrorOverlayBody","onRetry","LogBoxInspectorFooter","_ref3","useSelectedLog","ErrorOverlayBodyContents","_ref4","_HEADER_TITLE_MAP","_log$componentStack","_ref5","useState","_ref6","_slicedToArray","collapsed","setCollapsed","headerTitle","isComponentError","header","LogBoxInspectorMessageHeader","onPress","message","title","needsStack","content","match","Fragment","ScrollView","scrollBody","LogBoxInspectorCodeFrame","codeFrame","LogBoxInspectorStackFrames","bind","componentStack","StyleSheet","create","backgroundColor","getBackgroundColor","flex","top","left","bottom","right","zIndex","position","withSubscription"],"sources":["/Users/jonathanbruce/Coding/trackr/node_modules/@expo/metro-runtime/src/error-overlay/ErrorOverlay.tsx"],"sourcesContent":["/**\n * Copyright (c) 650 Industries.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Keyboard, ScrollView, View, StyleSheet } from 'react-native';\n\nimport * as LogBoxData from './Data/LogBoxData';\nimport { LogBoxLog, StackType } from './Data/LogBoxLog';\nimport { useLogs, useSelectedLog } from './Data/LogContext';\nimport * as LogBoxStyle from './UI/LogBoxStyle';\nimport { LogBoxInspectorCodeFrame } from './overlay/LogBoxInspectorCodeFrame';\nimport { LogBoxInspectorFooter as ErrorOverlayFooter } from './overlay/LogBoxInspectorFooter';\nimport { LogBoxInspectorHeader as ErrorOverlayHeader } from './overlay/LogBoxInspectorHeader';\nimport { LogBoxInspectorMessageHeader } from './overlay/LogBoxInspectorMessageHeader';\nimport { LogBoxInspectorStackFrames } from './overlay/LogBoxInspectorStackFrames';\n\nconst HEADER_TITLE_MAP = {\n  warn: 'Console Warning',\n  error: 'Console Error',\n  fatal: 'Uncaught Error',\n  syntax: 'Syntax Error',\n  static: 'Static Rendering Error (Node.js)',\n  component: 'Render Error',\n};\n\nexport function LogBoxInspectorContainer() {\n  const { selectedLogIndex, logs } = useLogs();\n  const log = logs[selectedLogIndex];\n  if (log == null) {\n    return null;\n  }\n  return <LogBoxInspector log={log} selectedLogIndex={selectedLogIndex} logs={logs} />;\n}\n\nexport function LogBoxInspector({\n  log,\n  selectedLogIndex,\n  logs,\n}: {\n  log: LogBoxLog;\n  selectedLogIndex: number;\n  logs: LogBoxLog[];\n}) {\n  const onDismiss = useCallback((): void => {\n    // Here we handle the cases when the log is dismissed and it\n    // was either the last log, or when the current index\n    // is now outside the bounds of the log array.\n    const logsArray = Array.from(logs);\n    if (selectedLogIndex != null) {\n      if (logsArray.length - 1 <= 0) {\n        LogBoxData.setSelectedLog(-1);\n      } else if (selectedLogIndex >= logsArray.length - 1) {\n        LogBoxData.setSelectedLog(selectedLogIndex - 1);\n      }\n\n      LogBoxData.dismiss(logsArray[selectedLogIndex]);\n    }\n  }, [selectedLogIndex]);\n\n  const onMinimize = useCallback((): void => {\n    LogBoxData.setSelectedLog(-1);\n  }, []);\n\n  const onChangeSelectedIndex = useCallback((index: number): void => {\n    LogBoxData.setSelectedLog(index);\n  }, []);\n\n  useEffect(() => {\n    if (log) {\n      LogBoxData.symbolicateLogNow('stack', log);\n      LogBoxData.symbolicateLogNow('component', log);\n    }\n  }, [log]);\n\n  useEffect(() => {\n    // Optimistically symbolicate the last and next logs.\n    if (logs.length > 1) {\n      const selected = selectedLogIndex;\n      const lastIndex = logs.length - 1;\n      const prevIndex = selected - 1 < 0 ? lastIndex : selected - 1;\n      const nextIndex = selected + 1 > lastIndex ? 0 : selected + 1;\n      for (const type of ['component', 'stack'] as const) {\n        LogBoxData.symbolicateLogLazy(type, logs[prevIndex]);\n        LogBoxData.symbolicateLogLazy(type, logs[nextIndex]);\n      }\n    }\n  }, [logs, selectedLogIndex]);\n\n  useEffect(() => {\n    Keyboard.dismiss();\n  }, []);\n\n  const _handleRetry = useCallback(\n    (type: StackType) => {\n      LogBoxData.retrySymbolicateLogNow(type, log);\n    },\n    [log]\n  );\n\n  return (\n    <View style={styles.container}>\n      <ErrorOverlayHeader onSelectIndex={onChangeSelectedIndex} level={log.level} />\n      <ErrorOverlayBody onRetry={_handleRetry} />\n      <ErrorOverlayFooter onDismiss={onDismiss} onMinimize={onMinimize} />\n    </View>\n  );\n}\n\nexport function ErrorOverlayBody({ onRetry }: { onRetry: (type: StackType) => void }) {\n  const log = useSelectedLog();\n  return <ErrorOverlayBodyContents log={log} onRetry={onRetry} />;\n}\n\nexport function ErrorOverlayBodyContents({\n  log,\n  onRetry,\n}: {\n  log: LogBoxLog;\n  onRetry: (type: StackType) => void;\n}) {\n  const [collapsed, setCollapsed] = useState(true);\n\n  useEffect(() => {\n    setCollapsed(true);\n  }, [log]);\n\n  const headerTitle = HEADER_TITLE_MAP[log.isComponentError ? 'component' : log.level] ?? log.type;\n\n  const header = (\n    <LogBoxInspectorMessageHeader\n      collapsed={collapsed}\n      onPress={() => setCollapsed(!collapsed)}\n      message={log.message}\n      level={log.level}\n      title={headerTitle}\n    />\n  );\n\n  // Hide useless React stack.\n  const needsStack = !log.message.content.match(\n    /(Expected server HTML to contain a matching|Text content did not match\\.)/\n  );\n\n  return (\n    <>\n      {collapsed && header}\n      <ScrollView style={styles.scrollBody}>\n        {!collapsed && header}\n\n        <LogBoxInspectorCodeFrame codeFrame={log.codeFrame} />\n        {needsStack && (\n          <LogBoxInspectorStackFrames\n            type=\"stack\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onRetry={onRetry.bind(onRetry, 'stack')}\n          />\n        )}\n        {!!log?.componentStack?.length && (\n          <LogBoxInspectorStackFrames\n            type=\"component\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onRetry={onRetry.bind(onRetry, 'component')}\n          />\n        )}\n      </ScrollView>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  scrollBody: {\n    backgroundColor: LogBoxStyle.getBackgroundColor(1),\n    flex: 1,\n  },\n  container: {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    zIndex: 999,\n    flex: 1,\n    // @ts-expect-error: fixed is not in the RN types but it works on web\n    position: 'fixed',\n  },\n});\n\nexport default LogBoxData.withSubscription(LogBoxInspectorContainer);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}