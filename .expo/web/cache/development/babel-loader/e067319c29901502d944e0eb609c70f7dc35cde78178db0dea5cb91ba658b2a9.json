{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchAsync = void 0;\nfunction fetchAsync(_x) {\n  return _fetchAsync.apply(this, arguments);\n}\nfunction _fetchAsync() {\n  _fetchAsync = _asyncToGenerator(function* (url) {\n    var response = yield fetch(url, {\n      method: 'GET',\n      headers: {\n        'expo-platform': 'web'\n      }\n    });\n    return {\n      body: yield response.text(),\n      status: response.status,\n      headers: response.headers\n    };\n  });\n  return _fetchAsync.apply(this, arguments);\n}\nexports.fetchAsync = fetchAsync;","map":{"version":3,"names":["fetchAsync","_x","_fetchAsync","apply","arguments","_asyncToGenerator","url","response","fetch","method","headers","body","text","status","exports"],"sources":["/Users/jonathanbruce/Coding/trackr/node_modules/@expo/metro-runtime/src/async-require/fetchAsync.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport async function fetchAsync(\n  url: string\n): Promise<{ body: string; status: number; headers: Headers }> {\n  const response = await fetch(url, {\n    method: 'GET',\n    headers: {\n      // No real reason for this but we try to use this format for everything.\n      'expo-platform': 'web',\n    },\n  });\n  return {\n    body: await response.text(),\n    status: response.status,\n    headers: response.headers,\n  };\n}\n"],"mappings":";;;;;;;SAMsBA,UAAUA,CAAAC,EAAA;EAAA,OAAAC,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,YAAA;EAAAA,WAAA,GAAAG,iBAAA,CAAzB,WACLC,GAAW;IAEX,IAAMC,QAAQ,SAASC,KAAK,CAACF,GAAG,EAAE;MAChCG,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAEP,eAAe,EAAE;;KAEpB,CAAC;IACF,OAAO;MACLC,IAAI,QAAQJ,QAAQ,CAACK,IAAI,EAAE;MAC3BC,MAAM,EAAEN,QAAQ,CAACM,MAAM;MACvBH,OAAO,EAAEH,QAAQ,CAACG;KACnB;EACH,CAAC;EAAA,OAAAR,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAfDU,OAAA,CAAAd,UAAA,GAAAA,UAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}