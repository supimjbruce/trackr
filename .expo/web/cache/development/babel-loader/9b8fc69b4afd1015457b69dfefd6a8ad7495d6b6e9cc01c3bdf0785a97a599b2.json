{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _excluded = [\"children\"];\nvar _jsxFileName = \"/Users/jonathanbruce/Coding/trackr/node_modules/expo-router/build/layouts/withLayoutContext.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withLayoutContext = exports.useFilterScreenChildren = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar Route_1 = require(\"../Route\");\nvar useScreens_1 = require(\"../useScreens\");\nvar Screen_1 = require(\"../views/Screen\");\nfunction useFilterScreenChildren(children) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    isCustomNavigator = _ref.isCustomNavigator,\n    contextKey = _ref.contextKey;\n  return react_1.default.useMemo(function () {\n    var customChildren = [];\n    var screens = react_1.default.Children.map(children, function (child) {\n      if (react_1.default.isValidElement(child) && child && child.type === Screen_1.Screen) {\n        if (!child.props.name) {\n          throw new Error(`<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must have a \\`name\\` prop when used as a child of a Layout Route.`);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n          if (['children', 'component', 'getComponent'].some(function (key) {\n            return key in child.props;\n          })) {\n            throw new Error(`<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must not have a \\`children\\`, \\`component\\`, or \\`getComponent\\` prop when used as a child of a Layout Route`);\n          }\n        }\n        return child.props;\n      } else {\n        if (isCustomNavigator) {\n          customChildren.push(child);\n        } else {\n          console.warn(`Layout children must be of type Screen, all other children are ignored. To use custom children, create a custom <Layout />. Update Layout Route at: \"app${contextKey}/_layout\"`);\n        }\n      }\n    });\n    if (process.env.NODE_ENV !== 'production') {\n      var names = screens == null ? void 0 : screens.map(function (screen) {\n        return screen.name;\n      });\n      if (names && new Set(names).size !== names.length) {\n        throw new Error('Screen names must be unique: ' + names);\n      }\n    }\n    return {\n      screens: screens,\n      children: customChildren\n    };\n  }, [children]);\n}\nexports.useFilterScreenChildren = useFilterScreenChildren;\nfunction withLayoutContext(Nav, processor) {\n  var _this = this;\n  var Navigator = react_1.default.forwardRef(function (_ref2, ref) {\n    var userDefinedChildren = _ref2.children,\n      props = _objectWithoutProperties(_ref2, _excluded);\n    var contextKey = (0, Route_1.useContextKey)();\n    var _useFilterScreenChild = useFilterScreenChildren(userDefinedChildren, {\n        contextKey: contextKey\n      }),\n      screens = _useFilterScreenChild.screens;\n    var processed = processor ? processor(screens != null ? screens : []) : screens;\n    var sorted = (0, useScreens_1.useSortedScreens)(processed != null ? processed : []);\n    if (!sorted.length) {\n      return null;\n    }\n    return (_reactJsxDevRuntime.jsxDEV(Nav, _objectSpread(_objectSpread({}, props), {}, {\n        id: contextKey,\n        ref: ref,\n        children: sorted\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, _this)\n    );\n  });\n  Navigator.Screen = Screen_1.Screen;\n  return Navigator;\n}\nexports.withLayoutContext = withLayoutContext;","map":{"version":3,"names":["react_1","__importDefault","require","Route_1","useScreens_1","Screen_1","useFilterScreenChildren","children","_ref","arguments","length","undefined","isCustomNavigator","contextKey","default","useMemo","customChildren","screens","Children","map","child","isValidElement","type","Screen","props","name","Error","process","env","NODE_ENV","some","key","push","console","warn","names","screen","Set","size","exports","withLayoutContext","Nav","processor","_this","Navigator","forwardRef","_ref2","ref","userDefinedChildren","_objectWithoutProperties","_excluded","useContextKey","_useFilterScreenChild","processed","sorted","useSortedScreens","_reactJsxDevRuntime","jsxDEV","_objectSpread","id","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/jonathanbruce/Coding/trackr/node_modules/expo-router/src/layouts/withLayoutContext.tsx"],"sourcesContent":["import { EventMapBase, NavigationState } from '@react-navigation/native';\nimport React from 'react';\n\nimport { useContextKey } from '../Route';\nimport { PickPartial } from '../types';\nimport { useSortedScreens, ScreenProps } from '../useScreens';\nimport { Screen } from '../views/Screen';\n\nexport function useFilterScreenChildren(\n  children: React.ReactNode,\n  {\n    isCustomNavigator,\n    contextKey,\n  }: {\n    isCustomNavigator?: boolean;\n    /** Used for sending developer hints */\n    contextKey?: string;\n  } = {}\n) {\n  return React.useMemo(() => {\n    const customChildren: any[] = [];\n    const screens = React.Children.map(children, (child) => {\n      if (React.isValidElement(child) && child && child.type === Screen) {\n        if (!child.props.name) {\n          throw new Error(\n            `<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must have a \\`name\\` prop when used as a child of a Layout Route.`\n          );\n        }\n        if (process.env.NODE_ENV !== 'production') {\n          if (['children', 'component', 'getComponent'].some((key) => key in child.props)) {\n            throw new Error(\n              `<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must not have a \\`children\\`, \\`component\\`, or \\`getComponent\\` prop when used as a child of a Layout Route`\n            );\n          }\n        }\n        return child.props;\n      } else {\n        if (isCustomNavigator) {\n          customChildren.push(child);\n        } else {\n          console.warn(\n            `Layout children must be of type Screen, all other children are ignored. To use custom children, create a custom <Layout />. Update Layout Route at: \"app${contextKey}/_layout\"`\n          );\n        }\n      }\n    });\n\n    // Add an assertion for development\n    if (process.env.NODE_ENV !== 'production') {\n      // Assert if names are not unique\n      const names = screens?.map((screen) => screen.name);\n      if (names && new Set(names).size !== names.length) {\n        throw new Error('Screen names must be unique: ' + names);\n      }\n    }\n\n    return {\n      screens,\n      children: customChildren,\n    };\n  }, [children]);\n}\n\n/** Return a navigator that automatically injects matched routes and renders nothing when there are no children. Return type with children prop optional */\nexport function withLayoutContext<\n  TOptions extends object,\n  T extends React.ComponentType<any>,\n  State extends NavigationState,\n  EventMap extends EventMapBase,\n>(\n  Nav: T,\n  processor?: (\n    options: ScreenProps<TOptions, State, EventMap>[]\n  ) => ScreenProps<TOptions, State, EventMap>[]\n): React.ForwardRefExoticComponent<\n  React.PropsWithoutRef<PickPartial<React.ComponentProps<T>, 'children'>> &\n    React.RefAttributes<unknown>\n> & {\n  Screen: (props: ScreenProps<TOptions, State, EventMap>) => null;\n} {\n  const Navigator = React.forwardRef(\n    (\n      { children: userDefinedChildren, ...props }: PickPartial<React.ComponentProps<T>, 'children'>,\n      ref\n    ) => {\n      const contextKey = useContextKey();\n\n      const { screens } = useFilterScreenChildren(userDefinedChildren, {\n        contextKey,\n      });\n\n      const processed = processor ? processor(screens ?? []) : screens;\n\n      const sorted = useSortedScreens(processed ?? []);\n\n      // Prevent throwing an error when there are no screens.\n      if (!sorted.length) {\n        return null;\n      }\n\n      return (\n        // @ts-expect-error\n        <Nav {...props} id={contextKey} ref={ref} children={sorted} />\n      );\n    }\n  );\n\n  // @ts-expect-error\n  Navigator.Screen = Screen;\n  // @ts-expect-error\n  return Navigator;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}